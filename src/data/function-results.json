{"functions": ["{\"type\": \"functions\", \"project_source\": \"https://github.com/s0md3v/XSStrike\", \"direct_link_to_file_line\": \"https://github.com/s0md3v/XSStrike/blob/master/XSStrike/core/encoders.py#L5\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def base64(string):\"}, {\"line_number\": 2, \"line_content\": \"    if re.match('^[A-Za-z0-9+\\\\\\\\/=]+$', string) and len(string) % 4 == 0:\"}, {\"line_number\": 3, \"line_content\": \"        return b64.b64decode(string.encode('utf-8')).decode('utf-8')\"}, {\"line_number\": 4, \"line_content\": \"    else:\"}, {\"line_number\": 5, \"line_content\": \"        return b64.b64encode(string.encode('utf-8')).decode('utf-8')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/s0md3v/XSStrike\", \"direct_link_to_file_line\": \"https://github.com/s0md3v/XSStrike/blob/master/XSStrike/core/log.py#L134\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def log_red_line(self, amount=60, level='INFO'):\"}, {\"line_number\": 2, \"line_content\": \"    _switch_to_no_format_loggers(self)\"}, {\"line_number\": 3, \"line_content\": \"    _get_level_and_log(self, red + '-' * amount + end, level)\"}, {\"line_number\": 4, \"line_content\": \"    _switch_to_default_loggers(self)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/s0md3v/XSStrike\", \"direct_link_to_file_line\": \"https://github.com/s0md3v/XSStrike/blob/master/XSStrike/core/log.py#L140\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def log_no_format(self, msg='', level='INFO'):\"}, {\"line_number\": 2, \"line_content\": \"    _switch_to_no_format_loggers(self)\"}, {\"line_number\": 3, \"line_content\": \"    _get_level_and_log(self, msg, level)\"}, {\"line_number\": 4, \"line_content\": \"    _switch_to_default_loggers(self)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/s0md3v/XSStrike\", \"direct_link_to_file_line\": \"https://github.com/s0md3v/XSStrike/blob/master/XSStrike/core/log.py#L86\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def format(self, record):\"}, {\"line_number\": 2, \"line_content\": \"    msg = super().format(record)\"}, {\"line_number\": 3, \"line_content\": \"    if record.levelname in log_config.keys():\"}, {\"line_number\": 4, \"line_content\": \"        msg = '%s %s %s' % (log_config[record.levelname]['prefix'], msg, end)\"}, {\"line_number\": 5, \"line_content\": \"    return msg\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/s0md3v/XSStrike\", \"direct_link_to_file_line\": \"https://github.com/s0md3v/XSStrike/blob/master/XSStrike/core/utils.py#L105\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def getUrl(url, GET):\"}, {\"line_number\": 2, \"line_content\": \"    if GET:\"}, {\"line_number\": 3, \"line_content\": \"        return url.split('?')[0]\"}, {\"line_number\": 4, \"line_content\": \"    else:\"}, {\"line_number\": 5, \"line_content\": \"        return url\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ddbourgin/numpy-ml\", \"direct_link_to_file_line\": \"https://github.com/ddbourgin/numpy-ml/blob/master/numpy-ml/numpy_ml/trees/dt.py#L215\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def mse(y):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    Mean squared error for decision tree (ie., mean) predictions\"}, {\"line_number\": 4, \"line_content\": \"    \\\"\\\"\\\"\"}, {\"line_number\": 5, \"line_content\": \"    return np.mean((y - np.mean(y)) ** 2)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ddbourgin/numpy-ml\", \"direct_link_to_file_line\": \"https://github.com/ddbourgin/numpy-ml/blob/master/numpy-ml/numpy_ml/trees/dt.py#L5\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, left, right, rule):\"}, {\"line_number\": 2, \"line_content\": \"    self.left = left\"}, {\"line_number\": 3, \"line_content\": \"    self.right = right\"}, {\"line_number\": 4, \"line_content\": \"    self.feature = rule[0]\"}, {\"line_number\": 5, \"line_content\": \"    self.threshold = rule[1]\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ddbourgin/numpy-ml\", \"direct_link_to_file_line\": \"https://github.com/ddbourgin/numpy-ml/blob/master/numpy-ml/numpy_ml/trees/rf.py#L5\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def bootstrap_sample(X, Y):\"}, {\"line_number\": 2, \"line_content\": \"    N, M = X.shape\"}, {\"line_number\": 3, \"line_content\": \"    idxs = np.random.choice(N, N, replace=True)\"}, {\"line_number\": 4, \"line_content\": \"    return X[idxs], Y[idxs]\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ddbourgin/numpy-ml\", \"direct_link_to_file_line\": \"https://github.com/ddbourgin/numpy-ml/blob/master/numpy-ml/numpy_ml/trees/losses.py#L12\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def predict(self, X):\"}, {\"line_number\": 2, \"line_content\": \"    pred = np.empty(X.shape[0], dtype=np.float64)\"}, {\"line_number\": 3, \"line_content\": \"    pred.fill(self.class_prob)\"}, {\"line_number\": 4, \"line_content\": \"    return pred\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ddbourgin/numpy-ml\", \"direct_link_to_file_line\": \"https://github.com/ddbourgin/numpy-ml/blob/master/numpy-ml/numpy_ml/trees/losses.py#L12\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def predict(self, X):\"}, {\"line_number\": 2, \"line_content\": \"    pred = np.empty(X.shape[0], dtype=np.float64)\"}, {\"line_number\": 3, \"line_content\": \"    pred.fill(self.avg)\"}, {\"line_number\": 4, \"line_content\": \"    return pred\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/coleifer/peewee\", \"direct_link_to_file_line\": \"https://github.com/coleifer/peewee/blob/master/peewee/bench.py#L41\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def populate_collections(n, n_i):\"}, {\"line_number\": 2, \"line_content\": \"    for i in range(n):\"}, {\"line_number\": 3, \"line_content\": \"        c = Collection.create(name=str(i))\"}, {\"line_number\": 4, \"line_content\": \"        for j in range(n_i):\"}, {\"line_number\": 5, \"line_content\": \"            Item.create(collection=c, name=str(j))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/coleifer/peewee\", \"direct_link_to_file_line\": \"https://github.com/coleifer/peewee/blob/master/peewee/bench.py#L47\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@timed\"}, {\"line_number\": 2, \"line_content\": \"def insert(i):\"}, {\"line_number\": 3, \"line_content\": \"    with db.atomic():\"}, {\"line_number\": 4, \"line_content\": \"        populate_register(i * 1000, (i + 1) * 1000)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/coleifer/peewee\", \"direct_link_to_file_line\": \"https://github.com/coleifer/peewee/blob/master/peewee/bench.py#L47\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"@timed\"}, {\"line_number\": 2, \"line_content\": \"def batch_insert(i):\"}, {\"line_number\": 3, \"line_content\": \"    it = range(i * 1000, (i + 1) * 1000)\"}, {\"line_number\": 4, \"line_content\": \"    for i in db.batch_commit(it, 100):\"}, {\"line_number\": 5, \"line_content\": \"        Register.insert(value=i).execute()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/coleifer/peewee\", \"direct_link_to_file_line\": \"https://github.com/coleifer/peewee/blob/master/peewee/bench.py#L47\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"@timed\"}, {\"line_number\": 2, \"line_content\": \"def bulk_create(i):\"}, {\"line_number\": 3, \"line_content\": \"    with db.atomic():\"}, {\"line_number\": 4, \"line_content\": \"        data = [Register(value=i) for i in range(i * 1000, (i + 1) * 1000)]\"}, {\"line_number\": 5, \"line_content\": \"        Register.bulk_create(data, batch_size=100)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/coleifer/peewee\", \"direct_link_to_file_line\": \"https://github.com/coleifer/peewee/blob/master/peewee/bench.py#L47\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"@timed\"}, {\"line_number\": 2, \"line_content\": \"def select(i):\"}, {\"line_number\": 3, \"line_content\": \"    query = Register.select()\"}, {\"line_number\": 4, \"line_content\": \"    for row in query:\"}, {\"line_number\": 5, \"line_content\": \"        pass\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/codelucas/newspaper\", \"direct_link_to_file_line\": \"https://github.com/codelucas/newspaper/blob/master/newspaper/download_corpora.py#L17\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def main():\"}, {\"line_number\": 2, \"line_content\": \"    for each in REQUIRED_CORPORA:\"}, {\"line_number\": 3, \"line_content\": \"        print('Downloading \\\"{0}\\\"'.format(each))\"}, {\"line_number\": 4, \"line_content\": \"        nltk.download(each)\"}, {\"line_number\": 5, \"line_content\": \"    print('Finished.')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/codelucas/newspaper\", \"direct_link_to_file_line\": \"https://github.com/codelucas/newspaper/blob/master/newspaper/newspaper/source.py#L28\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, url):\"}, {\"line_number\": 2, \"line_content\": \"    self.url = url\"}, {\"line_number\": 3, \"line_content\": \"    self.html = None\"}, {\"line_number\": 4, \"line_content\": \"    self.doc = None\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/codelucas/newspaper\", \"direct_link_to_file_line\": \"https://github.com/codelucas/newspaper/blob/master/newspaper/newspaper/source.py#L177\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def download(self):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Downloads html of source\"}, {\"line_number\": 3, \"line_content\": \"        \\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    self.html = network.get_html(self.url, self.config)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/codelucas/newspaper\", \"direct_link_to_file_line\": \"https://github.com/codelucas/newspaper/blob/master/newspaper/newspaper/source.py#L248\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def parse_feeds(self):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Add titles to feeds\"}, {\"line_number\": 3, \"line_content\": \"        \\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    log.debug('We are parsing %d feeds' % len(self.feeds))\"}, {\"line_number\": 5, \"line_content\": \"    self.feeds = [self._map_title_to_feed(f) for f in self.feeds]\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/codelucas/newspaper\", \"direct_link_to_file_line\": \"https://github.com/codelucas/newspaper/blob/master/newspaper/newspaper/source.py#L386\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def clean_memo_cache(self):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Clears the memoization cache for this specific news domain\"}, {\"line_number\": 3, \"line_content\": \"        \\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    utils.clear_memo_cache(self)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/mirumee/saleor\", \"direct_link_to_file_line\": \"https://github.com/mirumee/saleor/blob/master/saleor/saleor/checkout/models.py#L192\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __eq__(self, other):\"}, {\"line_number\": 2, \"line_content\": \"    if not isinstance(other, CheckoutLine):\"}, {\"line_number\": 3, \"line_content\": \"        return NotImplemented\"}, {\"line_number\": 4, \"line_content\": \"    return self.variant == other.variant and self.quantity == other.quantity\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/mirumee/saleor\", \"direct_link_to_file_line\": \"https://github.com/mirumee/saleor/blob/master/saleor/saleor/checkout/utils.py#L416\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def remove_voucher_code_from_checkout(checkout: Checkout, voucher_code: str):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Remove voucher data from checkout by code.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    existing_voucher = get_voucher_for_checkout(checkout)\"}, {\"line_number\": 4, \"line_content\": \"    if existing_voucher and existing_voucher.code == voucher_code:\"}, {\"line_number\": 5, \"line_content\": \"        remove_voucher_from_checkout(checkout)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/mirumee/saleor\", \"direct_link_to_file_line\": \"https://github.com/mirumee/saleor/blob/master/saleor/saleor/checkout/migrations/0007_merge_cart_with_checkout.py#L7\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def fix_blank_emails_in_carts(apps, schema_editor):\"}, {\"line_number\": 2, \"line_content\": \"    Cart = apps.get_model('checkout', 'Cart')\"}, {\"line_number\": 3, \"line_content\": \"    for cart in Cart.objects.filter(email__isnull=True):\"}, {\"line_number\": 4, \"line_content\": \"        cart.email = ''\"}, {\"line_number\": 5, \"line_content\": \"        cart.save()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/mirumee/saleor\", \"direct_link_to_file_line\": \"https://github.com/mirumee/saleor/blob/master/saleor/saleor/checkout/tests/test_checkout.py#L1346\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_add_voucher_to_checkout(checkout_with_item, voucher):\"}, {\"line_number\": 2, \"line_content\": \"    assert checkout_with_item.voucher_code is None\"}, {\"line_number\": 3, \"line_content\": \"    add_voucher_to_checkout(checkout_with_item, list(checkout_with_item),\"}, {\"line_number\": 4, \"line_content\": \"        voucher)\"}, {\"line_number\": 5, \"line_content\": \"    assert checkout_with_item.voucher_code == voucher.code\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/mirumee/saleor\", \"direct_link_to_file_line\": \"https://github.com/mirumee/saleor/blob/master/saleor/saleor/checkout/tests/test_checkout.py#L1412\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_get_last_active_payment(checkout_with_payments):\"}, {\"line_number\": 2, \"line_content\": \"    payment = Payment.objects.create(gateway='mirumee.payments.dummy',\"}, {\"line_number\": 3, \"line_content\": \"        is_active=True, checkout=checkout_with_payments)\"}, {\"line_number\": 4, \"line_content\": \"    last_payment = checkout_with_payments.get_last_active_payment()\"}, {\"line_number\": 5, \"line_content\": \"    assert last_payment.pk == payment.pk\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/apache/airflow\", \"direct_link_to_file_line\": \"https://github.com/apache/airflow/blob/master/airflow/setup.py#L79\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def run(self):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Run command to remove temporary files and directories.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    os.chdir(my_dir)\"}, {\"line_number\": 4, \"line_content\": \"    os.system('rm -vrf ./build ./dist ./*.pyc ./*.tgz ./*.egg-info')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/apache/airflow\", \"direct_link_to_file_line\": \"https://github.com/apache/airflow/blob/master/airflow/scripts/perf/scheduler_dag_execution_timing.py#L36\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, dag_ids_to_watch, num_runs):\"}, {\"line_number\": 2, \"line_content\": \"    super().__init__()\"}, {\"line_number\": 3, \"line_content\": \"    self.num_runs_per_dag = num_runs\"}, {\"line_number\": 4, \"line_content\": \"    self.reset(dag_ids_to_watch)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/apache/airflow\", \"direct_link_to_file_line\": \"https://github.com/apache/airflow/blob/master/airflow/scripts/perf/perf_kit/sqlalchemy.py#L99\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __enter__(self):\"}, {\"line_number\": 2, \"line_content\": \"    import airflow.settings\"}, {\"line_number\": 3, \"line_content\": \"    event.listen(airflow.settings.engine, 'after_cursor_execute', self.\"}, {\"line_number\": 4, \"line_content\": \"        after_cursor_execute)\"}, {\"line_number\": 5, \"line_content\": \"    return self.result\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/apache/airflow\", \"direct_link_to_file_line\": \"https://github.com/apache/airflow/blob/master/airflow/scripts/perf/perf_kit/sqlalchemy.py#L105\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __exit__(self, type_, value, traceback):\"}, {\"line_number\": 2, \"line_content\": \"    import airflow.settings\"}, {\"line_number\": 3, \"line_content\": \"    event.remove(airflow.settings.engine, 'after_cursor_execute', self.\"}, {\"line_number\": 4, \"line_content\": \"        after_cursor_execute)\"}, {\"line_number\": 5, \"line_content\": \"    self.print_fn(f'Count SQL queries: {self.result.count}')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/apache/airflow\", \"direct_link_to_file_line\": \"https://github.com/apache/airflow/blob/master/airflow/scripts/perf/perf_kit/memory.py#L38\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self):\"}, {\"line_number\": 2, \"line_content\": \"    self.before = 0\"}, {\"line_number\": 3, \"line_content\": \"    self.after = 0\"}, {\"line_number\": 4, \"line_content\": \"    self.value = 0\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/Jack-Cherish/python-spider\", \"direct_link_to_file_line\": \"https://github.com/Jack-Cherish/python-spider/blob/master/python-spider/biqukan.py#L24\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, target):\"}, {\"line_number\": 2, \"line_content\": \"    self.__target_url = target\"}, {\"line_number\": 3, \"line_content\": \"    self.__head = {'User-Agent':\"}, {\"line_number\": 4, \"line_content\": \"        'Mozilla/5.0 (Linux; Android 4.1.1; Nexus 7 Build/JRO03D) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.166  Safari/535.19'\"}, {\"line_number\": 5, \"line_content\": \"        }\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/Jack-Cherish/python-spider\", \"direct_link_to_file_line\": \"https://github.com/Jack-Cherish/python-spider/blob/master/python-spider/baiduwenku_pro_1.py#L74\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def save_file(filename, content):\"}, {\"line_number\": 2, \"line_content\": \"    with open(filename, 'w', encoding='utf8') as f:\"}, {\"line_number\": 3, \"line_content\": \"        f.write(content)\"}, {\"line_number\": 4, \"line_content\": \"        print('\\u5df2\\u4fdd\\u5b58\\u4e3a:' + filename)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/Jack-Cherish/python-spider\", \"direct_link_to_file_line\": \"https://github.com/Jack-Cherish/python-spider/blob/master/python-spider/douyin.py#L7\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"\\t\\t\\u6296\\u97f3App\\u89c6\\u9891\\u4e0b\\u8f7d\"}, {\"line_number\": 4, \"line_content\": \"\\t\\t\\\"\\\"\\\"\"}, {\"line_number\": 5, \"line_content\": \"    pass\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/Jack-Cherish/python-spider\", \"direct_link_to_file_line\": \"https://github.com/Jack-Cherish/python-spider/blob/master/python-spider/daili.py#L107\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def initpattern():\"}, {\"line_number\": 2, \"line_content\": \"    lose_time = re.compile('\\u4e22\\u5931 = (\\\\\\\\d+)', re.IGNORECASE)\"}, {\"line_number\": 3, \"line_content\": \"    waste_time = re.compile('\\u5e73\\u5747 = (\\\\\\\\d+)ms', re.IGNORECASE)\"}, {\"line_number\": 4, \"line_content\": \"    return lose_time, waste_time\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/Jack-Cherish/python-spider\", \"direct_link_to_file_line\": \"https://github.com/Jack-Cherish/python-spider/blob/master/python-spider/downloader.py#L18\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __get_info(self):\"}, {\"line_number\": 2, \"line_content\": \"    _info = self.info % (self.title, self.status, self.count / self.\"}, {\"line_number\": 3, \"line_content\": \"        chunk_size, self.unit, self.seq, self.total / self.chunk_size, self\"}, {\"line_number\": 4, \"line_content\": \"        .unit)\"}, {\"line_number\": 5, \"line_content\": \"    return _info\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/eriklindernoren/ML-From-Scratch\", \"direct_link_to_file_line\": \"https://github.com/eriklindernoren/ML-From-Scratch/blob/master/ML-From-Scratch/mlfromscratch/utils/data_operation.py#L19\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def mean_squared_error(y_true, y_pred):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\" Returns the mean squared error between y_true and y_pred \\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    mse = np.mean(np.power(y_true - y_pred, 2))\"}, {\"line_number\": 4, \"line_content\": \"    return mse\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/eriklindernoren/ML-From-Scratch\", \"direct_link_to_file_line\": \"https://github.com/eriklindernoren/ML-From-Scratch/blob/master/ML-From-Scratch/mlfromscratch/utils/data_operation.py#L34\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def calculate_std_dev(X):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\" Calculate the standard deviations of the features in dataset X \\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    std_dev = np.sqrt(calculate_variance(X))\"}, {\"line_number\": 4, \"line_content\": \"    return std_dev\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/eriklindernoren/ML-From-Scratch\", \"direct_link_to_file_line\": \"https://github.com/eriklindernoren/ML-From-Scratch/blob/master/ML-From-Scratch/mlfromscratch/utils/data_operation.py#L49\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def accuracy_score(y_true, y_pred):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\" Compare y_true to y_pred and return the accuracy \\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    accuracy = np.sum(y_true == y_pred, axis=0) / len(y_true)\"}, {\"line_number\": 4, \"line_content\": \"    return accuracy\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/eriklindernoren/ML-From-Scratch\", \"direct_link_to_file_line\": \"https://github.com/eriklindernoren/ML-From-Scratch/blob/master/ML-From-Scratch/mlfromscratch/utils/data_manipulation.py#L85\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def normalize(X, axis=-1, order=2):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\" Normalize the dataset X \\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    l2 = np.atleast_1d(np.linalg.norm(X, order, axis))\"}, {\"line_number\": 4, \"line_content\": \"    l2[l2 == 0] = 1\"}, {\"line_number\": 5, \"line_content\": \"    return X / np.expand_dims(l2, axis)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/eriklindernoren/ML-From-Scratch\", \"direct_link_to_file_line\": \"https://github.com/eriklindernoren/ML-From-Scratch/blob/master/ML-From-Scratch/mlfromscratch/utils/data_manipulation.py#L46\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def index_combinations():\"}, {\"line_number\": 2, \"line_content\": \"    combs = [combinations_with_replacement(range(n_features), i) for i in\"}, {\"line_number\": 3, \"line_content\": \"        range(0, degree + 1)]\"}, {\"line_number\": 4, \"line_content\": \"    flat_combs = [item for sublist in combs for item in sublist]\"}, {\"line_number\": 5, \"line_content\": \"    return flat_combs\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/Eloston/ungoogled-chromium\", \"direct_link_to_file_line\": \"https://github.com/Eloston/ungoogled-chromium/blob/master/ungoogled-chromium/utils/patches.py#L144\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _copy_files(path_iter, source, destination):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Copy files from source to destination with relative paths from path_iter\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    for path in path_iter:\"}, {\"line_number\": 4, \"line_content\": \"        (destination / path).parent.mkdir(parents=True, exist_ok=True)\"}, {\"line_number\": 5, \"line_content\": \"        shutil.copy2(str(source / path), str(destination / path))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/Eloston/ungoogled-chromium\", \"direct_link_to_file_line\": \"https://github.com/Eloston/ungoogled-chromium/blob/master/ungoogled-chromium/utils/domain_substitution.py#L51\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _compile_regex(self, line):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Generates a regex pair tuple for the given line\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    pattern, replacement = line.split(self._PATTERN_REPLACE_DELIM)\"}, {\"line_number\": 4, \"line_content\": \"    return self._regex_pair_tuple(re.compile(pattern), replacement)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/Eloston/ungoogled-chromium\", \"direct_link_to_file_line\": \"https://github.com/Eloston/ungoogled-chromium/blob/master/ungoogled-chromium/utils/downloads.py#L378\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _unpack_callback(args):\"}, {\"line_number\": 2, \"line_content\": \"    extractors = {ExtractorEnum.SEVENZIP: args.sevenz_path, ExtractorEnum.\"}, {\"line_number\": 3, \"line_content\": \"        WINRAR: args.winrar_path, ExtractorEnum.TAR: args.tar_path}\"}, {\"line_number\": 4, \"line_content\": \"    unpack_downloads(DownloadInfo(args.ini), args.cache, args.output,\"}, {\"line_number\": 5, \"line_content\": \"        extractors)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/Eloston/ungoogled-chromium\", \"direct_link_to_file_line\": \"https://github.com/Eloston/ungoogled-chromium/blob/master/ungoogled-chromium/utils/downloads.py#L56\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@staticmethod\"}, {\"line_number\": 2, \"line_content\": \"def _is_hash_url(value):\"}, {\"line_number\": 3, \"line_content\": \"    return value.count(DownloadInfo.hash_url_delimiter) == 2 and value.split(\"}, {\"line_number\": 4, \"line_content\": \"        DownloadInfo.hash_url_delimiter)[0] in iter(HashesURLEnum)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/Eloston/ungoogled-chromium\", \"direct_link_to_file_line\": \"https://github.com/Eloston/ungoogled-chromium/blob/master/ungoogled-chromium/utils/downloads.py#L125\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, ini_paths):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Reads an iterable of pathlib.Path to download.ini files\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    self._data = configparser.ConfigParser()\"}, {\"line_number\": 4, \"line_content\": \"    for path in ini_paths:\"}, {\"line_number\": 5, \"line_content\": \"        self._data.read_dict(self._parse_data(path))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tensorflow/models\", \"direct_link_to_file_line\": \"https://github.com/tensorflow/models/blob/master/models/official/nlp/optimization.py#L60\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_config(self):\"}, {\"line_number\": 2, \"line_content\": \"    return {'initial_learning_rate': self.initial_learning_rate,\"}, {\"line_number\": 3, \"line_content\": \"        'decay_schedule_fn': self.decay_schedule_fn, 'warmup_steps': self.\"}, {\"line_number\": 4, \"line_content\": \"        warmup_steps, 'power': self.power, 'name': self.name}\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tensorflow/models\", \"direct_link_to_file_line\": \"https://github.com/tensorflow/models/blob/master/models/official/nlp/optimization.py#L148\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _prepare_local(self, var_device, var_dtype, apply_state):\"}, {\"line_number\": 2, \"line_content\": \"    super(AdamWeightDecay, self)._prepare_local(var_device, var_dtype,\"}, {\"line_number\": 3, \"line_content\": \"        apply_state)\"}, {\"line_number\": 4, \"line_content\": \"    apply_state[var_device, var_dtype]['weight_decay_rate'] = tf.constant(self\"}, {\"line_number\": 5, \"line_content\": \"        .weight_decay_rate, name='adam_weight_decay_rate')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tensorflow/models\", \"direct_link_to_file_line\": \"https://github.com/tensorflow/models/blob/master/models/official/nlp/optimization.py#L60\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_config(self):\"}, {\"line_number\": 2, \"line_content\": \"    config = super(AdamWeightDecay, self).get_config()\"}, {\"line_number\": 3, \"line_content\": \"    config.update({'weight_decay_rate': self.weight_decay_rate})\"}, {\"line_number\": 4, \"line_content\": \"    return config\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tensorflow/models\", \"direct_link_to_file_line\": \"https://github.com/tensorflow/models/blob/master/models/official/nlp/bert/configs.py#L100\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def to_dict(self):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Serializes this instance to a Python dictionary.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    output = copy.deepcopy(self.__dict__)\"}, {\"line_number\": 4, \"line_content\": \"    return output\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tensorflow/models\", \"direct_link_to_file_line\": \"https://github.com/tensorflow/models/blob/master/models/official/nlp/bert/tokenization_test.py#L65\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_basic_tokenizer_lower(self):\"}, {\"line_number\": 2, \"line_content\": \"    tokenizer = tokenization.BasicTokenizer(do_lower_case=True)\"}, {\"line_number\": 3, \"line_content\": \"    self.assertAllEqual(tokenizer.tokenize(' \\\\tHeLLo!how  \\\\n Are yoU?  '),\"}, {\"line_number\": 4, \"line_content\": \"        ['hello', '!', 'how', 'are', 'you', '?'])\"}, {\"line_number\": 5, \"line_content\": \"    self.assertAllEqual(tokenizer.tokenize('H\\u00e9llo'), ['hello'])\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/kovidgoyal/calibre\", \"direct_link_to_file_line\": \"https://github.com/kovidgoyal/calibre/blob/master/calibre/bypy/linux/site.py#L41\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __repr__(self):\"}, {\"line_number\": 2, \"line_content\": \"    return (\"}, {\"line_number\": 3, \"line_content\": \"        'Type help() for interactive help, or help(object) for help about object.'\"}, {\"line_number\": 4, \"line_content\": \"        )\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/kovidgoyal/calibre\", \"direct_link_to_file_line\": \"https://github.com/kovidgoyal/calibre/blob/master/calibre/bypy/windows/__main__.py#L124\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def add_plugins(env, ext_dir):\"}, {\"line_number\": 2, \"line_content\": \"    printf('Adding plugins...')\"}, {\"line_number\": 3, \"line_content\": \"    tgt = env.dll_dir\"}, {\"line_number\": 4, \"line_content\": \"    for f in glob.glob(j(ext_dir, '*.pyd')):\"}, {\"line_number\": 5, \"line_content\": \"        shutil.copy2(f, tgt)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/kovidgoyal/calibre\", \"direct_link_to_file_line\": \"https://github.com/kovidgoyal/calibre/blob/master/calibre/bypy/windows/__main__.py#L362\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def install_site_py(env):\"}, {\"line_number\": 2, \"line_content\": \"    if not os.path.exists(env.lib_dir):\"}, {\"line_number\": 3, \"line_content\": \"        os.makedirs(env.lib_dir)\"}, {\"line_number\": 4, \"line_content\": \"    shutil.copy2(j(d(__file__), 'site.py'), env.lib_dir)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/kovidgoyal/calibre\", \"direct_link_to_file_line\": \"https://github.com/kovidgoyal/calibre/blob/master/calibre/bypy/windows/__main__.py#L283\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def find_pyds(base):\"}, {\"line_number\": 2, \"line_content\": \"    for dirpath, dirnames, filenames in os.walk(base):\"}, {\"line_number\": 3, \"line_content\": \"        for fname in filenames:\"}, {\"line_number\": 4, \"line_content\": \"            if fname.lower().endswith('.pyd'):\"}, {\"line_number\": 5, \"line_content\": \"                yield os.path.join(dirpath, fname)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/kovidgoyal/calibre\", \"direct_link_to_file_line\": \"https://github.com/kovidgoyal/calibre/blob/master/calibre/bypy/macos/__main__.py#L213\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@flush\"}, {\"line_number\": 2, \"line_content\": \"def run_tests(self):\"}, {\"line_number\": 3, \"line_content\": \"    self.test_runner(join(self.contents_dir, 'MacOS', 'calibre-debug'),\"}, {\"line_number\": 4, \"line_content\": \"        self.contents_dir)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/donnemartin/system-design-primer\", \"direct_link_to_file_line\": \"https://github.com/donnemartin/system-design-primer/blob/master/system-design-primer/solutions/system_design/sales_rank/sales_rank_mapreduce.py#L66\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def steps(self):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Run the map and reduce steps.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    return [self.mr(mapper=self.mapper, reducer=self.reducer), self.mr(\"}, {\"line_number\": 4, \"line_content\": \"        mapper=self.mapper_sort, reducer=self.reducer_identity)]\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/donnemartin/system-design-primer\", \"direct_link_to_file_line\": \"https://github.com/donnemartin/system-design-primer/blob/master/system-design-primer/solutions/system_design/query_cache/query_cache_snippets.py#L10\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def parse_query(self, query):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Remove markup, break text into terms, deal with typos,\"}, {\"line_number\": 3, \"line_content\": \"        normalize capitalization, convert to use boolean operations.\"}, {\"line_number\": 4, \"line_content\": \"        \\\"\\\"\\\"\"}, {\"line_number\": 5, \"line_content\": \"    ...\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/donnemartin/system-design-primer\", \"direct_link_to_file_line\": \"https://github.com/donnemartin/system-design-primer/blob/master/system-design-primer/solutions/system_design/query_cache/query_cache_snippets.py#L50\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, MAX_SIZE):\"}, {\"line_number\": 2, \"line_content\": \"    self.MAX_SIZE = MAX_SIZE\"}, {\"line_number\": 3, \"line_content\": \"    self.size = 0\"}, {\"line_number\": 4, \"line_content\": \"    self.lookup = {}\"}, {\"line_number\": 5, \"line_content\": \"    self.linked_list = LinkedList()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/donnemartin/system-design-primer\", \"direct_link_to_file_line\": \"https://github.com/donnemartin/system-design-primer/blob/master/system-design-primer/solutions/system_design/web_crawler/web_crawler_mapreduce.py#L11\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def reducer(self, key, values):\"}, {\"line_number\": 2, \"line_content\": \"    total = sum(values)\"}, {\"line_number\": 3, \"line_content\": \"    if total == 1:\"}, {\"line_number\": 4, \"line_content\": \"        yield key, total\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/donnemartin/system-design-primer\", \"direct_link_to_file_line\": \"https://github.com/donnemartin/system-design-primer/blob/master/system-design-primer/solutions/system_design/web_crawler/web_crawler_snippets.py#L37\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, url, contents, child_urls):\"}, {\"line_number\": 2, \"line_content\": \"    self.url = url\"}, {\"line_number\": 3, \"line_content\": \"    self.contents = contents\"}, {\"line_number\": 4, \"line_content\": \"    self.child_urls = child_urls\"}, {\"line_number\": 5, \"line_content\": \"    self.signature = self.create_signature()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/wifiphisher/wifiphisher\", \"direct_link_to_file_line\": \"https://github.com/wifiphisher/wifiphisher/blob/master/wifiphisher/wifiphisher/pywifiphisher.py#L244\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def set_ip_fwd():\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    Set kernel variables.\"}, {\"line_number\": 4, \"line_content\": \"    \\\"\\\"\\\"\"}, {\"line_number\": 5, \"line_content\": \"    Popen(['sysctl', '-w', 'net.ipv4.ip_forward=1'], stdout=DN, stderr=PIPE)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/wifiphisher/wifiphisher\", \"direct_link_to_file_line\": \"https://github.com/wifiphisher/wifiphisher/blob/master/wifiphisher/wifiphisher/common/recon.py#L36\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def add_client(self, client):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Add client to access point.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    if client not in self._clients:\"}, {\"line_number\": 4, \"line_content\": \"        self._clients.add(client)\"}, {\"line_number\": 5, \"line_content\": \"        self.client_count += 1\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/wifiphisher/wifiphisher\", \"direct_link_to_file_line\": \"https://github.com/wifiphisher/wifiphisher/blob/master/wifiphisher/wifiphisher/common/recon.py#L147\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _sniff_packets(self):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Sniff packets one at a time until otherwise set.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    while self._should_continue:\"}, {\"line_number\": 4, \"line_content\": \"        dot11.sniff(iface=self._interface, prn=self._process_packets, count\"}, {\"line_number\": 5, \"line_content\": \"            =1, store=0)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/wifiphisher/wifiphisher\", \"direct_link_to_file_line\": \"https://github.com/wifiphisher/wifiphisher/blob/master/wifiphisher/wifiphisher/common/recon.py#L157\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def capture_aps(self):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Create Lure10 capture file.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    self._capture_file = '{LOCS_DIR}area_{time}'.format(LOCS_DIR=LOCS_DIR,\"}, {\"line_number\": 4, \"line_content\": \"        time=strftime('%Y%m%d_%H%M%S'))\"}, {\"line_number\": 5, \"line_content\": \"    LOGGER.info('Create lure10-capture file %s', self._capture_file)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/wifiphisher/wifiphisher\", \"direct_link_to_file_line\": \"https://github.com/wifiphisher/wifiphisher/blob/master/wifiphisher/wifiphisher/common/recon.py#L163\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def find_all_access_points(self):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Find all the visible and hidden access points.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    self._sniff_packets_thread.start()\"}, {\"line_number\": 4, \"line_content\": \"    self._channel_hop_thread.start()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/huge-success/sanic\", \"direct_link_to_file_line\": \"https://github.com/huge-success/sanic/blob/master/sanic/setup.py#L25\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def run_tests(self):\"}, {\"line_number\": 2, \"line_content\": \"    import shlex\"}, {\"line_number\": 3, \"line_content\": \"    import pytest\"}, {\"line_number\": 4, \"line_content\": \"    errno = pytest.main(shlex.split(self.pytest_args))\"}, {\"line_number\": 5, \"line_content\": \"    sys.exit(errno)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/huge-success/sanic\", \"direct_link_to_file_line\": \"https://github.com/huge-success/sanic/blob/master/sanic/scripts/release.py#L101\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _change_micro_version(current_version: str):\"}, {\"line_number\": 2, \"line_content\": \"    version_string = current_version.split('.')\"}, {\"line_number\": 3, \"line_content\": \"    version_string[-1] = str(int(version_string[-1]) + 1)\"}, {\"line_number\": 4, \"line_content\": \"    return '.'.join(version_string)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/huge-success/sanic\", \"direct_link_to_file_line\": \"https://github.com/huge-success/sanic/blob/master/sanic/sanic/worker.py#L44\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def init_process(self):\"}, {\"line_number\": 2, \"line_content\": \"    asyncio.get_event_loop().close()\"}, {\"line_number\": 3, \"line_content\": \"    self.loop = asyncio.new_event_loop()\"}, {\"line_number\": 4, \"line_content\": \"    asyncio.set_event_loop(self.loop)\"}, {\"line_number\": 5, \"line_content\": \"    super().init_process()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/huge-success/sanic\", \"direct_link_to_file_line\": \"https://github.com/huge-success/sanic/blob/master/sanic/sanic/worker.py#L221\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def handle_quit(self, sig, frame):\"}, {\"line_number\": 2, \"line_content\": \"    self.alive = False\"}, {\"line_number\": 3, \"line_content\": \"    self.app.callable.is_running = False\"}, {\"line_number\": 4, \"line_content\": \"    self.cfg.worker_int(self)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/huge-success/sanic\", \"direct_link_to_file_line\": \"https://github.com/huge-success/sanic/blob/master/sanic/sanic/worker.py#L226\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def handle_abort(self, sig, frame):\"}, {\"line_number\": 2, \"line_content\": \"    self.alive = False\"}, {\"line_number\": 3, \"line_content\": \"    self.exit_code = 1\"}, {\"line_number\": 4, \"line_content\": \"    self.cfg.worker_abort(self)\"}, {\"line_number\": 5, \"line_content\": \"    sys.exit(1)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/gunthercox/ChatterBot\", \"direct_link_to_file_line\": \"https://github.com/gunthercox/ChatterBot/blob/master/ChatterBot/chatterbot/trainers.py#L21\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, chatbot, **kwargs):\"}, {\"line_number\": 2, \"line_content\": \"    self.chatbot = chatbot\"}, {\"line_number\": 3, \"line_content\": \"    environment_default = os.getenv('CHATTERBOT_SHOW_TRAINING_PROGRESS', True)\"}, {\"line_number\": 4, \"line_content\": \"    self.show_training_progress = kwargs.get('show_training_progress',\"}, {\"line_number\": 5, \"line_content\": \"        environment_default)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/gunthercox/ChatterBot\", \"direct_link_to_file_line\": \"https://github.com/gunthercox/ChatterBot/blob/master/ChatterBot/chatterbot/trainers.py#L39\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def train(self, *args, **kwargs):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"        This method must be overridden by a child class.\"}, {\"line_number\": 4, \"line_content\": \"        \\\"\\\"\\\"\"}, {\"line_number\": 5, \"line_content\": \"    raise self.TrainerInitializationException()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/gunthercox/ChatterBot\", \"direct_link_to_file_line\": \"https://github.com/gunthercox/ChatterBot/blob/master/ChatterBot/chatterbot/trainers.py#L51\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, message=None):\"}, {\"line_number\": 2, \"line_content\": \"    default = (\"}, {\"line_number\": 3, \"line_content\": \"        'A training class must be specified before calling train(). See http://chatterbot.readthedocs.io/en/stable/training.html'\"}, {\"line_number\": 4, \"line_content\": \"        )\"}, {\"line_number\": 5, \"line_content\": \"    super().__init__(message or default)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/gunthercox/ChatterBot\", \"direct_link_to_file_line\": \"https://github.com/gunthercox/ChatterBot/blob/master/ChatterBot/chatterbot/trainers.py#L275\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def track_progress(members):\"}, {\"line_number\": 2, \"line_content\": \"    sys.stdout.write('.')\"}, {\"line_number\": 3, \"line_content\": \"    for member in members:\"}, {\"line_number\": 4, \"line_content\": \"        yield member\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/gunthercox/ChatterBot\", \"direct_link_to_file_line\": \"https://github.com/gunthercox/ChatterBot/blob/master/ChatterBot/chatterbot/trainers.py#L305\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def chunks(items, items_per_chunk):\"}, {\"line_number\": 2, \"line_content\": \"    for start_index in range(0, len(items), items_per_chunk):\"}, {\"line_number\": 3, \"line_content\": \"        end_index = start_index + items_per_chunk\"}, {\"line_number\": 4, \"line_content\": \"        yield items[start_index:end_index]\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/willmcgugan/rich\", \"direct_link_to_file_line\": \"https://github.com/willmcgugan/rich/blob/master/rich/rich/measure.py#L19\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def span(self) ->int:\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"Get difference between maximum and minimum.\\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    return self.maximum - self.minimum\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/willmcgugan/rich\", \"direct_link_to_file_line\": \"https://github.com/willmcgugan/rich/blob/master/rich/rich/markdown.py#L28\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@classmethod\"}, {\"line_number\": 2, \"line_content\": \"def create(cls, markdown: 'Markdown', node: Any) ->'Heading':\"}, {\"line_number\": 3, \"line_content\": \"    heading = cls(node.level)\"}, {\"line_number\": 4, \"line_content\": \"    return heading\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/willmcgugan/rich\", \"direct_link_to_file_line\": \"https://github.com/willmcgugan/rich/blob/master/rich/rich/markdown.py#L28\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"@classmethod\"}, {\"line_number\": 2, \"line_content\": \"def create(cls, markdown: 'Markdown', node: Any) ->'CodeBlock':\"}, {\"line_number\": 3, \"line_content\": \"    node_info = node.info or ''\"}, {\"line_number\": 4, \"line_content\": \"    lexer_name = node_info.partition(' ')[0]\"}, {\"line_number\": 5, \"line_content\": \"    return cls(lexer_name or 'default', markdown.code_theme)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/willmcgugan/rich\", \"direct_link_to_file_line\": \"https://github.com/willmcgugan/rich/blob/master/rich/rich/markdown.py#L28\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@classmethod\"}, {\"line_number\": 2, \"line_content\": \"def create(cls, markdown: 'Markdown', node: Any) ->'ListElement':\"}, {\"line_number\": 3, \"line_content\": \"    list_data = node.list_data\"}, {\"line_number\": 4, \"line_content\": \"    return cls(list_data['type'], list_data['start'])\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/willmcgugan/rich\", \"direct_link_to_file_line\": \"https://github.com/willmcgugan/rich/blob/master/rich/rich/markdown.py#L355\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def current_style(self) ->Style:\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"Current style which is the product of all styles on the stack.\\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    return self.style_stack.current\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tflearn/tflearn\", \"direct_link_to_file_line\": \"https://github.com/tflearn/tflearn/blob/master/tflearn/setup.py#L22\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def run_tests(self):\"}, {\"line_number\": 2, \"line_content\": \"    import pytest\"}, {\"line_number\": 3, \"line_content\": \"    errno = pytest.main(self.pytest_args)\"}, {\"line_number\": 4, \"line_content\": \"    sys.exit(errno)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tflearn/tflearn\", \"direct_link_to_file_line\": \"https://github.com/tflearn/tflearn/blob/master/tflearn/tflearn/distances.py#L10\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get(identifier):\"}, {\"line_number\": 2, \"line_content\": \"    if hasattr(identifier, '__call__'):\"}, {\"line_number\": 3, \"line_content\": \"        return identifier\"}, {\"line_number\": 4, \"line_content\": \"    else:\"}, {\"line_number\": 5, \"line_content\": \"        return get_from_module(identifier, globals(), 'distances')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tflearn/tflearn\", \"direct_link_to_file_line\": \"https://github.com/tflearn/tflearn/blob/master/tflearn/tflearn/data_flow.py#L170\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def reset(self):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\" reset.\"}, {\"line_number\": 3, \"line_content\": \"        Reset batch index.\"}, {\"line_number\": 4, \"line_content\": \"        \\\"\\\"\\\"\"}, {\"line_number\": 5, \"line_content\": \"    self.batch_index = -1\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tflearn/tflearn\", \"direct_link_to_file_line\": \"https://github.com/tflearn/tflearn/blob/master/tflearn/tflearn/data_flow.py#L218\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def retrieve_data(self, batch_ids):\"}, {\"line_number\": 2, \"line_content\": \"    feed_batch = {}\"}, {\"line_number\": 3, \"line_content\": \"    for key in self.feed_dict:\"}, {\"line_number\": 4, \"line_content\": \"        feed_batch[key] = utils.slice_array(self.feed_dict[key], batch_ids)\"}, {\"line_number\": 5, \"line_content\": \"    return feed_batch\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tflearn/tflearn\", \"direct_link_to_file_line\": \"https://github.com/tflearn/tflearn/blob/master/tflearn/tflearn/data_flow.py#L225\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def reset_batches(self):\"}, {\"line_number\": 2, \"line_content\": \"    if self.shuffle:\"}, {\"line_number\": 3, \"line_content\": \"        self.shuffle_samples()\"}, {\"line_number\": 4, \"line_content\": \"        self.batches = self.make_batches()\"}, {\"line_number\": 5, \"line_content\": \"    self.batch_index = -1\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/waditu/tushare\", \"direct_link_to_file_line\": \"https://github.com/waditu/tushare/blob/master/tushare/setup.py#L65\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def read_install_requires():\"}, {\"line_number\": 2, \"line_content\": \"    reqs = ['pandas>=0.18.0', 'requests>=2.0.0', 'lxml>=3.8.0',\"}, {\"line_number\": 3, \"line_content\": \"        'simplejson>=3.16.0', 'msgpack>=0.5.6', 'pyzmq>=16.0.0']\"}, {\"line_number\": 4, \"line_content\": \"    return reqs\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/waditu/tushare\", \"direct_link_to_file_line\": \"https://github.com/waditu/tushare/blob/master/tushare/test_unittest.py#L10\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def set_data(self):\"}, {\"line_number\": 2, \"line_content\": \"    self.code = '600848'\"}, {\"line_number\": 3, \"line_content\": \"    self.start = '2014-11-03'\"}, {\"line_number\": 4, \"line_content\": \"    self.end = '2014-11-07'\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/waditu/tushare\", \"direct_link_to_file_line\": \"https://github.com/waditu/tushare/blob/master/tushare/test/indictor_test.py#L13\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_plot_all(self):\"}, {\"line_number\": 2, \"line_content\": \"    data = ts.get_k_data('601398', start='2018-01-01', end='2018-05-27')\"}, {\"line_number\": 3, \"line_content\": \"    data = data.sort_values(by=['date'], ascending=True)\"}, {\"line_number\": 4, \"line_content\": \"    idx.plot_all(data, is_show=True, output=None)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/waditu/tushare\", \"direct_link_to_file_line\": \"https://github.com/waditu/tushare/blob/master/tushare/test/news_test.py#L26\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_get_notices(self):\"}, {\"line_number\": 2, \"line_content\": \"    self.set_data()\"}, {\"line_number\": 3, \"line_content\": \"    df = fd.get_notices(self.code)\"}, {\"line_number\": 4, \"line_content\": \"    print(fd.notice_content(df.ix[0]['url']))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/waditu/tushare\", \"direct_link_to_file_line\": \"https://github.com/waditu/tushare/blob/master/tushare/test/bar_test.py#L11\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def set_data(self):\"}, {\"line_number\": 2, \"line_content\": \"    self.code = '600848'\"}, {\"line_number\": 3, \"line_content\": \"    self.start = ''\"}, {\"line_number\": 4, \"line_content\": \"    self.end = ''\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/shengqiangzhang/examples-of-web-crawlers\", \"direct_link_to_file_line\": \"https://github.com/shengqiangzhang/examples-of-web-crawlers/blob/master/examples-of-web-crawlers/4.\\u6bcf\\u5929\\u4e0d\\u540c\\u65f6\\u95f4\\u6bb5\\u901a\\u8fc7\\u5fae\\u4fe1\\u53d1\\u6d88\\u606f\\u63d0\\u9192\\u5973\\u53cb/say_to_lady.py#L16\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_message():\"}, {\"line_number\": 2, \"line_content\": \"    r = get('http://open.iciba.com/dsapi/')\"}, {\"line_number\": 3, \"line_content\": \"    note = r.json()['note']\"}, {\"line_number\": 4, \"line_content\": \"    content = r.json()['content']\"}, {\"line_number\": 5, \"line_content\": \"    return note, content\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/shengqiangzhang/examples-of-web-crawlers\", \"direct_link_to_file_line\": \"https://github.com/shengqiangzhang/examples-of-web-crawlers/blob/master/examples-of-web-crawlers/7.\\u722c\\u53d6\\u5929\\u5929\\u57fa\\u91d1\\u7f51\\u6240\\u6709\\u57fa\\u91d1\\u6570\\u636e/main.py#L35\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_proxy():\"}, {\"line_number\": 2, \"line_content\": \"    data_json = requests.get(\"}, {\"line_number\": 3, \"line_content\": \"        'http://proxy.1again.cc:35050/api/v1/proxy/?type=2').text\"}, {\"line_number\": 4, \"line_content\": \"    data = json.loads(data_json)\"}, {\"line_number\": 5, \"line_content\": \"    return data['data']['proxy']\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/shengqiangzhang/examples-of-web-crawlers\", \"direct_link_to_file_line\": \"https://github.com/shengqiangzhang/examples-of-web-crawlers/blob/master/examples-of-web-crawlers/9.\\u4e00\\u952e\\u751f\\u6210QQ\\u4e2a\\u4eba\\u5386\\u53f2\\u62a5\\u544a/decrypt.py#L9\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def hash33_token(t):\"}, {\"line_number\": 2, \"line_content\": \"    e, n = 0, len(t)\"}, {\"line_number\": 3, \"line_content\": \"    for i in range(0, n):\"}, {\"line_number\": 4, \"line_content\": \"        e += (e << 5) + ord(t[i])\"}, {\"line_number\": 5, \"line_content\": \"    return 2147483647 & e\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/shengqiangzhang/examples-of-web-crawlers\", \"direct_link_to_file_line\": \"https://github.com/shengqiangzhang/examples-of-web-crawlers/blob/master/examples-of-web-crawlers/9.\\u4e00\\u952e\\u751f\\u6210QQ\\u4e2a\\u4eba\\u5386\\u53f2\\u62a5\\u544a/decrypt.py#L32\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_js(js_name):\"}, {\"line_number\": 2, \"line_content\": \"    with open(js_name, 'r', encoding='UTF-8') as f:\"}, {\"line_number\": 3, \"line_content\": \"        js_data = f.read()\"}, {\"line_number\": 4, \"line_content\": \"        return js_data\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/shengqiangzhang/examples-of-web-crawlers\", \"direct_link_to_file_line\": \"https://github.com/shengqiangzhang/examples-of-web-crawlers/blob/master/examples-of-web-crawlers/9.\\u4e00\\u952e\\u751f\\u6210QQ\\u4e2a\\u4eba\\u5386\\u53f2\\u62a5\\u544a/decrypt.py#L42\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_sck(skey):\"}, {\"line_number\": 2, \"line_content\": \"    md5 = get_js('decrypt/md5.js')\"}, {\"line_number\": 3, \"line_content\": \"    ctx = compile(md5)\"}, {\"line_number\": 4, \"line_content\": \"    result = ctx.call('hex_md5', str(skey))\"}, {\"line_number\": 5, \"line_content\": \"    return str(result)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/chubin/wttr.in\", \"direct_link_to_file_line\": \"https://github.com/chubin/wttr.in/blob/master/wttr.in/lib/airports.py#L17\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_airport_gps_location(iata_code):\"}, {\"line_number\": 2, \"line_content\": \"    if iata_code in AIRPORTS_INDEX:\"}, {\"line_number\": 3, \"line_content\": \"        airport = AIRPORTS_INDEX[iata_code]\"}, {\"line_number\": 4, \"line_content\": \"        return '%s,%s airport' % (airport[6], airport[7])\"}, {\"line_number\": 5, \"line_content\": \"    return None\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/chubin/wttr.in\", \"direct_link_to_file_line\": \"https://github.com/chubin/wttr.in/blob/master/wttr.in/lib/globals.py#L108\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def log(text):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"log error `text` and do not raise any exceptions\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    if not text.startswith('Too many queries'):\"}, {\"line_number\": 4, \"line_content\": \"        print(text)\"}, {\"line_number\": 5, \"line_content\": \"        logging.info(text)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/chubin/wttr.in\", \"direct_link_to_file_line\": \"https://github.com/chubin/wttr.in/blob/master/wttr.in/lib/limits.py#L64\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _log_visit(self, interval, ip_address):\"}, {\"line_number\": 2, \"line_content\": \"    if ip_address not in self.counter[interval]:\"}, {\"line_number\": 3, \"line_content\": \"        self.counter[interval][ip_address] = 0\"}, {\"line_number\": 4, \"line_content\": \"    self.counter[interval][ip_address] += 1\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/chubin/wttr.in\", \"direct_link_to_file_line\": \"https://github.com/chubin/wttr.in/blob/master/wttr.in/lib/limits.py#L69\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _limit_exceeded(self, interval, ip_address):\"}, {\"line_number\": 2, \"line_content\": \"    visits = self.counter[interval][ip_address]\"}, {\"line_number\": 3, \"line_content\": \"    limit = self._get_limit(interval)\"}, {\"line_number\": 4, \"line_content\": \"    return visits > limit\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/chubin/wttr.in\", \"direct_link_to_file_line\": \"https://github.com/chubin/wttr.in/blob/master/wttr.in/lib/view/prometheus.py#L52\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _convert_time_to_minutes(time_str):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Convert time from midnight to minutes\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    return int((datetime.strptime(time_str, '%I:%M %p') - datetime.strptime\"}, {\"line_number\": 4, \"line_content\": \"        ('12:00 AM', '%I:%M %p')).total_seconds()) // 60\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/yunjey/pytorch-tutorial\", \"direct_link_to_file_line\": \"https://github.com/yunjey/pytorch-tutorial/blob/master/pytorch-tutorial/tutorials/03-advanced/image_captioning/resize.py#L26\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def main(args):\"}, {\"line_number\": 2, \"line_content\": \"    image_dir = args.image_dir\"}, {\"line_number\": 3, \"line_content\": \"    output_dir = args.output_dir\"}, {\"line_number\": 4, \"line_content\": \"    image_size = [args.image_size, args.image_size]\"}, {\"line_number\": 5, \"line_content\": \"    resize_images(image_dir, output_dir, image_size)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/yunjey/pytorch-tutorial\", \"direct_link_to_file_line\": \"https://github.com/yunjey/pytorch-tutorial/blob/master/pytorch-tutorial/tutorials/03-advanced/image_captioning/build_vocab.py#L10\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self):\"}, {\"line_number\": 2, \"line_content\": \"    self.word2idx = {}\"}, {\"line_number\": 3, \"line_content\": \"    self.idx2word = {}\"}, {\"line_number\": 4, \"line_content\": \"    self.idx = 0\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/yunjey/pytorch-tutorial\", \"direct_link_to_file_line\": \"https://github.com/yunjey/pytorch-tutorial/blob/master/pytorch-tutorial/tutorials/03-advanced/image_captioning/build_vocab.py#L15\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def add_word(self, word):\"}, {\"line_number\": 2, \"line_content\": \"    if not word in self.word2idx:\"}, {\"line_number\": 3, \"line_content\": \"        self.word2idx[word] = self.idx\"}, {\"line_number\": 4, \"line_content\": \"        self.idx2word[self.idx] = word\"}, {\"line_number\": 5, \"line_content\": \"        self.idx += 1\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/yunjey/pytorch-tutorial\", \"direct_link_to_file_line\": \"https://github.com/yunjey/pytorch-tutorial/blob/master/pytorch-tutorial/tutorials/03-advanced/image_captioning/build_vocab.py#L21\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __call__(self, word):\"}, {\"line_number\": 2, \"line_content\": \"    if not word in self.word2idx:\"}, {\"line_number\": 3, \"line_content\": \"        return self.word2idx['<unk>']\"}, {\"line_number\": 4, \"line_content\": \"    return self.word2idx[word]\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/yunjey/pytorch-tutorial\", \"direct_link_to_file_line\": \"https://github.com/yunjey/pytorch-tutorial/blob/master/pytorch-tutorial/tutorials/03-advanced/neural_style_transfer/main.py#L34\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Select conv1_1 ~ conv5_1 activation maps.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    super(VGGNet, self).__init__()\"}, {\"line_number\": 4, \"line_content\": \"    self.select = ['0', '5', '10', '19', '28']\"}, {\"line_number\": 5, \"line_content\": \"    self.vgg = models.vgg19(pretrained=True).features\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/jhao104/proxy_pool\", \"direct_link_to_file_line\": \"https://github.com/jhao104/proxy_pool/blob/master/proxy_pool/proxyPool.py#L24\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@click.group(context_settings=CONTEXT_SETTINGS)\"}, {\"line_number\": 2, \"line_content\": \"@click.version_option(version='2.1.0')\"}, {\"line_number\": 3, \"line_content\": \"def cli():\"}, {\"line_number\": 4, \"line_content\": \"    \\\"\\\"\\\"ProxyPool cli\\u5de5\\u5177\\\"\\\"\\\"\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/jhao104/proxy_pool\", \"direct_link_to_file_line\": \"https://github.com/jhao104/proxy_pool/blob/master/proxy_pool/proxyPool.py#L30\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"@cli.command(name='schedule')\"}, {\"line_number\": 2, \"line_content\": \"def schedule():\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\" \\u542f\\u52a8\\u8c03\\u5ea6\\u7a0b\\u5e8f \\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    click.echo(BANNER)\"}, {\"line_number\": 5, \"line_content\": \"    runScheduler()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/jhao104/proxy_pool\", \"direct_link_to_file_line\": \"https://github.com/jhao104/proxy_pool/blob/master/proxy_pool/proxyPool.py#L37\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"@cli.command(name='server')\"}, {\"line_number\": 2, \"line_content\": \"def server():\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\" \\u542f\\u52a8api\\u670d\\u52a1 \\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    click.echo(BANNER)\"}, {\"line_number\": 5, \"line_content\": \"    runFlask()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/jhao104/proxy_pool\", \"direct_link_to_file_line\": \"https://github.com/jhao104/proxy_pool/blob/master/proxy_pool/util/singleton.py#L23\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __call__(cls, *args, **kwargs):\"}, {\"line_number\": 2, \"line_content\": \"    if cls not in cls._inst:\"}, {\"line_number\": 3, \"line_content\": \"        cls._inst[cls] = super(Singleton, cls).__call__(*args)\"}, {\"line_number\": 4, \"line_content\": \"    return cls._inst[cls]\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/jhao104/proxy_pool\", \"direct_link_to_file_line\": \"https://github.com/jhao104/proxy_pool/blob/master/proxy_pool/test/testLogHandler.py#L18\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def testLogHandler():\"}, {\"line_number\": 2, \"line_content\": \"    log = LogHandler('test')\"}, {\"line_number\": 3, \"line_content\": \"    log.info('this is info')\"}, {\"line_number\": 4, \"line_content\": \"    log.error('this is error')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/kubernetes-sigs/kubespray\", \"direct_link_to_file_line\": \"https://github.com/kubernetes-sigs/kubespray/blob/master/kubespray/scripts/download_hash.py#L50\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def usage():\"}, {\"line_number\": 2, \"line_content\": \"    print(\"}, {\"line_number\": 3, \"line_content\": \"        f\\\"\\\"\\\"USAGE:\"}, {\"line_number\": 4, \"line_content\": \"    {sys.argv[0]} [k8s_version1] [[k8s_version2]....[k8s_versionN]]\\\"\\\"\\\"\"}, {\"line_number\": 5, \"line_content\": \"        )\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/kubernetes-sigs/kubespray\", \"direct_link_to_file_line\": \"https://github.com/kubernetes-sigs/kubespray/blob/master/kubespray/roles/container-engine/cri-o/molecule/default/tests/test_default.py#L9\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_service(host):\"}, {\"line_number\": 2, \"line_content\": \"    svc = host.service('crio')\"}, {\"line_number\": 3, \"line_content\": \"    assert svc.is_running\"}, {\"line_number\": 4, \"line_content\": \"    assert svc.is_enabled\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/kubernetes-sigs/kubespray\", \"direct_link_to_file_line\": \"https://github.com/kubernetes-sigs/kubespray/blob/master/kubespray/roles/container-engine/docker/molecule/default/tests/test_default.py#L9\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_docker_service(host):\"}, {\"line_number\": 2, \"line_content\": \"    docker = host.service('docker')\"}, {\"line_number\": 3, \"line_content\": \"    assert docker.is_running\"}, {\"line_number\": 4, \"line_content\": \"    assert docker.is_enabled\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/kubernetes-sigs/kubespray\", \"direct_link_to_file_line\": \"https://github.com/kubernetes-sigs/kubespray/blob/master/kubespray/roles/container-engine/docker/molecule/default/tests/test_default.py#L15\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_docker_run(host):\"}, {\"line_number\": 2, \"line_content\": \"    with host.sudo():\"}, {\"line_number\": 3, \"line_content\": \"        cmd = host.command('docker run hello-world')\"}, {\"line_number\": 4, \"line_content\": \"    assert cmd.rc == 0\"}, {\"line_number\": 5, \"line_content\": \"    assert 'Hello from Docker!' in cmd.stdout\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/kubernetes-sigs/kubespray\", \"direct_link_to_file_line\": \"https://github.com/kubernetes-sigs/kubespray/blob/master/kubespray/roles/container-engine/containerd/molecule/default/tests/test_default.py#L9\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_service(host):\"}, {\"line_number\": 2, \"line_content\": \"    svc = host.service('containerd')\"}, {\"line_number\": 3, \"line_content\": \"    assert svc.is_running\"}, {\"line_number\": 4, \"line_content\": \"    assert svc.is_enabled\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/idank/explainshell\", \"direct_link_to_file_line\": \"https://github.com/idank/explainshell/blob/master/explainshell/explainshell/options.py#L129\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __eq__(self, other):\"}, {\"line_number\": 2, \"line_content\": \"    if isinstance(other, str):\"}, {\"line_number\": 3, \"line_content\": \"        return self.flag == other\"}, {\"line_number\": 4, \"line_content\": \"    else:\"}, {\"line_number\": 5, \"line_content\": \"        return super(extractedoption, self).__eq__(other)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/idank/explainshell\", \"direct_link_to_file_line\": \"https://github.com/idank/explainshell/blob/master/explainshell/explainshell/fixer.py#L13\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, mctx):\"}, {\"line_number\": 2, \"line_content\": \"    self.mctx = mctx\"}, {\"line_number\": 3, \"line_content\": \"    self.run = True\"}, {\"line_number\": 4, \"line_content\": \"    self.logger = logging.getLogger(self.__class__.__name__)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/idank/explainshell\", \"direct_link_to_file_line\": \"https://github.com/idank/explainshell/blob/master/explainshell/explainshell/fixer.py#L48\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def disable(self, name):\"}, {\"line_number\": 2, \"line_content\": \"    before = len(self.fixers)\"}, {\"line_number\": 3, \"line_content\": \"    self.fixers = [f for f in self.fixers if f.__class__.__name__ != name]\"}, {\"line_number\": 4, \"line_content\": \"    if before == len(self.fixers):\"}, {\"line_number\": 5, \"line_content\": \"        raise ValueError('fixer %r not found' % name)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/idank/explainshell\", \"direct_link_to_file_line\": \"https://github.com/idank/explainshell/blob/master/explainshell/explainshell/fixer.py#L33\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def post_option_extraction(self):\"}, {\"line_number\": 2, \"line_content\": \"    for i, p in enumerate(self.mctx.manpage.options):\"}, {\"line_number\": 3, \"line_content\": \"        text = self._removewhitespace(p.text)\"}, {\"line_number\": 4, \"line_content\": \"        p.text = text\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/idank/explainshell\", \"direct_link_to_file_line\": \"https://github.com/idank/explainshell/blob/master/explainshell/explainshell/web/helpers.py#L3\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def convertparagraphs(manpage):\"}, {\"line_number\": 2, \"line_content\": \"    for p in manpage.paragraphs:\"}, {\"line_number\": 3, \"line_content\": \"        p.text = p.text.decode('utf-8')\"}, {\"line_number\": 4, \"line_content\": \"    return manpage\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/Rochester-NRT/RocAlphaGo\", \"direct_link_to_file_line\": \"https://github.com/Rochester-NRT/RocAlphaGo/blob/master/RocAlphaGo/interface/gtp_wrapper.py#L61\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def cmd_set_free_handicap(self, arguments):\"}, {\"line_number\": 2, \"line_content\": \"    vertices = arguments.strip().split()\"}, {\"line_number\": 3, \"line_content\": \"    moves = [gtp.parse_vertex(vertex) for vertex in vertices]\"}, {\"line_number\": 4, \"line_content\": \"    self._game.place_handicaps(moves)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/Rochester-NRT/RocAlphaGo\", \"direct_link_to_file_line\": \"https://github.com/Rochester-NRT/RocAlphaGo/blob/master/RocAlphaGo/interface/gtp_wrapper.py#L70\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def cmd_final_status_list(self, arguments):\"}, {\"line_number\": 2, \"line_content\": \"    sgf_file_name = self._game.get_current_state_as_sgf()\"}, {\"line_number\": 3, \"line_content\": \"    return self.call_gnugo(sgf_file_name, 'final_status_list {}\\\\n'.format(\"}, {\"line_number\": 4, \"line_content\": \"        arguments))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/Rochester-NRT/RocAlphaGo\", \"direct_link_to_file_line\": \"https://github.com/Rochester-NRT/RocAlphaGo/blob/master/RocAlphaGo/interface/gtp_wrapper.py#L89\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, player):\"}, {\"line_number\": 2, \"line_content\": \"    self._state = GameState(enforce_superko=True)\"}, {\"line_number\": 3, \"line_content\": \"    self._player = player\"}, {\"line_number\": 4, \"line_content\": \"    self._komi = 0\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/Rochester-NRT/RocAlphaGo\", \"direct_link_to_file_line\": \"https://github.com/Rochester-NRT/RocAlphaGo/blob/master/RocAlphaGo/interface/gtp_wrapper.py#L132\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_current_state_as_sgf(self):\"}, {\"line_number\": 2, \"line_content\": \"    from tempfile import NamedTemporaryFile\"}, {\"line_number\": 3, \"line_content\": \"    temp_file = NamedTemporaryFile(delete=False)\"}, {\"line_number\": 4, \"line_content\": \"    save_gamestate_to_sgf(self._state, '', temp_file.name)\"}, {\"line_number\": 5, \"line_content\": \"    return temp_file.name\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/Rochester-NRT/RocAlphaGo\", \"direct_link_to_file_line\": \"https://github.com/Rochester-NRT/RocAlphaGo/blob/master/RocAlphaGo/interface/Play.py#L8\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, player1, player2, save_dir=None, size=19):\"}, {\"line_number\": 2, \"line_content\": \"    self.player1 = player1\"}, {\"line_number\": 3, \"line_content\": \"    self.player2 = player2\"}, {\"line_number\": 4, \"line_content\": \"    self.state = GameState(size=size)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/clips/pattern\", \"direct_link_to_file_line\": \"https://github.com/clips/pattern/blob/master/pattern/test/test_db.py#L87\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_decode_utf8(self):\"}, {\"line_number\": 2, \"line_content\": \"    for s in self.strings:\"}, {\"line_number\": 3, \"line_content\": \"        self.assertTrue(isinstance(db.decode_utf8(s), str))\"}, {\"line_number\": 4, \"line_content\": \"    print('pattern.db.decode_utf8()')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/clips/pattern\", \"direct_link_to_file_line\": \"https://github.com/clips/pattern/blob/master/pattern/test/test_db.py#L93\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_encode_utf8(self):\"}, {\"line_number\": 2, \"line_content\": \"    for s in self.strings:\"}, {\"line_number\": 3, \"line_content\": \"        self.assertTrue(isinstance(db.encode_utf8(s), bytes))\"}, {\"line_number\": 4, \"line_content\": \"    print('pattern.db.encode_utf8()')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/clips/pattern\", \"direct_link_to_file_line\": \"https://github.com/clips/pattern/blob/master/pattern/test/test_db.py#L99\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_string(self):\"}, {\"line_number\": 2, \"line_content\": \"    for v, s in ((True, 'True'), (1, '1'), (1.0, '1.0'), ('', '????'), (\"}, {\"line_number\": 3, \"line_content\": \"        None, '????')):\"}, {\"line_number\": 4, \"line_content\": \"        self.assertEqual(db.string(v, default='????'), s)\"}, {\"line_number\": 5, \"line_content\": \"    print('pattern.db.string()')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/clips/pattern\", \"direct_link_to_file_line\": \"https://github.com/clips/pattern/blob/master/pattern/test/test_db.py#L113\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_encode_entities(self):\"}, {\"line_number\": 2, \"line_content\": \"    for a, b in (('&#201;', '&#201;'), ('&', '&amp;'), ('<', '&lt;'), ('>',\"}, {\"line_number\": 3, \"line_content\": \"        '&gt;'), ('\\\"', '&quot;'), (\\\"'\\\", '&#39;')):\"}, {\"line_number\": 4, \"line_content\": \"        self.assertEqual(db.encode_entities(a), b)\"}, {\"line_number\": 5, \"line_content\": \"    print('pattern.db.encode_entities()')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/clips/pattern\", \"direct_link_to_file_line\": \"https://github.com/clips/pattern/blob/master/pattern/test/test_db.py#L125\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_decode_entities(self):\"}, {\"line_number\": 2, \"line_content\": \"    for a, b in (('&#38;', '&'), ('&amp;', '&'), ('&#x0026;', '&'), (\"}, {\"line_number\": 3, \"line_content\": \"        '&#160;', '\\\\xa0'), ('&foo;', '&foo;')):\"}, {\"line_number\": 4, \"line_content\": \"        self.assertEqual(db.decode_entities(a), b)\"}, {\"line_number\": 5, \"line_content\": \"    print('pattern.db.decode_entities()')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/google/yapf\", \"direct_link_to_file_line\": \"https://github.com/google/yapf/blob/master/yapf/yapftests/file_resources_test.py#L57\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _make_test_dir(self, name):\"}, {\"line_number\": 2, \"line_content\": \"    fullpath = os.path.normpath(os.path.join(self.test_tmpdir, name))\"}, {\"line_number\": 3, \"line_content\": \"    os.makedirs(fullpath)\"}, {\"line_number\": 4, \"line_content\": \"    return fullpath\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/google/yapf\", \"direct_link_to_file_line\": \"https://github.com/google/yapf/blob/master/yapf/yapftests/file_resources_test.py#L81\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_no_local_style(self):\"}, {\"line_number\": 2, \"line_content\": \"    test_file = os.path.join(self.test_tmpdir, 'file.py')\"}, {\"line_number\": 3, \"line_content\": \"    style_name = file_resources.GetDefaultStyleForDir(test_file)\"}, {\"line_number\": 4, \"line_content\": \"    self.assertEqual(style_name, 'pep8')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/google/yapf\", \"direct_link_to_file_line\": \"https://github.com/google/yapf/blob/master/yapf/yapftests/file_resources_test.py#L86\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_no_local_style_custom_default(self):\"}, {\"line_number\": 2, \"line_content\": \"    test_file = os.path.join(self.test_tmpdir, 'file.py')\"}, {\"line_number\": 3, \"line_content\": \"    style_name = file_resources.GetDefaultStyleForDir(test_file,\"}, {\"line_number\": 4, \"line_content\": \"        default_style='custom-default')\"}, {\"line_number\": 5, \"line_content\": \"    self.assertEqual(style_name, 'custom-default')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/google/yapf\", \"direct_link_to_file_line\": \"https://github.com/google/yapf/blob/master/yapf/yapftests/file_resources_test.py#L57\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _make_test_dir(self, name):\"}, {\"line_number\": 2, \"line_content\": \"    fullpath = os.path.normpath(os.path.join(self.test_tmpdir, name))\"}, {\"line_number\": 3, \"line_content\": \"    os.makedirs(fullpath)\"}, {\"line_number\": 4, \"line_content\": \"    return fullpath\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/google/yapf\", \"direct_link_to_file_line\": \"https://github.com/google/yapf/blob/master/yapf/yapftests/file_resources_test.py#L345\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_empty_without_py_extension(self):\"}, {\"line_number\": 2, \"line_content\": \"    file1 = os.path.join(self.test_tmpdir, 'testfile1')\"}, {\"line_number\": 3, \"line_content\": \"    self.assertFalse(file_resources.IsPythonFile(file1))\"}, {\"line_number\": 4, \"line_content\": \"    file2 = os.path.join(self.test_tmpdir, 'testfile1.rb')\"}, {\"line_number\": 5, \"line_content\": \"    self.assertFalse(file_resources.IsPythonFile(file2))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/facebook/chisel\", \"direct_link_to_file_line\": \"https://github.com/facebook/chisel/blob/master/chisel/fbchisellldb.py#L15\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __lldb_init_module(debugger, dict):\"}, {\"line_number\": 2, \"line_content\": \"    filePath = os.path.realpath(__file__)\"}, {\"line_number\": 3, \"line_content\": \"    lldbHelperDir = os.path.dirname(filePath)\"}, {\"line_number\": 4, \"line_content\": \"    commandsDirectory = os.path.join(lldbHelperDir, 'commands')\"}, {\"line_number\": 5, \"line_content\": \"    loadCommandsInDirectory(commandsDirectory)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/facebook/chisel\", \"direct_link_to_file_line\": \"https://github.com/facebook/chisel/blob/master/chisel/fblldb.py#L15\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __lldb_init_module(debugger, dict):\"}, {\"line_number\": 2, \"line_content\": \"    filePath = os.path.realpath(__file__)\"}, {\"line_number\": 3, \"line_content\": \"    lldbHelperDir = os.path.dirname(filePath)\"}, {\"line_number\": 4, \"line_content\": \"    commandsDirectory = os.path.join(lldbHelperDir, 'commands')\"}, {\"line_number\": 5, \"line_content\": \"    loadCommandsInDirectory(commandsDirectory)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/facebook/chisel\", \"direct_link_to_file_line\": \"https://github.com/facebook/chisel/blob/master/chisel/fbchisellldbbase.py#L56\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def importModule(frame, module):\"}, {\"line_number\": 2, \"line_content\": \"    options = lldb.SBExpressionOptions()\"}, {\"line_number\": 3, \"line_content\": \"    options.SetLanguage(lldb.eLanguageTypeObjC)\"}, {\"line_number\": 4, \"line_content\": \"    value = frame.EvaluateExpression('@import ' + module, options)\"}, {\"line_number\": 5, \"line_content\": \"    return isSuccess(value.error)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/facebook/chisel\", \"direct_link_to_file_line\": \"https://github.com/facebook/chisel/blob/master/chisel/fbchisellldbobjcruntimehelpers.py#L14\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def objc_getClass(className):\"}, {\"line_number\": 2, \"line_content\": \"    command = '(void*)objc_getClass(\\\"{}\\\")'.format(className)\"}, {\"line_number\": 3, \"line_content\": \"    value = fb.evaluateExpression(command)\"}, {\"line_number\": 4, \"line_content\": \"    return value\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/facebook/chisel\", \"direct_link_to_file_line\": \"https://github.com/facebook/chisel/blob/master/chisel/fbchisellldbobjcruntimehelpers.py#L20\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def object_getClass(object):\"}, {\"line_number\": 2, \"line_content\": \"    command = '(void*)object_getClass((id){})'.format(object)\"}, {\"line_number\": 3, \"line_content\": \"    value = fb.evaluateExpression(command)\"}, {\"line_number\": 4, \"line_content\": \"    return value\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pypa/pipenv\", \"direct_link_to_file_line\": \"https://github.com/pypa/pipenv/blob/master/pipenv/get-pipenv.py#L96\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def parse_args(self, args):\"}, {\"line_number\": 2, \"line_content\": \"    if not self.parser.get_default_values().cert:\"}, {\"line_number\": 3, \"line_content\": \"        self.parser.defaults['cert'] = cert_path\"}, {\"line_number\": 4, \"line_content\": \"    return super(CertInstallCommand, self).parse_args(args)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pypa/pipenv\", \"direct_link_to_file_line\": \"https://github.com/pypa/pipenv/blob/master/pipenv/setup.py#L56\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@staticmethod\"}, {\"line_number\": 2, \"line_content\": \"def status(s):\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"Prints things in bold.\\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    print('\\\\x1b[1m{0}\\\\x1b[0m'.format(s))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pypa/pipenv\", \"direct_link_to_file_line\": \"https://github.com/pypa/pipenv/blob/master/pipenv/setup.py#L56\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@staticmethod\"}, {\"line_number\": 2, \"line_content\": \"def status(s):\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"Prints things in bold.\\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    print('\\\\x1b[1m{0}\\\\x1b[0m'.format(s))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pypa/pipenv\", \"direct_link_to_file_line\": \"https://github.com/pypa/pipenv/blob/master/pipenv/pipenv/resolver.py#L189\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def markers(self):\"}, {\"line_number\": 3, \"line_content\": \"    self._markers, self.entry_dict = self.get_markers_from_dict(self.entry_dict\"}, {\"line_number\": 4, \"line_content\": \"        )\"}, {\"line_number\": 5, \"line_content\": \"    return self._markers\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pypa/pipenv\", \"direct_link_to_file_line\": \"https://github.com/pypa/pipenv/blob/master/pipenv/pipenv/resolver.py#L189\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def entry(self):\"}, {\"line_number\": 3, \"line_content\": \"    if self._entry is None:\"}, {\"line_number\": 4, \"line_content\": \"        self._entry = self.make_requirement(self.name, self.entry_dict)\"}, {\"line_number\": 5, \"line_content\": \"    return self._entry\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/dbcli/pgcli\", \"direct_link_to_file_line\": \"https://github.com/dbcli/pgcli/blob/master/pgcli/release.py#L58\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def commit_for_release(version_file, ver):\"}, {\"line_number\": 2, \"line_content\": \"    run_step('git', 'reset')\"}, {\"line_number\": 3, \"line_content\": \"    run_step('git', 'add', version_file)\"}, {\"line_number\": 4, \"line_content\": \"    run_step('git', 'commit', '--message', 'Releasing version {}'.format(ver))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/dbcli/pgcli\", \"direct_link_to_file_line\": \"https://github.com/dbcli/pgcli/blob/master/pgcli/release.py#L84\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def checklist(questions):\"}, {\"line_number\": 2, \"line_content\": \"    for question in questions:\"}, {\"line_number\": 3, \"line_content\": \"        if not click.confirm('--- {}'.format(question), default=False):\"}, {\"line_number\": 4, \"line_content\": \"            sys.exit(1)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/dbcli/pgcli\", \"direct_link_to_file_line\": \"https://github.com/dbcli/pgcli/blob/master/pgcli/pgcli/pgcompleter.py#L129\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def escape_name(self, name):\"}, {\"line_number\": 2, \"line_content\": \"    if name and (not self.name_pattern.match(name) or name.upper() in self.\"}, {\"line_number\": 3, \"line_content\": \"        reserved_words or name.upper() in self.functions):\"}, {\"line_number\": 4, \"line_content\": \"        name = '\\\"%s\\\"' % name\"}, {\"line_number\": 5, \"line_content\": \"    return name\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/dbcli/pgcli\", \"direct_link_to_file_line\": \"https://github.com/dbcli/pgcli/blob/master/pgcli/pgcli/pgcompleter.py#L142\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def unescape_name(self, name):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\" Unquote a string.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    if name and name[0] == '\\\"' and name[-1] == '\\\"':\"}, {\"line_number\": 4, \"line_content\": \"        name = name[1:-1]\"}, {\"line_number\": 5, \"line_content\": \"    return name\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/dbcli/pgcli\", \"direct_link_to_file_line\": \"https://github.com/dbcli/pgcli/blob/master/pgcli/pgcli/pgcompleter.py#L174\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def extend_casing(self, words):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\" extend casing data\"}, {\"line_number\": 3, \"line_content\": \"        :return:\"}, {\"line_number\": 4, \"line_content\": \"        \\\"\\\"\\\"\"}, {\"line_number\": 5, \"line_content\": \"    self.casing = dict((word.lower(), word) for word in words)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/asciinema/asciinema\", \"direct_link_to_file_line\": \"https://github.com/asciinema/asciinema/blob/master/asciinema/asciinema/term.py#L28\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def read_blocking(fd, timeout):\"}, {\"line_number\": 2, \"line_content\": \"    if fd in select.select([fd], [], [], timeout)[0]:\"}, {\"line_number\": 3, \"line_content\": \"        return os.read(fd, 1024)\"}, {\"line_number\": 4, \"line_content\": \"    return b''\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/asciinema/asciinema\", \"direct_link_to_file_line\": \"https://github.com/asciinema/asciinema/blob/master/asciinema/asciinema/term.py#L21\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __exit__(self, type, value, traceback):\"}, {\"line_number\": 2, \"line_content\": \"    if self.restore:\"}, {\"line_number\": 3, \"line_content\": \"        time.sleep(0.01)\"}, {\"line_number\": 4, \"line_content\": \"        tty.tcsetattr(self.fd, tty.TCSAFLUSH, self.mode)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/asciinema/asciinema\", \"direct_link_to_file_line\": \"https://github.com/asciinema/asciinema/blob/master/asciinema/asciinema/urllib_http_adapter.py#L14\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self):\"}, {\"line_number\": 2, \"line_content\": \"    self.boundary = uuid.uuid4().hex\"}, {\"line_number\": 3, \"line_content\": \"    self.content_type = 'multipart/form-data; boundary={}'.format(self.boundary\"}, {\"line_number\": 4, \"line_content\": \"        )\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/asciinema/asciinema\", \"direct_link_to_file_line\": \"https://github.com/asciinema/asciinema/blob/master/asciinema/asciinema/urllib_http_adapter.py#L18\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"@classmethod\"}, {\"line_number\": 2, \"line_content\": \"def u(cls, s):\"}, {\"line_number\": 3, \"line_content\": \"    if sys.hexversion >= 50331648 and isinstance(s, bytes):\"}, {\"line_number\": 4, \"line_content\": \"        s = s.decode('utf-8')\"}, {\"line_number\": 5, \"line_content\": \"    return s\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/asciinema/asciinema\", \"direct_link_to_file_line\": \"https://github.com/asciinema/asciinema/blob/master/asciinema/asciinema/urllib_http_adapter.py#L53\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def encode(self, fields, files):\"}, {\"line_number\": 2, \"line_content\": \"    body = io.BytesIO()\"}, {\"line_number\": 3, \"line_content\": \"    for chunk, chunk_len in self.iter(fields, files):\"}, {\"line_number\": 4, \"line_content\": \"        body.write(chunk)\"}, {\"line_number\": 5, \"line_content\": \"    return self.content_type, body.getvalue()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/trailofbits/algo\", \"direct_link_to_file_line\": \"https://github.com/trailofbits/algo/blob/master/algo/library/digital_ocean_floating_ip.py#L120\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, resp, info):\"}, {\"line_number\": 2, \"line_content\": \"    self.body = None\"}, {\"line_number\": 3, \"line_content\": \"    if resp:\"}, {\"line_number\": 4, \"line_content\": \"        self.body = resp.read()\"}, {\"line_number\": 5, \"line_content\": \"    self.info = info\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/trailofbits/algo\", \"direct_link_to_file_line\": \"https://github.com/trailofbits/algo/blob/master/algo/library/gcp_compute_location_info.py#L47\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def fetch_list(module, link, query):\"}, {\"line_number\": 2, \"line_content\": \"    auth = GcpSession(module, 'compute')\"}, {\"line_number\": 3, \"line_content\": \"    response = auth.get(link, params={'filter': query})\"}, {\"line_number\": 4, \"line_content\": \"    return return_if_object(module, response)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/trailofbits/algo\", \"direct_link_to_file_line\": \"https://github.com/trailofbits/algo/blob/master/algo/library/cloudstack_zones.py#L103\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def main():\"}, {\"line_number\": 2, \"line_content\": \"    module = AnsibleModule(argument_spec={})\"}, {\"line_number\": 3, \"line_content\": \"    acs_zones = AnsibleCloudStackZones(module)\"}, {\"line_number\": 4, \"line_content\": \"    result = acs_zones.get_zones()\"}, {\"line_number\": 5, \"line_content\": \"    module.exit_json(**result)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/davidsandberg/facenet\", \"direct_link_to_file_line\": \"https://github.com/davidsandberg/facenet/blob/master/facenet/test/train_test.py#L32\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def memory_usage_psutil():\"}, {\"line_number\": 2, \"line_content\": \"    import psutil\"}, {\"line_number\": 3, \"line_content\": \"    process = psutil.Process(os.getpid())\"}, {\"line_number\": 4, \"line_content\": \"    mem = process.memory_info()[0] / float(2 ** 20)\"}, {\"line_number\": 5, \"line_content\": \"    return mem\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/davidsandberg/facenet\", \"direct_link_to_file_line\": \"https://github.com/davidsandberg/facenet/blob/master/facenet/test/train_test.py#L39\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def align_dataset_if_needed(self):\"}, {\"line_number\": 2, \"line_content\": \"    if not os.path.exists('data/lfw_aligned'):\"}, {\"line_number\": 3, \"line_content\": \"        argv = ['python', 'src/align/align_dataset_mtcnn.py', 'data/lfw',\"}, {\"line_number\": 4, \"line_content\": \"            'data/lfw_aligned', '--image_size', '160', '--margin', '32']\"}, {\"line_number\": 5, \"line_content\": \"        subprocess.call(argv)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/davidsandberg/facenet\", \"direct_link_to_file_line\": \"https://github.com/davidsandberg/facenet/blob/master/facenet/test/train_test.py#L200\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_freeze_graph(self):\"}, {\"line_number\": 2, \"line_content\": \"    print('test_freeze_graph')\"}, {\"line_number\": 3, \"line_content\": \"    argv = ['python', 'src/freeze_graph.py', self.pretrained_model, self.\"}, {\"line_number\": 4, \"line_content\": \"        frozen_graph_filename]\"}, {\"line_number\": 5, \"line_content\": \"    subprocess.call(argv)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/davidsandberg/facenet\", \"direct_link_to_file_line\": \"https://github.com/davidsandberg/facenet/blob/master/facenet/contributed/clustering.py#L24\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def load_model(model_dir, meta_file, ckpt_file):\"}, {\"line_number\": 2, \"line_content\": \"    model_dir_exp = os.path.expanduser(model_dir)\"}, {\"line_number\": 3, \"line_content\": \"    saver = tf.train.import_meta_graph(os.path.join(model_dir_exp, meta_file))\"}, {\"line_number\": 4, \"line_content\": \"    saver.restore(tf.get_default_session(), os.path.join(model_dir_exp,\"}, {\"line_number\": 5, \"line_content\": \"        ckpt_file))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/davidsandberg/facenet\", \"direct_link_to_file_line\": \"https://github.com/davidsandberg/facenet/blob/master/facenet/contributed/real_time_face_recognition.py#L94\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def parse_arguments(argv):\"}, {\"line_number\": 2, \"line_content\": \"    parser = argparse.ArgumentParser()\"}, {\"line_number\": 3, \"line_content\": \"    parser.add_argument('--debug', action='store_true', help=\"}, {\"line_number\": 4, \"line_content\": \"        'Enable some debug outputs.')\"}, {\"line_number\": 5, \"line_content\": \"    return parser.parse_args(argv)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/testerSunshine/12306\", \"direct_link_to_file_line\": \"https://github.com/testerSunshine/12306/blob/master/12306/verify/pretreatment.py#L32\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def download_images():\"}, {\"line_number\": 2, \"line_content\": \"    pathlib.Path(PATH).mkdir(exist_ok=True)\"}, {\"line_number\": 3, \"line_content\": \"    for idx in range(40000):\"}, {\"line_number\": 4, \"line_content\": \"        download_image()\"}, {\"line_number\": 5, \"line_content\": \"        print(idx)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/testerSunshine/12306\", \"direct_link_to_file_line\": \"https://github.com/testerSunshine/12306/blob/master/12306/verify/pretreatment.py#L70\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_imgs(img):\"}, {\"line_number\": 2, \"line_content\": \"    imgs = []\"}, {\"line_number\": 3, \"line_content\": \"    for img in _get_imgs(img):\"}, {\"line_number\": 4, \"line_content\": \"        imgs.append(phash(img))\"}, {\"line_number\": 5, \"line_content\": \"    return imgs\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/testerSunshine/12306\", \"direct_link_to_file_line\": \"https://github.com/testerSunshine/12306/blob/master/12306/verify/mlearn_for_image.py#L16\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def preprocess_input(x):\"}, {\"line_number\": 2, \"line_content\": \"    x = x.astype('float32')\"}, {\"line_number\": 3, \"line_content\": \"    mean = [103.939, 116.779, 123.68]\"}, {\"line_number\": 4, \"line_content\": \"    x -= mean\"}, {\"line_number\": 5, \"line_content\": \"    return x\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/testerSunshine/12306\", \"direct_link_to_file_line\": \"https://github.com/testerSunshine/12306/blob/master/12306/verify/mlearn_for_image.py#L74\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def predict(imgs):\"}, {\"line_number\": 2, \"line_content\": \"    imgs = preprocess_input(imgs)\"}, {\"line_number\": 3, \"line_content\": \"    model = models.load_model('12306.image.model.h5')\"}, {\"line_number\": 4, \"line_content\": \"    labels = model.predict(imgs)\"}, {\"line_number\": 5, \"line_content\": \"    return labels\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/testerSunshine/12306\", \"direct_link_to_file_line\": \"https://github.com/testerSunshine/12306/blob/master/12306/verify/localVerifyCode.py#L34\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def base64_to_image(base64_code):\"}, {\"line_number\": 2, \"line_content\": \"    img_data = base64.b64decode(base64_code)\"}, {\"line_number\": 3, \"line_content\": \"    img_array = np.fromstring(img_data, np.uint8)\"}, {\"line_number\": 4, \"line_content\": \"    img = cv2.imdecode(img_array, cv2.COLOR_RGB2BGR)\"}, {\"line_number\": 5, \"line_content\": \"    return img\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/psf/black\", \"direct_link_to_file_line\": \"https://github.com/psf/black/blob/master/black/tests/data/function2.py#L16\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def g():\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Docstring.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    def inner():\"}, {\"line_number\": 4, \"line_content\": \"        pass\"}, {\"line_number\": 5, \"line_content\": \"    print('Inner defs should breathe a little.')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/psf/black\", \"direct_link_to_file_line\": \"https://github.com/psf/black/blob/master/black/tests/data/function2.py#L21\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def h():\"}, {\"line_number\": 2, \"line_content\": \"    def inner():\"}, {\"line_number\": 3, \"line_content\": \"        pass\"}, {\"line_number\": 4, \"line_content\": \"    print('Inner defs should breathe a little.')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/psf/black\", \"direct_link_to_file_line\": \"https://github.com/psf/black/blob/master/black/tests/data/function2.py#L16\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def g():\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Docstring.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    def inner():\"}, {\"line_number\": 4, \"line_content\": \"        pass\"}, {\"line_number\": 5, \"line_content\": \"    print('Inner defs should breathe a little.')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/psf/black\", \"direct_link_to_file_line\": \"https://github.com/psf/black/blob/master/black/tests/data/function2.py#L21\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def h():\"}, {\"line_number\": 2, \"line_content\": \"    def inner():\"}, {\"line_number\": 3, \"line_content\": \"        pass\"}, {\"line_number\": 4, \"line_content\": \"    print('Inner defs should breathe a little.')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/psf/black\", \"direct_link_to_file_line\": \"https://github.com/psf/black/blob/master/black/tests/data/comments.py#L70\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self):\"}, {\"line_number\": 2, \"line_content\": \"    self.qux = 3\"}, {\"line_number\": 3, \"line_content\": \"    self.spam = 4\"}, {\"line_number\": 4, \"line_content\": \"    \\\"\\\"\\\"Docstring for instance attribute spam.\\\"\\\"\\\"\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/facebook/prophet\", \"direct_link_to_file_line\": \"https://github.com/facebook/prophet/blob/master/prophet/python/setup.py#L35\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def build_models(target_dir):\"}, {\"line_number\": 2, \"line_content\": \"    from fbprophet.models import StanBackendEnum\"}, {\"line_number\": 3, \"line_content\": \"    for backend in get_backends_from_env():\"}, {\"line_number\": 4, \"line_content\": \"        StanBackendEnum.get_backend_class(backend).build_model(target_dir,\"}, {\"line_number\": 5, \"line_content\": \"            MODEL_DIR)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/facebook/prophet\", \"direct_link_to_file_line\": \"https://github.com/facebook/prophet/blob/master/prophet/python/setup.py#L78\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def finalize_options(self):\"}, {\"line_number\": 2, \"line_content\": \"    super(TestCommand, self).finalize_options()\"}, {\"line_number\": 3, \"line_content\": \"    if self.test_slow is None:\"}, {\"line_number\": 4, \"line_content\": \"        self.test_slow = getattr(self.distribution, 'test_slow', False)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/facebook/prophet\", \"direct_link_to_file_line\": \"https://github.com/facebook/prophet/blob/master/prophet/python/fbprophet/models.py#L25\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@staticmethod\"}, {\"line_number\": 2, \"line_content\": \"@abstractmethod\"}, {\"line_number\": 3, \"line_content\": \"def get_type():\"}, {\"line_number\": 4, \"line_content\": \"    pass\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/facebook/prophet\", \"direct_link_to_file_line\": \"https://github.com/facebook/prophet/blob/master/prophet/python/fbprophet/models.py#L25\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@staticmethod\"}, {\"line_number\": 2, \"line_content\": \"@abstractmethod\"}, {\"line_number\": 3, \"line_content\": \"def build_model(target_dir, model_dir):\"}, {\"line_number\": 4, \"line_content\": \"    pass\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/facebook/prophet\", \"direct_link_to_file_line\": \"https://github.com/facebook/prophet/blob/master/prophet/python/fbprophet/models.py#L31\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def load_model(self):\"}, {\"line_number\": 2, \"line_content\": \"    import cmdstanpy\"}, {\"line_number\": 3, \"line_content\": \"    model_file = pkg_resources.resource_filename('fbprophet',\"}, {\"line_number\": 4, \"line_content\": \"        'stan_model/prophet_model.bin')\"}, {\"line_number\": 5, \"line_content\": \"    return cmdstanpy.CmdStanModel(exe_file=model_file)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/apachecn/AiLearning\", \"direct_link_to_file_line\": \"https://github.com/apachecn/AiLearning/blob/master/AiLearning/tool/python2libsvm.py#L9\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_data(file_input, separator='\\\\t'):\"}, {\"line_number\": 2, \"line_content\": \"    if 'libsvm' not in file_input:\"}, {\"line_number\": 3, \"line_content\": \"        file_input = other2libsvm(file_input, separator)\"}, {\"line_number\": 4, \"line_content\": \"    data = datasets.load_svmlight_file(file_input)\"}, {\"line_number\": 5, \"line_content\": \"    return data[0], data[1]\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/apachecn/AiLearning\", \"direct_link_to_file_line\": \"https://github.com/apachecn/AiLearning/blob/master/AiLearning/src/py2.x/ml/3.DecisionTree/DecisionTree.py#L305\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def grabTree(filename):\"}, {\"line_number\": 2, \"line_content\": \"    import pickle\"}, {\"line_number\": 3, \"line_content\": \"    fr = open(filename, 'rb')\"}, {\"line_number\": 4, \"line_content\": \"    return pickle.load(fr)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/apachecn/AiLearning\", \"direct_link_to_file_line\": \"https://github.com/apachecn/AiLearning/blob/master/AiLearning/src/py2.x/ml/3.DecisionTree/decisionTreePlot.py#L49\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def plotNode(nodeTxt, centerPt, parentPt, nodeType):\"}, {\"line_number\": 2, \"line_content\": \"    createPlot.ax1.annotate(nodeTxt, xy=parentPt, xycoords='axes fraction',\"}, {\"line_number\": 3, \"line_content\": \"        xytext=centerPt, textcoords='axes fraction', va='center', ha=\"}, {\"line_number\": 4, \"line_content\": \"        'center', bbox=nodeType, arrowprops=arrow_args)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/apachecn/AiLearning\", \"direct_link_to_file_line\": \"https://github.com/apachecn/AiLearning/blob/master/AiLearning/src/py2.x/ml/3.DecisionTree/decisionTreePlot.py#L54\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def plotMidText(cntrPt, parentPt, txtString):\"}, {\"line_number\": 2, \"line_content\": \"    xMid = (parentPt[0] - cntrPt[0]) / 2.0 + cntrPt[0]\"}, {\"line_number\": 3, \"line_content\": \"    yMid = (parentPt[1] - cntrPt[1]) / 2.0 + cntrPt[1]\"}, {\"line_number\": 4, \"line_content\": \"    createPlot.ax1.text(xMid, yMid, txtString, va='center', ha='center',\"}, {\"line_number\": 5, \"line_content\": \"        rotation=30)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/apachecn/AiLearning\", \"direct_link_to_file_line\": \"https://github.com/apachecn/AiLearning/blob/master/AiLearning/src/py2.x/ml/3.DecisionTree/decisionTreePlot.py#L129\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def retrieveTree(i):\"}, {\"line_number\": 2, \"line_content\": \"    listOfTrees = [{'no surfacing': {(0): 'no', (1): {'flippers': {(0):\"}, {\"line_number\": 3, \"line_content\": \"        'no', (1): 'yes'}}}}, {'no surfacing': {(0): 'no', (1): {'flippers':\"}, {\"line_number\": 4, \"line_content\": \"        {(0): {'head': {(0): 'no', (1): 'yes'}}, (1): 'no'}}}}]\"}, {\"line_number\": 5, \"line_content\": \"    return listOfTrees[i]\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/chriskiehl/Gooey\", \"direct_link_to_file_line\": \"https://github.com/chriskiehl/Gooey/blob/master/Gooey/gooey/util/functional.py#L20\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def assoc(m, key, val):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Copy-on-write associates a value in a dict\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    cpy = deepcopy(m)\"}, {\"line_number\": 4, \"line_content\": \"    cpy[key] = val\"}, {\"line_number\": 5, \"line_content\": \"    return cpy\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/chriskiehl/Gooey\", \"direct_link_to_file_line\": \"https://github.com/chriskiehl/Gooey/blob/master/Gooey/gooey/util/functional.py#L37\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def merge(*maps):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Merge all maps left to right\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    copies = map(deepcopy, maps)\"}, {\"line_number\": 4, \"line_content\": \"    return reduce(lambda acc, val: acc.update(val) or acc, copies)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/chriskiehl/Gooey\", \"direct_link_to_file_line\": \"https://github.com/chriskiehl/Gooey/blob/master/Gooey/gooey/util/functional.py#L58\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def findfirst(f, coll):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Return first occurrence matching f, otherwise None\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    result = list(dropwhile(f, coll))\"}, {\"line_number\": 4, \"line_content\": \"    return result[0] if result else None\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/chriskiehl/Gooey\", \"direct_link_to_file_line\": \"https://github.com/chriskiehl/Gooey/blob/master/Gooey/gooey/util/functional.py#L29\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def assoc_recursively(m, path, value):\"}, {\"line_number\": 2, \"line_content\": \"    if not path:\"}, {\"line_number\": 3, \"line_content\": \"        return value\"}, {\"line_number\": 4, \"line_content\": \"    p = path[0]\"}, {\"line_number\": 5, \"line_content\": \"    return assoc(m, p, assoc_recursively(m.get(p, {}), path[1:], value))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/chriskiehl/Gooey\", \"direct_link_to_file_line\": \"https://github.com/chriskiehl/Gooey/blob/master/Gooey/gooey/util/functional.py#L76\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def inner(value):\"}, {\"line_number\": 2, \"line_content\": \"    if value:\"}, {\"line_number\": 3, \"line_content\": \"        return f(value)\"}, {\"line_number\": 4, \"line_content\": \"    else:\"}, {\"line_number\": 5, \"line_content\": \"        return True\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/521xueweihan/HelloGitHub\", \"direct_link_to_file_line\": \"https://github.com/521xueweihan/HelloGitHub/blob/master/HelloGitHub/script/make_content/make_content.py#L71\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def make_all_content():\"}, {\"line_number\": 2, \"line_content\": \"    dir_list = os.listdir(os.path.abspath(os.curdir))\"}, {\"line_number\": 3, \"line_content\": \"    for fi_dir in dir_list:\"}, {\"line_number\": 4, \"line_content\": \"        if os.path.isdir(fi_dir) and 'script' not in fi_dir:\"}, {\"line_number\": 5, \"line_content\": \"            make_content(fi_dir)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/django/django\", \"direct_link_to_file_line\": \"https://github.com/django/django/blob/master/django/django/forms/models.py#L575\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def initial_form_count(self):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Return the number of forms that are required in this FormSet.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    if not self.is_bound:\"}, {\"line_number\": 4, \"line_content\": \"        return len(self.get_queryset())\"}, {\"line_number\": 5, \"line_content\": \"    return super().initial_form_count()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/django/django\", \"direct_link_to_file_line\": \"https://github.com/django/django/blob/master/django/django/forms/models.py#L581\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _existing_object(self, pk):\"}, {\"line_number\": 2, \"line_content\": \"    if not hasattr(self, '_object_dict'):\"}, {\"line_number\": 3, \"line_content\": \"        self._object_dict = {o.pk: o for o in self.get_queryset()}\"}, {\"line_number\": 4, \"line_content\": \"    return self._object_dict.get(pk)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/django/django\", \"direct_link_to_file_line\": \"https://github.com/django/django/blob/master/django/django/forms/models.py#L656\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def delete_existing(self, obj, commit=True):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Deletes an existing model instance.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    if commit:\"}, {\"line_number\": 4, \"line_content\": \"        obj.delete()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/django/django\", \"direct_link_to_file_line\": \"https://github.com/django/django/blob/master/django/django/forms/models.py#L763\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_date_error_message(self, date_check):\"}, {\"line_number\": 2, \"line_content\": \"    return gettext(\"}, {\"line_number\": 3, \"line_content\": \"        'Please correct the duplicate data for %(field_name)s which must be unique for the %(lookup)s in %(date_field)s.'\"}, {\"line_number\": 4, \"line_content\": \"        ) % {'field_name': date_check[2], 'date_field': date_check[3],\"}, {\"line_number\": 5, \"line_content\": \"        'lookup': str(date_check[1])}\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/django/django\", \"direct_link_to_file_line\": \"https://github.com/django/django/blob/master/django/django/forms/models.py#L575\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def initial_form_count(self):\"}, {\"line_number\": 2, \"line_content\": \"    if self.save_as_new:\"}, {\"line_number\": 3, \"line_content\": \"        return 0\"}, {\"line_number\": 4, \"line_content\": \"    return super().initial_form_count()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/google/jax\", \"direct_link_to_file_line\": \"https://github.com/google/jax/blob/master/jax/jax/util.py#L66\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def subvals(lst, replace):\"}, {\"line_number\": 2, \"line_content\": \"    lst = list(lst)\"}, {\"line_number\": 3, \"line_content\": \"    for i, v in replace:\"}, {\"line_number\": 4, \"line_content\": \"        lst[i] = v\"}, {\"line_number\": 5, \"line_content\": \"    return tuple(lst)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/google/jax\", \"direct_link_to_file_line\": \"https://github.com/google/jax/blob/master/jax/jax/util.py#L82\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def split_dict(dct, names):\"}, {\"line_number\": 2, \"line_content\": \"    dct = dict(dct)\"}, {\"line_number\": 3, \"line_content\": \"    lst = [dct.pop(name) for name in names]\"}, {\"line_number\": 4, \"line_content\": \"    assert not dct\"}, {\"line_number\": 5, \"line_content\": \"    return lst\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/google/jax\", \"direct_link_to_file_line\": \"https://github.com/google/jax/blob/master/jax/jax/util.py#L91\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def partial(fun, *args, **kwargs):\"}, {\"line_number\": 2, \"line_content\": \"    wrapped = functools.partial(fun, *args, **kwargs)\"}, {\"line_number\": 3, \"line_content\": \"    functools.update_wrapper(wrapped, fun)\"}, {\"line_number\": 4, \"line_content\": \"    wrapped._bound_args = args\"}, {\"line_number\": 5, \"line_content\": \"    return wrapped\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/google/jax\", \"direct_link_to_file_line\": \"https://github.com/google/jax/blob/master/jax/jax/util.py#L152\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def check_toposort(nodes):\"}, {\"line_number\": 2, \"line_content\": \"    visited = set()\"}, {\"line_number\": 3, \"line_content\": \"    for node in nodes:\"}, {\"line_number\": 4, \"line_content\": \"        assert all(id(parent) in visited for parent in node.parents)\"}, {\"line_number\": 5, \"line_content\": \"        visited.add(id(node))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/google/jax\", \"direct_link_to_file_line\": \"https://github.com/google/jax/blob/master/jax/jax/util.py#L191\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def prod(xs):\"}, {\"line_number\": 2, \"line_content\": \"    out = 1\"}, {\"line_number\": 3, \"line_content\": \"    for x in xs:\"}, {\"line_number\": 4, \"line_content\": \"        out *= x\"}, {\"line_number\": 5, \"line_content\": \"    return out\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/psf/requests-html\", \"direct_link_to_file_line\": \"https://github.com/psf/requests-html/blob/master/requests-html/requests_html.py#L114\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@raw_html.setter\"}, {\"line_number\": 2, \"line_content\": \"def raw_html(self, html: bytes) ->None:\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"Property setter for self.html.\\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    self._html = html\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/psf/requests-html\", \"direct_link_to_file_line\": \"https://github.com/psf/requests-html/blob/master/requests-html/requests_html.py#L139\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@encoding.setter\"}, {\"line_number\": 2, \"line_content\": \"def encoding(self, enc: str) ->None:\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"Property setter for self.encoding.\\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    self._encoding = enc\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/psf/requests-html\", \"direct_link_to_file_line\": \"https://github.com/psf/requests-html/blob/master/requests-html/requests_html.py#L801\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def close(self):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\" If a browser was created close it first. \\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    if hasattr(self, '_browser'):\"}, {\"line_number\": 4, \"line_content\": \"        self.loop.run_until_complete(self._browser.close())\"}, {\"line_number\": 5, \"line_content\": \"    super().close()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/psf/requests-html\", \"direct_link_to_file_line\": \"https://github.com/psf/requests-html/blob/master/requests-html/requests_html.py#L824\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def request(self, *args, **kwargs):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\" Partial original request func and run it in a thread. \\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    func = partial(super().request, *args, **kwargs)\"}, {\"line_number\": 4, \"line_content\": \"    return self.loop.run_in_executor(self.thread_pool, func)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/psf/requests-html\", \"direct_link_to_file_line\": \"https://github.com/psf/requests-html/blob/master/requests-html/setup.py#L45\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@staticmethod\"}, {\"line_number\": 2, \"line_content\": \"def status(s):\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"Prints things in bold.\\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    print('\\\\x1b[1m{0}\\\\x1b[0m'.format(s))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/warner/magic-wormhole\", \"direct_link_to_file_line\": \"https://github.com/warner/magic-wormhole/blob/master/magic-wormhole/versioneer.py#L728\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def plus_or_dot(pieces):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Return a + if we don't already have one, else return a .\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    if '+' in pieces.get('closest-tag', ''):\"}, {\"line_number\": 4, \"line_content\": \"        return '.'\"}, {\"line_number\": 5, \"line_content\": \"    return '+'\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/warner/magic-wormhole\", \"direct_link_to_file_line\": \"https://github.com/warner/magic-wormhole/blob/master/magic-wormhole/versioneer.py#L347\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get(parser, name):\"}, {\"line_number\": 2, \"line_content\": \"    if parser.has_option('versioneer', name):\"}, {\"line_number\": 3, \"line_content\": \"        return parser.get('versioneer', name)\"}, {\"line_number\": 4, \"line_content\": \"    return None\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/warner/magic-wormhole\", \"direct_link_to_file_line\": \"https://github.com/warner/magic-wormhole/blob/master/magic-wormhole/versioneer.py#L1516\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def run(self):\"}, {\"line_number\": 2, \"line_content\": \"    versions = get_versions()\"}, {\"line_number\": 3, \"line_content\": \"    self._versioneer_generated_versions = versions\"}, {\"line_number\": 4, \"line_content\": \"    self.distribution.metadata.version = versions['version']\"}, {\"line_number\": 5, \"line_content\": \"    return _sdist.run(self)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/warner/magic-wormhole\", \"direct_link_to_file_line\": \"https://github.com/warner/magic-wormhole/blob/master/magic-wormhole/misc/demo-journal.py#L260\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def create(reactor, basedir):\"}, {\"line_number\": 2, \"line_content\": \"    os.mkdir(basedir)\"}, {\"line_number\": 3, \"line_content\": \"    s = State.create_empty()\"}, {\"line_number\": 4, \"line_content\": \"    s.save(os.path.join(basedir, 'state.json'))\"}, {\"line_number\": 5, \"line_content\": \"    return defer.succeed(None)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/warner/magic-wormhole\", \"direct_link_to_file_line\": \"https://github.com/warner/magic-wormhole/blob/master/magic-wormhole/misc/demo-journal.py#L50\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def save_to_filename(self, fn):\"}, {\"line_number\": 2, \"line_content\": \"    tmpfn = fn + '.tmp'\"}, {\"line_number\": 3, \"line_content\": \"    with open(tmpfn, 'wb') as f:\"}, {\"line_number\": 4, \"line_content\": \"        f.write(self._bytes)\"}, {\"line_number\": 5, \"line_content\": \"    os.rename(tmpfn, fn)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/apenwarr/sshuttle\", \"direct_link_to_file_line\": \"https://github.com/apenwarr/sshuttle/blob/master/sshuttle/setup.py#L23\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def version_scheme(version):\"}, {\"line_number\": 2, \"line_content\": \"    from setuptools_scm.version import guess_next_dev_version\"}, {\"line_number\": 3, \"line_content\": \"    version = guess_next_dev_version(version)\"}, {\"line_number\": 4, \"line_content\": \"    return version.lstrip('v')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/apenwarr/sshuttle\", \"direct_link_to_file_line\": \"https://github.com/apenwarr/sshuttle/blob/master/sshuttle/sshuttle/helpers.py#L83\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def family_ip_tuple(ip):\"}, {\"line_number\": 2, \"line_content\": \"    if ':' in ip:\"}, {\"line_number\": 3, \"line_content\": \"        return socket.AF_INET6, ip\"}, {\"line_number\": 4, \"line_content\": \"    else:\"}, {\"line_number\": 5, \"line_content\": \"        return socket.AF_INET, ip\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/apenwarr/sshuttle\", \"direct_link_to_file_line\": \"https://github.com/apenwarr/sshuttle/blob/master/sshuttle/sshuttle/options.py#L46\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _atoi(v):\"}, {\"line_number\": 2, \"line_content\": \"    try:\"}, {\"line_number\": 3, \"line_content\": \"        return int(v or 0)\"}, {\"line_number\": 4, \"line_content\": \"    except ValueError:\"}, {\"line_number\": 5, \"line_content\": \"        return 0\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/apenwarr/sshuttle\", \"direct_link_to_file_line\": \"https://github.com/apenwarr/sshuttle/blob/master/sshuttle/sshuttle/options.py#L53\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _remove_negative_kv(k, v):\"}, {\"line_number\": 2, \"line_content\": \"    if k.startswith('no-') or k.startswith('no_'):\"}, {\"line_number\": 3, \"line_content\": \"        return k[3:], not v\"}, {\"line_number\": 4, \"line_content\": \"    return k, v\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/apenwarr/sshuttle\", \"direct_link_to_file_line\": \"https://github.com/apenwarr/sshuttle/blob/master/sshuttle/sshuttle/options.py#L17\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __setitem__(self, k, v):\"}, {\"line_number\": 2, \"line_content\": \"    if k.startswith('no-') or k.startswith('no_'):\"}, {\"line_number\": 3, \"line_content\": \"        k = k[3:]\"}, {\"line_number\": 4, \"line_content\": \"        v = not v\"}, {\"line_number\": 5, \"line_content\": \"    self._opts[k] = v\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/facebookresearch/Detectron\", \"direct_link_to_file_line\": \"https://github.com/facebookresearch/Detectron/blob/master/Detectron/detectron/core/test.py#L599\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def add_heatmaps_t(heatmaps_t, ds_t=False, us_t=False):\"}, {\"line_number\": 2, \"line_content\": \"    heatmaps_ts.append(heatmaps_t)\"}, {\"line_number\": 3, \"line_content\": \"    ds_ts.append(ds_t)\"}, {\"line_number\": 4, \"line_content\": \"    us_ts.append(us_t)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/facebookresearch/Detectron\", \"direct_link_to_file_line\": \"https://github.com/facebookresearch/Detectron/blob/master/Detectron/detectron/core/config.py#L1148\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def merge_cfg_from_file(cfg_filename):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Load a yaml config file and merge it into the global config.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    with open(cfg_filename, 'r') as f:\"}, {\"line_number\": 4, \"line_content\": \"        yaml_cfg = AttrDict(load_cfg(f))\"}, {\"line_number\": 5, \"line_content\": \"    _merge_a_into_b(yaml_cfg, __C)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/facebookresearch/Detectron\", \"direct_link_to_file_line\": \"https://github.com/facebookresearch/Detectron/blob/master/Detectron/detectron/core/config.py#L1219\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _key_is_deprecated(full_key):\"}, {\"line_number\": 2, \"line_content\": \"    if full_key in _DEPRECATED_KEYS:\"}, {\"line_number\": 3, \"line_content\": \"        logger.warn('Deprecated config key (ignoring): {}'.format(full_key))\"}, {\"line_number\": 4, \"line_content\": \"        return True\"}, {\"line_number\": 5, \"line_content\": \"    return False\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/facebookresearch/Detectron\", \"direct_link_to_file_line\": \"https://github.com/facebookresearch/Detectron/blob/master/Detectron/detectron/utils/training_stats.py#L85\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def LogIterStats(self, cur_iter, lr):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Log the tracked statistics.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    if cur_iter % self.LOG_PERIOD == 0 or cur_iter == cfg.SOLVER.MAX_ITER - 1:\"}, {\"line_number\": 4, \"line_content\": \"        stats = self.GetStats(cur_iter, lr)\"}, {\"line_number\": 5, \"line_content\": \"        log_json_stats(stats)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/facebookresearch/Detectron\", \"direct_link_to_file_line\": \"https://github.com/facebookresearch/Detectron/blob/master/Detectron/detectron/utils/c2.py#L41\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def import_detectron_ops():\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Import Detectron ops.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    detectron_ops_lib = envu.get_detectron_ops_lib()\"}, {\"line_number\": 4, \"line_content\": \"    dyndep.InitOpsLibrary(detectron_ops_lib)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/getsentry/sentry\", \"direct_link_to_file_line\": \"https://github.com/getsentry/sentry/blob/master/sentry/setup.py#L32\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_requirements(env):\"}, {\"line_number\": 2, \"line_content\": \"    with open('requirements-{}.txt'.format(env)) as fp:\"}, {\"line_number\": 3, \"line_content\": \"        return [x.strip() for x in fp.read().split('\\\\n') if not x.\"}, {\"line_number\": 4, \"line_content\": \"            startswith('#')]\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/getsentry/sentry\", \"direct_link_to_file_line\": \"https://github.com/getsentry/sentry/blob/master/sentry/api-docs/generator.py#L140\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def report(category, message, fg=None):\"}, {\"line_number\": 2, \"line_content\": \"    if fg is None:\"}, {\"line_number\": 3, \"line_content\": \"        fg = color_for_string(category)\"}, {\"line_number\": 4, \"line_content\": \"    click.echo('[%s] %s: %s' % (six.text_type(datetime.utcnow()).split('.')\"}, {\"line_number\": 5, \"line_content\": \"        [0], click.style(category, fg=fg), message))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/getsentry/sentry\", \"direct_link_to_file_line\": \"https://github.com/getsentry/sentry/blob/master/sentry/tests/sentry/test_datascrubbing.py#L85\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_merge_pii_configs_simple():\"}, {\"line_number\": 2, \"line_content\": \"    assert merge_pii_configs([('p:', {}), ('o:', {})]) == {}\"}, {\"line_number\": 3, \"line_content\": \"    assert merge_pii_configs([('p:', {'applications': {'$string': [\"}, {\"line_number\": 4, \"line_content\": \"        '@ip:remove']}}), ('o:', {})]) == {'applications': {'$string': [\"}, {\"line_number\": 5, \"line_content\": \"        '@ip:remove']}}\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/getsentry/sentry\", \"direct_link_to_file_line\": \"https://github.com/getsentry/sentry/blob/master/sentry/tests/sentry/test_culprit.py#L6\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_culprit(data):\"}, {\"line_number\": 2, \"line_content\": \"    mgr = EventManager(data)\"}, {\"line_number\": 3, \"line_content\": \"    mgr.normalize()\"}, {\"line_number\": 4, \"line_content\": \"    return get_culprit_impl(mgr.get_data())\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/getsentry/sentry\", \"direct_link_to_file_line\": \"https://github.com/getsentry/sentry/blob/master/sentry/tests/sentry/test_sdk_updates.py#L13\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_too_old_django():\"}, {\"line_number\": 2, \"line_content\": \"    setup = SdkSetupState(sdk_name='sentry.python', sdk_version='0.9.0',\"}, {\"line_number\": 3, \"line_content\": \"        integrations=[], modules={'django': '1.3'})\"}, {\"line_number\": 4, \"line_content\": \"    assert list(get_suggested_updates(setup, PYTHON_INDEX_STATE)) == []\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/powerline/powerline\", \"direct_link_to_file_line\": \"https://github.com/powerline/powerline/blob/master/powerline/scripts/powerline-release.py#L62\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def setup_py_develop_filter(line, version_string):\"}, {\"line_number\": 2, \"line_content\": \"    if line.startswith('\\\\tbase_version = '):\"}, {\"line_number\": 3, \"line_content\": \"        line = \\\"\\\\tbase_version = '\\\" + version_string + \\\"'\\\\n\\\"\"}, {\"line_number\": 4, \"line_content\": \"    return line\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/powerline/powerline\", \"direct_link_to_file_line\": \"https://github.com/powerline/powerline/blob/master/powerline/scripts/powerline-release.py#L108\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def push(version_string, rev, **kwargs):\"}, {\"line_number\": 2, \"line_content\": \"    check_call(['git', 'push', 'upstream', 'master'])\"}, {\"line_number\": 3, \"line_content\": \"    check_call(['git', 'push', 'upstream', version_string])\"}, {\"line_number\": 4, \"line_content\": \"    check_call(['git', 'push', 'upstream', rev])\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/powerline/powerline\", \"direct_link_to_file_line\": \"https://github.com/powerline/powerline/blob/master/powerline/scripts/powerline-release.py#L122\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_gh(user, password):\"}, {\"line_number\": 2, \"line_content\": \"    global gh\"}, {\"line_number\": 3, \"line_content\": \"    if not gh:\"}, {\"line_number\": 4, \"line_content\": \"        gh = Github(user, password)\"}, {\"line_number\": 5, \"line_content\": \"    return gh\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/powerline/powerline\", \"direct_link_to_file_line\": \"https://github.com/powerline/powerline/blob/master/powerline/powerline/pdb.py#L43\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_config_paths(self):\"}, {\"line_number\": 2, \"line_content\": \"    paths = [path for path in os.environ.get('POWERLINE_CONFIG_PATHS', '').\"}, {\"line_number\": 3, \"line_content\": \"        split(':') if path]\"}, {\"line_number\": 4, \"line_content\": \"    return paths or super(PDBPowerline, self).get_config_paths()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/powerline/powerline\", \"direct_link_to_file_line\": \"https://github.com/powerline/powerline/blob/master/powerline/powerline/__init__.py#L23\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _config_loader_condition(path):\"}, {\"line_number\": 2, \"line_content\": \"    if path and os.path.isfile(path):\"}, {\"line_number\": 3, \"line_content\": \"        return path\"}, {\"line_number\": 4, \"line_content\": \"    return None\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/mkdocs/mkdocs\", \"direct_link_to_file_line\": \"https://github.com/mkdocs/mkdocs/blob/master/mkdocs/setup.py#L17\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_version(package):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Return package version as listed in `__version__` in `init.py`.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    init_py = open(os.path.join(package, '__init__.py')).read()\"}, {\"line_number\": 4, \"line_content\": \"    return re.search('__version__ = [\\\\'\\\"]([^\\\\'\\\"]+)[\\\\'\\\"]', init_py).group(1)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/mkdocs/mkdocs\", \"direct_link_to_file_line\": \"https://github.com/mkdocs/mkdocs/blob/master/mkdocs/setup.py#L23\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_packages(package):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Return root package and all sub-packages.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    return [dirpath for dirpath, dirnames, filenames in os.walk(package) if\"}, {\"line_number\": 4, \"line_content\": \"        os.path.exists(os.path.join(dirpath, '__init__.py'))]\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/mkdocs/mkdocs\", \"direct_link_to_file_line\": \"https://github.com/mkdocs/mkdocs/blob/master/mkdocs/mkdocs/theme.py#L54\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __repr__(self):\"}, {\"line_number\": 2, \"line_content\": \"    return \\\"{}(name='{}', dirs={}, static_templates={}, {})\\\".format(self.\"}, {\"line_number\": 3, \"line_content\": \"        __class__.__name__, self.name, self.dirs, list(self.\"}, {\"line_number\": 4, \"line_content\": \"        static_templates), ', '.join('{}={}'.format(k, repr(v)) for k, v in\"}, {\"line_number\": 5, \"line_content\": \"        self._vars.items()))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/mkdocs/mkdocs\", \"direct_link_to_file_line\": \"https://github.com/mkdocs/mkdocs/blob/master/mkdocs/mkdocs/plugins.py#L24\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_plugins():\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\" Return a dict of all installed Plugins by name. \\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    plugins = pkg_resources.iter_entry_points(group='mkdocs.plugins')\"}, {\"line_number\": 4, \"line_content\": \"    return {plugin.name: plugin for plugin in plugins}\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/mkdocs/mkdocs\", \"direct_link_to_file_line\": \"https://github.com/mkdocs/mkdocs/blob/master/mkdocs/mkdocs/__main__.py#L62\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def inner(f):\"}, {\"line_number\": 2, \"line_content\": \"    for i in reversed(opts):\"}, {\"line_number\": 3, \"line_content\": \"        f = i(f)\"}, {\"line_number\": 4, \"line_content\": \"    return f\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/donnemartin/interactive-coding-challenges\", \"direct_link_to_file_line\": \"https://github.com/donnemartin/interactive-coding-challenges/blob/master/interactive-coding-challenges/linked_lists/linked_list/linked_list.py#L86\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def print_list(self):\"}, {\"line_number\": 2, \"line_content\": \"    curr_node = self.head\"}, {\"line_number\": 3, \"line_content\": \"    while curr_node is not None:\"}, {\"line_number\": 4, \"line_content\": \"        print(curr_node.data)\"}, {\"line_number\": 5, \"line_content\": \"        curr_node = curr_node.next\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/donnemartin/interactive-coding-challenges\", \"direct_link_to_file_line\": \"https://github.com/donnemartin/interactive-coding-challenges/blob/master/interactive-coding-challenges/linked_lists/remove_duplicates/test_remove_duplicates.py#L34\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def main():\"}, {\"line_number\": 2, \"line_content\": \"    test = TestRemoveDupes()\"}, {\"line_number\": 3, \"line_content\": \"    linked_list = MyLinkedList(None)\"}, {\"line_number\": 4, \"line_content\": \"    test.test_remove_dupes(linked_list)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/donnemartin/interactive-coding-challenges\", \"direct_link_to_file_line\": \"https://github.com/donnemartin/interactive-coding-challenges/blob/master/interactive-coding-challenges/graphs_trees/bst/test_bst.py#L34\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def main():\"}, {\"line_number\": 2, \"line_content\": \"    test = TestTree()\"}, {\"line_number\": 3, \"line_content\": \"    test.test_tree_one()\"}, {\"line_number\": 4, \"line_content\": \"    test.test_tree_two()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/donnemartin/interactive-coding-challenges\", \"direct_link_to_file_line\": \"https://github.com/donnemartin/interactive-coding-challenges/blob/master/interactive-coding-challenges/graphs_trees/bst/bst.py#L3\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, data):\"}, {\"line_number\": 2, \"line_content\": \"    self.data = data\"}, {\"line_number\": 3, \"line_content\": \"    self.left = None\"}, {\"line_number\": 4, \"line_content\": \"    self.right = None\"}, {\"line_number\": 5, \"line_content\": \"    self.parent = None\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/donnemartin/interactive-coding-challenges\", \"direct_link_to_file_line\": \"https://github.com/donnemartin/interactive-coding-challenges/blob/master/interactive-coding-challenges/graphs_trees/bst/dfs.py#L1\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def in_order_traversal(node, visit_func):\"}, {\"line_number\": 2, \"line_content\": \"    if node is not None:\"}, {\"line_number\": 3, \"line_content\": \"        in_order_traversal(node.left, visit_func)\"}, {\"line_number\": 4, \"line_content\": \"        visit_func(node.data)\"}, {\"line_number\": 5, \"line_content\": \"        in_order_traversal(node.right, visit_func)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/Kr1s77/awesome-python-login-model\", \"direct_link_to_file_line\": \"https://github.com/Kr1s77/awesome-python-login-model/blob/master/awesome-python-login-model/baidu/baidu.py#L28\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _init_cookies(self):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"\\u521d\\u59cb\\u5316cookies\"}, {\"line_number\": 3, \"line_content\": \"        :return:\"}, {\"line_number\": 4, \"line_content\": \"        \\\"\\\"\\\"\"}, {\"line_number\": 5, \"line_content\": \"    self.sess.get(url='https://pan.baidu.com/', headers=self.headers)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/Kr1s77/awesome-python-login-model\", \"direct_link_to_file_line\": \"https://github.com/Kr1s77/awesome-python-login-model/blob/master/awesome-python-login-model/baidu/util.py#L11\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def encrypt_pwd(password, public_key):\"}, {\"line_number\": 2, \"line_content\": \"    rsa_key = RSA.importKey(public_key)\"}, {\"line_number\": 3, \"line_content\": \"    encryptor = Cipher_pkcs1_v1_5.new(rsa_key)\"}, {\"line_number\": 4, \"line_content\": \"    cipher = b64encode(encryptor.encrypt(password.encode('utf-8')))\"}, {\"line_number\": 5, \"line_content\": \"    return cipher.decode('utf-8')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/Kr1s77/awesome-python-login-model\", \"direct_link_to_file_line\": \"https://github.com/Kr1s77/awesome-python-login-model/blob/master/awesome-python-login-model/baidu/util.py#L28\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def save_image(resp, image_file):\"}, {\"line_number\": 2, \"line_content\": \"    with open(image_file, 'wb') as f:\"}, {\"line_number\": 3, \"line_content\": \"        for chunk in resp.iter_content(chunk_size=1024):\"}, {\"line_number\": 4, \"line_content\": \"            f.write(chunk)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/Kr1s77/awesome-python-login-model\", \"direct_link_to_file_line\": \"https://github.com/Kr1s77/awesome-python-login-model/blob/master/awesome-python-login-model/baidu/util.py#L34\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def parse_json(s):\"}, {\"line_number\": 2, \"line_content\": \"    begin = s.find('{')\"}, {\"line_number\": 3, \"line_content\": \"    end = s.rfind('}') + 1\"}, {\"line_number\": 4, \"line_content\": \"    return json.loads(s[begin:end])\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/Kr1s77/awesome-python-login-model\", \"direct_link_to_file_line\": \"https://github.com/Kr1s77/awesome-python-login-model/blob/master/awesome-python-login-model/douban/douban.py#L43\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_user_data(self):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"\\u83b7\\u53d6\\u7528\\u6237\\u6570\\u636e\\u8868\\u660e\\u767b\\u9646\\u6210\\u529f\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    url = '\\u8fd9\\u91cc\\u586b\\u5199\\u4f60\\u7528\\u6237\\u4e3b\\u9875\\u7684url'\"}, {\"line_number\": 4, \"line_content\": \"    html = self.session.get(url).text\"}, {\"line_number\": 5, \"line_content\": \"    print(html)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pallets/flask\", \"direct_link_to_file_line\": \"https://github.com/pallets/flask/blob/master/flask/tests/test_json_tag.py#L65\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_tag_interface():\"}, {\"line_number\": 2, \"line_content\": \"    t = JSONTag(None)\"}, {\"line_number\": 3, \"line_content\": \"    pytest.raises(NotImplementedError, t.check, None)\"}, {\"line_number\": 4, \"line_content\": \"    pytest.raises(NotImplementedError, t.to_json, None)\"}, {\"line_number\": 5, \"line_content\": \"    pytest.raises(NotImplementedError, t.to_python, None)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pallets/flask\", \"direct_link_to_file_line\": \"https://github.com/pallets/flask/blob/master/flask/tests/test_templating.py#L103\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_escaping_without_template_filename(app, client, req_ctx):\"}, {\"line_number\": 2, \"line_content\": \"    assert flask.render_template_string('{{ foo }}', foo='<test>'\"}, {\"line_number\": 3, \"line_content\": \"        ) == '&lt;test&gt;'\"}, {\"line_number\": 4, \"line_content\": \"    assert flask.render_template('mail.txt', foo='<test>') == '<test> Mail'\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pallets/flask\", \"direct_link_to_file_line\": \"https://github.com/pallets/flask/blob/master/flask/tests/test_templating.py#L15\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@app.route('/')\"}, {\"line_number\": 2, \"line_content\": \"def index():\"}, {\"line_number\": 3, \"line_content\": \"    return flask.render_template('escaping_template.html', text=text, html=\"}, {\"line_number\": 4, \"line_content\": \"        flask.Markup(text))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pallets/flask\", \"direct_link_to_file_line\": \"https://github.com/pallets/flask/blob/master/flask/tests/test_templating.py#L15\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@app.route('/')\"}, {\"line_number\": 2, \"line_content\": \"def index():\"}, {\"line_number\": 3, \"line_content\": \"    return flask.render_template('non_escaping_template.txt', text=text,\"}, {\"line_number\": 4, \"line_content\": \"        html=flask.Markup(text))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pallets/flask\", \"direct_link_to_file_line\": \"https://github.com/pallets/flask/blob/master/flask/tests/test_templating.py#L15\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@app.route('/')\"}, {\"line_number\": 2, \"line_content\": \"def index():\"}, {\"line_number\": 3, \"line_content\": \"    return flask.render_template(['no_template.xml', 'simple_template.html',\"}, {\"line_number\": 4, \"line_content\": \"        'context_template.html'], value=23)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pytorch/fairseq\", \"direct_link_to_file_line\": \"https://github.com/pytorch/fairseq/blob/master/fairseq/setup.py#L33\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def include_dirs(self):\"}, {\"line_number\": 3, \"line_content\": \"    import numpy\"}, {\"line_number\": 4, \"line_content\": \"    return self.__include_dirs + [numpy.get_include()]\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pytorch/fairseq\", \"direct_link_to_file_line\": \"https://github.com/pytorch/fairseq/blob/master/fairseq/scripts/count_docs.py#L24\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def gopen():\"}, {\"line_number\": 2, \"line_content\": \"    if args.gzip:\"}, {\"line_number\": 3, \"line_content\": \"        return gzip.open(args.input, 'r')\"}, {\"line_number\": 4, \"line_content\": \"    else:\"}, {\"line_number\": 5, \"line_content\": \"        return open(args.input, 'r', encoding='utf-8')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pytorch/fairseq\", \"direct_link_to_file_line\": \"https://github.com/pytorch/fairseq/blob/master/fairseq/fairseq/tokenizer.py#L11\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def tokenize_line(line):\"}, {\"line_number\": 2, \"line_content\": \"    line = SPACE_NORMALIZER.sub(' ', line)\"}, {\"line_number\": 3, \"line_content\": \"    line = line.strip()\"}, {\"line_number\": 4, \"line_content\": \"    return line.split()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pytorch/fairseq\", \"direct_link_to_file_line\": \"https://github.com/pytorch/fairseq/blob/master/fairseq/fairseq/options.py#L16\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_preprocessing_parser(default_task='translation'):\"}, {\"line_number\": 2, \"line_content\": \"    parser = get_parser('Preprocessing', default_task)\"}, {\"line_number\": 3, \"line_content\": \"    add_preprocess_args(parser)\"}, {\"line_number\": 4, \"line_content\": \"    return parser\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pytorch/fairseq\", \"direct_link_to_file_line\": \"https://github.com/pytorch/fairseq/blob/master/fairseq/fairseq/sequence_generator.py#L487\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def replicate_first_beam(self, tensor, mask, beam_size: int):\"}, {\"line_number\": 2, \"line_content\": \"    tensor = tensor.view(-1, beam_size, tensor.size(-1))\"}, {\"line_number\": 3, \"line_content\": \"    tensor[mask] = tensor[mask][:, :1, :]\"}, {\"line_number\": 4, \"line_content\": \"    return tensor.view(-1, tensor.size(-1))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/swisskyrepo/PayloadsAllTheThings\", \"direct_link_to_file_line\": \"https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/PayloadsAllTheThings/Server Side Request Forgery/Files/ip.py#L50\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def RANDOM_TEXT_SPEC():\"}, {\"line_number\": 2, \"line_content\": \"    min_char = 12\"}, {\"line_number\": 3, \"line_content\": \"    max_char = 16\"}, {\"line_number\": 4, \"line_content\": \"    chars = string.ascii_letters + string.digits + '!$%^&*()<>;:,.|\\\\\\\\~`'\"}, {\"line_number\": 5, \"line_content\": \"    return ''.join(choice(chars) for x in range(randint(min_char, max_char)))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/swisskyrepo/PayloadsAllTheThings\", \"direct_link_to_file_line\": \"https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/PayloadsAllTheThings/Server Side Request Forgery/Files/ip.py#L56\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def RANDOM_TEXT():\"}, {\"line_number\": 2, \"line_content\": \"    min_char = 12\"}, {\"line_number\": 3, \"line_content\": \"    max_char = 16\"}, {\"line_number\": 4, \"line_content\": \"    chars = string.ascii_letters + string.digits\"}, {\"line_number\": 5, \"line_content\": \"    return ''.join(choice(chars) for x in range(randint(min_char, max_char)))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/swisskyrepo/PayloadsAllTheThings\", \"direct_link_to_file_line\": \"https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/PayloadsAllTheThings/Server Side Request Forgery/Files/ip.py#L90\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def plain2EnclosedAlphanumericsChar(s0):\"}, {\"line_number\": 2, \"line_content\": \"    if s0 not in EnclosedAlphanumericsData:\"}, {\"line_number\": 3, \"line_content\": \"        raise Exception('value not found')\"}, {\"line_number\": 4, \"line_content\": \"    return random.choice(EnclosedAlphanumericsData[s0])\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/swisskyrepo/PayloadsAllTheThings\", \"direct_link_to_file_line\": \"https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/PayloadsAllTheThings/Upload Insecure Files/CVE Ffmpeg HLS/gen_xbin_avi.py#L43\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def echo_block(block):\"}, {\"line_number\": 2, \"line_content\": \"    assert len(block) == 16\"}, {\"line_number\": 3, \"line_content\": \"    iv = ''.join(map('{:02x}'.format, [(x ^ y) for x, y in zip(block, GAMMA)]))\"}, {\"line_number\": 4, \"line_content\": \"    return ECHO_TEMPLATE.format(needed=block, iv=iv)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/swisskyrepo/PayloadsAllTheThings\", \"direct_link_to_file_line\": \"https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/PayloadsAllTheThings/Upload Insecure Files/Extension PDF JS/poc.py#L10\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def make_js_action(js):\"}, {\"line_number\": 2, \"line_content\": \"    action = PdfDict()\"}, {\"line_number\": 3, \"line_content\": \"    action.S = PdfName.JavaScript\"}, {\"line_number\": 4, \"line_content\": \"    action.JS = js\"}, {\"line_number\": 5, \"line_content\": \"    return action\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/mail-in-a-box/mailinabox\", \"direct_link_to_file_line\": \"https://github.com/mail-in-a-box/mailinabox/blob/master/mailinabox/setup/migrate.py#L54\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def migration_4(env):\"}, {\"line_number\": 2, \"line_content\": \"    db = os.path.join(env['STORAGE_ROOT'], 'mail/users.sqlite')\"}, {\"line_number\": 3, \"line_content\": \"    shell('check_call', ['sqlite3', db,\"}, {\"line_number\": 4, \"line_content\": \"        \\\"ALTER TABLE users ADD privileges TEXT NOT NULL DEFAULT ''\\\"])\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/mail-in-a-box/mailinabox\", \"direct_link_to_file_line\": \"https://github.com/mail-in-a-box/mailinabox/blob/master/mailinabox/setup/migrate.py#L63\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def migration_6(env):\"}, {\"line_number\": 2, \"line_content\": \"    basepath = os.path.join(env['STORAGE_ROOT'], 'dns/dnssec')\"}, {\"line_number\": 3, \"line_content\": \"    shutil.move(os.path.join(basepath, 'keys.conf'), os.path.join(basepath,\"}, {\"line_number\": 4, \"line_content\": \"        'RSASHA1-NSEC3-SHA1.conf'))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/mail-in-a-box/mailinabox\", \"direct_link_to_file_line\": \"https://github.com/mail-in-a-box/mailinabox/blob/master/mailinabox/setup/migrate.py#L104\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def migration_9(env):\"}, {\"line_number\": 2, \"line_content\": \"    db = os.path.join(env['STORAGE_ROOT'], 'mail/users.sqlite')\"}, {\"line_number\": 3, \"line_content\": \"    shell('check_call', ['sqlite3', db,\"}, {\"line_number\": 4, \"line_content\": \"        'ALTER TABLE aliases ADD permitted_senders TEXT'])\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/mail-in-a-box/mailinabox\", \"direct_link_to_file_line\": \"https://github.com/mail-in-a-box/mailinabox/blob/master/mailinabox/setup/migrate.py#L16\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def move_file(fn, domain_name_escaped, filename):\"}, {\"line_number\": 2, \"line_content\": \"    fn1 = os.path.join(env['STORAGE_ROOT'], 'ssl', domain_name_escaped,\"}, {\"line_number\": 3, \"line_content\": \"        file_type)\"}, {\"line_number\": 4, \"line_content\": \"    os.makedirs(os.path.dirname(fn1), exist_ok=True)\"}, {\"line_number\": 5, \"line_content\": \"    shutil.move(fn, fn1)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/mail-in-a-box/mailinabox\", \"direct_link_to_file_line\": \"https://github.com/mail-in-a-box/mailinabox/blob/master/mailinabox/tools/readable_bash.py#L156\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def value(self):\"}, {\"line_number\": 2, \"line_content\": \"    if '|' in self.string or '>' in self.string:\"}, {\"line_number\": 3, \"line_content\": \"        return \\\"<pre class='shell'><div>\\\" + recode_bash(self.string.strip()\"}, {\"line_number\": 4, \"line_content\": \"            ) + '</div></pre>\\\\n'\"}, {\"line_number\": 5, \"line_content\": \"    return ''\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ranger/ranger\", \"direct_link_to_file_line\": \"https://github.com/ranger/ranger/blob/master/ranger/doc/config/commands.py#L111\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def execute(self):\"}, {\"line_number\": 2, \"line_content\": \"    if not self.arg(1) or not self.arg(2):\"}, {\"line_number\": 3, \"line_content\": \"        self.fm.notify('Syntax: alias <newcommand> <oldcommand>', bad=True)\"}, {\"line_number\": 4, \"line_content\": \"        return\"}, {\"line_number\": 5, \"line_content\": \"    self.fm.commands.alias(self.arg(1), self.rest(2))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ranger/ranger\", \"direct_link_to_file_line\": \"https://github.com/ranger/ranger/blob/master/ranger/doc/config/commands.py#L111\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def execute(self):\"}, {\"line_number\": 2, \"line_content\": \"    app, flags, mode = self._get_app_flags_mode(self.rest(1))\"}, {\"line_number\": 3, \"line_content\": \"    self.fm.execute_file(files=self.fm.thistab.get_selection(), app=app,\"}, {\"line_number\": 4, \"line_content\": \"        flags=flags, mode=mode)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ranger/ranger\", \"direct_link_to_file_line\": \"https://github.com/ranger/ranger/blob/master/ranger/doc/config/commands.py#L176\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@staticmethod\"}, {\"line_number\": 2, \"line_content\": \"def _is_flags(arg):\"}, {\"line_number\": 3, \"line_content\": \"    from ranger.core.runner import ALLOWED_FLAGS\"}, {\"line_number\": 4, \"line_content\": \"    return all(x in ALLOWED_FLAGS for x in arg)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ranger/ranger\", \"direct_link_to_file_line\": \"https://github.com/ranger/ranger/blob/master/ranger/doc/config/commands.py#L111\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def execute(self):\"}, {\"line_number\": 2, \"line_content\": \"    tags = self.arg(1)\"}, {\"line_number\": 3, \"line_content\": \"    self.shift()\"}, {\"line_number\": 4, \"line_content\": \"    name, value, _ = self.parse_setting_line()\"}, {\"line_number\": 5, \"line_content\": \"    self.fm.set_option_from_string(name, value, tags=tags)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ranger/ranger\", \"direct_link_to_file_line\": \"https://github.com/ranger/ranger/blob/master/ranger/doc/config/commands.py#L111\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def execute(self):\"}, {\"line_number\": 2, \"line_content\": \"    if len(self.fm.tabs) >= 2:\"}, {\"line_number\": 3, \"line_content\": \"        self.fm.tab_close()\"}, {\"line_number\": 4, \"line_content\": \"    else:\"}, {\"line_number\": 5, \"line_content\": \"        self._exit_no_work()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tonybeltramelli/pix2code\", \"direct_link_to_file_line\": \"https://github.com/tonybeltramelli/pix2code/blob/master/pix2code/model/classes/Vocabulary.py#L23\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def append(self, token):\"}, {\"line_number\": 2, \"line_content\": \"    if token not in self.vocabulary:\"}, {\"line_number\": 3, \"line_content\": \"        self.vocabulary[token] = self.size\"}, {\"line_number\": 4, \"line_content\": \"        self.token_lookup[self.size] = token\"}, {\"line_number\": 5, \"line_content\": \"        self.size += 1\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tonybeltramelli/pix2code\", \"direct_link_to_file_line\": \"https://github.com/tonybeltramelli/pix2code/blob/master/pix2code/model/classes/Vocabulary.py#L53\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def save(self, path):\"}, {\"line_number\": 2, \"line_content\": \"    output_file_name = '{}/words.vocab'.format(path)\"}, {\"line_number\": 3, \"line_content\": \"    output_file = open(output_file_name, 'w')\"}, {\"line_number\": 4, \"line_content\": \"    output_file.write(self.get_serialized_binary_representation())\"}, {\"line_number\": 5, \"line_content\": \"    output_file.close()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tonybeltramelli/pix2code\", \"direct_link_to_file_line\": \"https://github.com/tonybeltramelli/pix2code/blob/master/pix2code/model/classes/BeamSearch.py#L47\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def show(self, depth=0):\"}, {\"line_number\": 2, \"line_content\": \"    print(' ' * depth, self.key, self.value, self.level)\"}, {\"line_number\": 3, \"line_content\": \"    for child in self.children:\"}, {\"line_number\": 4, \"line_content\": \"        child.show(depth + 2)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tonybeltramelli/pix2code\", \"direct_link_to_file_line\": \"https://github.com/tonybeltramelli/pix2code/blob/master/pix2code/model/classes/BeamSearch.py#L54\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, beam_width=1):\"}, {\"line_number\": 2, \"line_content\": \"    self.beam_width = beam_width\"}, {\"line_number\": 3, \"line_content\": \"    self.root = None\"}, {\"line_number\": 4, \"line_content\": \"    self.clear()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tonybeltramelli/pix2code\", \"direct_link_to_file_line\": \"https://github.com/tonybeltramelli/pix2code/blob/master/pix2code/model/classes/BeamSearch.py#L60\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def search(self):\"}, {\"line_number\": 2, \"line_content\": \"    result = self.root.max_child()\"}, {\"line_number\": 3, \"line_content\": \"    self.clear()\"}, {\"line_number\": 4, \"line_content\": \"    return self.retrieve_path(result)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/alexjc/neural-doodle\", \"direct_link_to_file_line\": \"https://github.com/alexjc/neural-doodle/blob/master/neural-doodle/doodle.py#L67\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def error(message, *lines):\"}, {\"line_number\": 2, \"line_content\": \"    string = '\\\\n{}ERROR: ' + message + '{}\\\\n' + '\\\\n'.join(lines) + '{}\\\\n'\"}, {\"line_number\": 3, \"line_content\": \"    print(string.format(ansi.RED_B, ansi.RED, ansi.ENDC))\"}, {\"line_number\": 4, \"line_content\": \"    sys.exit(-1)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/alexjc/neural-doodle\", \"direct_link_to_file_line\": \"https://github.com/alexjc/neural-doodle/blob/master/neural-doodle/doodle.py#L108\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self):\"}, {\"line_number\": 2, \"line_content\": \"    self.pixel_mean = np.array([103.939, 116.779, 123.68], dtype=np.float32\"}, {\"line_number\": 3, \"line_content\": \"        ).reshape((3, 1, 1))\"}, {\"line_number\": 4, \"line_content\": \"    self.setup_model()\"}, {\"line_number\": 5, \"line_content\": \"    self.load_data()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/alexjc/neural-doodle\", \"direct_link_to_file_line\": \"https://github.com/alexjc/neural-doodle/blob/master/neural-doodle/doodle.py#L185\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_outputs(self, type, layers):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Fetch the output tensors for the network layers.\"}, {\"line_number\": 3, \"line_content\": \"        \\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    return [self.tensor_outputs[type + l] for l in layers]\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/alexjc/neural-doodle\", \"direct_link_to_file_line\": \"https://github.com/alexjc/neural-doodle/blob/master/neural-doodle/doodle.py#L302\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def compile(self, arguments, function):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Build a Theano function that will run the specified expression on the GPU.\"}, {\"line_number\": 3, \"line_content\": \"        \\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    return theano.function(list(arguments), function, on_unused_input='ignore')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/keras-team/autokeras\", \"direct_link_to_file_line\": \"https://github.com/keras-team/autokeras/blob/master/autokeras/autokeras/nodes.py#L12\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def deserialize(config, custom_objects=None):\"}, {\"line_number\": 2, \"line_content\": \"    return tf.keras.utils.deserialize_keras_object(config, module_objects=\"}, {\"line_number\": 3, \"line_content\": \"        globals(), custom_objects=custom_objects, printable_module_name='nodes'\"}, {\"line_number\": 4, \"line_content\": \"        )\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/keras-team/autokeras\", \"direct_link_to_file_line\": \"https://github.com/keras-team/autokeras/blob/master/autokeras/autokeras/nodes.py#L82\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, column_names=None, column_types=None, **kwargs):\"}, {\"line_number\": 2, \"line_content\": \"    super().__init__(**kwargs)\"}, {\"line_number\": 3, \"line_content\": \"    self.column_names = column_names\"}, {\"line_number\": 4, \"line_content\": \"    self.column_types = column_types\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/keras-team/autokeras\", \"direct_link_to_file_line\": \"https://github.com/keras-team/autokeras/blob/master/autokeras/autokeras/nodes.py#L90\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_config(self):\"}, {\"line_number\": 2, \"line_content\": \"    config = super().get_config()\"}, {\"line_number\": 3, \"line_content\": \"    config.update({'column_names': self.column_names, 'column_types': self.\"}, {\"line_number\": 4, \"line_content\": \"        column_types})\"}, {\"line_number\": 5, \"line_content\": \"    return config\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/keras-team/autokeras\", \"direct_link_to_file_line\": \"https://github.com/keras-team/autokeras/blob/master/autokeras/autokeras/nodes.py#L32\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def config_from_adapter(self, adapter):\"}, {\"line_number\": 2, \"line_content\": \"    super().config_from_adapter(adapter)\"}, {\"line_number\": 3, \"line_content\": \"    self.column_names = adapter.column_names\"}, {\"line_number\": 4, \"line_content\": \"    self.column_types = adapter.column_types\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/keras-team/autokeras\", \"direct_link_to_file_line\": \"https://github.com/keras-team/autokeras/blob/master/autokeras/autokeras/nodes.py#L26\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def build(self):\"}, {\"line_number\": 2, \"line_content\": \"    if len(self.shape) == 1:\"}, {\"line_number\": 3, \"line_content\": \"        self.shape = self.lookback, self.shape[0]\"}, {\"line_number\": 4, \"line_content\": \"    return tf.keras.Input(shape=self.shape, dtype=tf.float32)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/quantopian/zipline\", \"direct_link_to_file_line\": \"https://github.com/quantopian/zipline/blob/master/zipline/setup.py#L81\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def window_specialization(typename):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Make an extension for an AdjustedArrayWindow specialization.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    return Extension('zipline.lib._{name}window'.format(name=typename), [\"}, {\"line_number\": 4, \"line_content\": \"        'zipline/lib/_{name}window.pyx'.format(name=typename)], depends=[\"}, {\"line_number\": 5, \"line_content\": \"        'zipline/lib/_windowtemplate.pxi'])\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/quantopian/zipline\", \"direct_link_to_file_line\": \"https://github.com/quantopian/zipline/blob/master/zipline/setup.py#L221\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def extras_requires(conda_format=False):\"}, {\"line_number\": 2, \"line_content\": \"    extras = {extra: read_requirements('etc/requirements_{0}.in'.format(\"}, {\"line_number\": 3, \"line_content\": \"        extra), conda_format=conda_format) for extra in ('dev', 'talib')}\"}, {\"line_number\": 4, \"line_content\": \"    extras['all'] = [req for reqs in extras.values() for req in reqs]\"}, {\"line_number\": 5, \"line_content\": \"    return extras\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/quantopian/zipline\", \"direct_link_to_file_line\": \"https://github.com/quantopian/zipline/blob/master/zipline/setup.py#L47\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __setitem__(self, key, value):\"}, {\"line_number\": 2, \"line_content\": \"    if key == 'build_ext':\"}, {\"line_number\": 3, \"line_content\": \"        raise AssertionError('build_ext overridden!')\"}, {\"line_number\": 4, \"line_content\": \"    super(LazyBuildExtCommandClass, self).__setitem__(key, value)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/quantopian/zipline\", \"direct_link_to_file_line\": \"https://github.com/quantopian/zipline/blob/master/zipline/versioneer.py#L727\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def plus_or_dot(pieces):\"}, {\"line_number\": 2, \"line_content\": \"    if '+' in pieces.get('closest-tag', ''):\"}, {\"line_number\": 3, \"line_content\": \"        return '.'\"}, {\"line_number\": 4, \"line_content\": \"    return '+'\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/quantopian/zipline\", \"direct_link_to_file_line\": \"https://github.com/quantopian/zipline/blob/master/zipline/versioneer.py#L404\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get(parser, name):\"}, {\"line_number\": 2, \"line_content\": \"    if parser.has_option('versioneer', name):\"}, {\"line_number\": 3, \"line_content\": \"        return parser.get('versioneer', name)\"}, {\"line_number\": 4, \"line_content\": \"    return None\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/python/mypy\", \"direct_link_to_file_line\": \"https://github.com/python/mypy/blob/master/mypy/setup.py#L60\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def pin_version(self):\"}, {\"line_number\": 2, \"line_content\": \"    path = os.path.join(self.build_lib, 'mypy')\"}, {\"line_number\": 3, \"line_content\": \"    self.mkpath(path)\"}, {\"line_number\": 4, \"line_content\": \"    with open(os.path.join(path, 'version.py'), 'w') as stream:\"}, {\"line_number\": 5, \"line_content\": \"        stream.write('__version__ = \\\"{}\\\"\\\\n'.format(version))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/python/mypy\", \"direct_link_to_file_line\": \"https://github.com/python/mypy/blob/master/mypy/conftest.py#L8\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def pytest_configure(config):\"}, {\"line_number\": 2, \"line_content\": \"    mypy_source_root = os.path.dirname(os.path.abspath(__file__))\"}, {\"line_number\": 3, \"line_content\": \"    if os.getcwd() != mypy_source_root:\"}, {\"line_number\": 4, \"line_content\": \"        os.chdir(mypy_source_root)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/python/mypy\", \"direct_link_to_file_line\": \"https://github.com/python/mypy/blob/master/mypy/mypyc/ir/ops.py#L70\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@abstractmethod\"}, {\"line_number\": 2, \"line_content\": \"def sources(self) ->List[Value]:\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"All the values the op may read.\\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    pass\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/python/mypy\", \"direct_link_to_file_line\": \"https://github.com/python/mypy/blob/master/mypy/mypyc/ir/func_ir.py#L37\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@classmethod\"}, {\"line_number\": 2, \"line_content\": \"def deserialize(cls, data: JsonDict, ctx: DeserMaps) ->'RuntimeArg':\"}, {\"line_number\": 3, \"line_content\": \"    return RuntimeArg(data['name'], deserialize_type(data['type'], ctx),\"}, {\"line_number\": 4, \"line_content\": \"        data['kind'])\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/python/mypy\", \"direct_link_to_file_line\": \"https://github.com/python/mypy/blob/master/mypy/mypyc/ir/func_ir.py#L37\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@classmethod\"}, {\"line_number\": 2, \"line_content\": \"def deserialize(cls, data: JsonDict, ctx: DeserMaps) ->'FuncSignature':\"}, {\"line_number\": 3, \"line_content\": \"    return FuncSignature([RuntimeArg.deserialize(arg, ctx) for arg in data[\"}, {\"line_number\": 4, \"line_content\": \"        'args']], deserialize_type(data['ret_type'], ctx))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/harelba/q\", \"direct_link_to_file_line\": \"https://github.com/harelba/q/blob/master/q/bin/q.py#L74\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def sha1(data):\"}, {\"line_number\": 2, \"line_content\": \"    if not isinstance(data, str) and not isinstance(data, unicode):\"}, {\"line_number\": 3, \"line_content\": \"        return hashlib.sha1(str(data)).hexdigest()\"}, {\"line_number\": 4, \"line_content\": \"    return hashlib.sha1(data).hexdigest()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/harelba/q\", \"direct_link_to_file_line\": \"https://github.com/harelba/q/blob/master/q/bin/q.py#L754\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def normalized_filename(filename):\"}, {\"line_number\": 2, \"line_content\": \"    if filename == '-':\"}, {\"line_number\": 3, \"line_content\": \"        return 'stdin'\"}, {\"line_number\": 4, \"line_content\": \"    else:\"}, {\"line_number\": 5, \"line_content\": \"        return filename\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/harelba/q\", \"direct_link_to_file_line\": \"https://github.com/harelba/q/blob/master/q/bin/q.py#L112\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def finalize(self):\"}, {\"line_number\": 2, \"line_content\": \"    if len(self.values) == 0 or (self.p < 0 or self.p > 1):\"}, {\"line_number\": 3, \"line_content\": \"        return None\"}, {\"line_number\": 4, \"line_content\": \"    else:\"}, {\"line_number\": 5, \"line_content\": \"        return percentile(sorted(self.values), self.p)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/harelba/q\", \"direct_link_to_file_line\": \"https://github.com/harelba/q/blob/master/q/bin/q.py#L165\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def add_user_functions(self):\"}, {\"line_number\": 2, \"line_content\": \"    self.conn.create_function('regexp', 2, regexp)\"}, {\"line_number\": 3, \"line_content\": \"    self.conn.create_function('sha1', 1, sha1)\"}, {\"line_number\": 4, \"line_content\": \"    self.conn.create_aggregate('percentile', 2, StrictPercentile)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/harelba/q\", \"direct_link_to_file_line\": \"https://github.com/harelba/q/blob/master/q/bin/q.py#L218\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def generate_insert_row(self, table_name, column_names):\"}, {\"line_number\": 2, \"line_content\": \"    col_names_str = self._get_as_list_str(column_names)\"}, {\"line_number\": 3, \"line_content\": \"    question_marks = ', '.join(['?' for i in range(0, len(column_names))])\"}, {\"line_number\": 4, \"line_content\": \"    return 'INSERT INTO %s (%s) VALUES (%s)' % (table_name, col_names_str,\"}, {\"line_number\": 5, \"line_content\": \"        question_marks)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ageitgey/face_recognition\", \"direct_link_to_file_line\": \"https://github.com/ageitgey/face_recognition/blob/master/face_recognition/face_recognition/face_recognition_cli.py#L35\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def print_result(filename, name, distance, show_distance=False):\"}, {\"line_number\": 2, \"line_content\": \"    if show_distance:\"}, {\"line_number\": 3, \"line_content\": \"        print('{},{},{}'.format(filename, name, distance))\"}, {\"line_number\": 4, \"line_content\": \"    else:\"}, {\"line_number\": 5, \"line_content\": \"        print('{},{}'.format(filename, name))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ageitgey/face_recognition\", \"direct_link_to_file_line\": \"https://github.com/ageitgey/face_recognition/blob/master/face_recognition/tests/test_face_recognition.py#L24\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_load_image_file(self):\"}, {\"line_number\": 2, \"line_content\": \"    img = api.load_image_file(os.path.join(os.path.dirname(__file__),\"}, {\"line_number\": 3, \"line_content\": \"        'test_images', 'obama.jpg'))\"}, {\"line_number\": 4, \"line_content\": \"    self.assertEqual(img.shape, (1137, 910, 3))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ageitgey/face_recognition\", \"direct_link_to_file_line\": \"https://github.com/ageitgey/face_recognition/blob/master/face_recognition/tests/test_face_recognition.py#L28\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_load_image_file_32bit(self):\"}, {\"line_number\": 2, \"line_content\": \"    img = api.load_image_file(os.path.join(os.path.dirname(__file__),\"}, {\"line_number\": 3, \"line_content\": \"        'test_images', '32bit.png'))\"}, {\"line_number\": 4, \"line_content\": \"    self.assertEqual(img.shape, (1200, 626, 3))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ageitgey/face_recognition\", \"direct_link_to_file_line\": \"https://github.com/ageitgey/face_recognition/blob/master/face_recognition/examples/facerec_from_webcam_multiprocessing.py#L19\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def next_id(current_id, worker_num):\"}, {\"line_number\": 2, \"line_content\": \"    if current_id == worker_num:\"}, {\"line_number\": 3, \"line_content\": \"        return 1\"}, {\"line_number\": 4, \"line_content\": \"    else:\"}, {\"line_number\": 5, \"line_content\": \"        return current_id + 1\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ageitgey/face_recognition\", \"direct_link_to_file_line\": \"https://github.com/ageitgey/face_recognition/blob/master/face_recognition/examples/facerec_from_webcam_multiprocessing.py#L27\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def prev_id(current_id, worker_num):\"}, {\"line_number\": 2, \"line_content\": \"    if current_id == 1:\"}, {\"line_number\": 3, \"line_content\": \"        return worker_num\"}, {\"line_number\": 4, \"line_content\": \"    else:\"}, {\"line_number\": 5, \"line_content\": \"        return current_id - 1\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/kovidgoyal/kitty\", \"direct_link_to_file_line\": \"https://github.com/kovidgoyal/kitty/blob/master/kitty/setup.py#L497\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, incremental: bool):\"}, {\"line_number\": 2, \"line_content\": \"    self.incremental = incremental\"}, {\"line_number\": 3, \"line_content\": \"    self.compile_commands: List[Command] = []\"}, {\"line_number\": 4, \"line_content\": \"    self.link_commands: List[Command] = []\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/kovidgoyal/kitty\", \"direct_link_to_file_line\": \"https://github.com/kovidgoyal/kitty/blob/master/kitty/bypy/linux/__main__.py#L27\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def binary_includes():\"}, {\"line_number\": 2, \"line_content\": \"    return tuple(map(get_dll_path, ('expat', 'sqlite3', 'ffi', 'z', 'lzma',\"}, {\"line_number\": 3, \"line_content\": \"        'png16', 'harfbuzz', 'xkbcommon', 'xkbcommon-x11', 'ncursesw',\"}, {\"line_number\": 4, \"line_content\": \"        'readline'))) + (get_dll_path('bz2', 2), get_dll_path('ssl', 3),\"}, {\"line_number\": 5, \"line_content\": \"        get_dll_path('crypto', 3), get_dll_path('python' + py_ver, 2))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/kovidgoyal/kitty\", \"direct_link_to_file_line\": \"https://github.com/kovidgoyal/kitty/blob/master/kitty/bypy/linux/__main__.py#L86\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def copy_libs(env):\"}, {\"line_number\": 2, \"line_content\": \"    print('Copying libs...')\"}, {\"line_number\": 3, \"line_content\": \"    for x in binary_includes():\"}, {\"line_number\": 4, \"line_content\": \"        dest = env.bin_dir if '/bin/' in x else env.lib_dir\"}, {\"line_number\": 5, \"line_content\": \"        shutil.copy2(x, dest)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/kovidgoyal/kitty\", \"direct_link_to_file_line\": \"https://github.com/kovidgoyal/kitty/blob/master/kitty/bypy/macos/__main__.py#L83\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def files_in(folder):\"}, {\"line_number\": 2, \"line_content\": \"    for record in os.walk(folder):\"}, {\"line_number\": 3, \"line_content\": \"        for f in record[-1]:\"}, {\"line_number\": 4, \"line_content\": \"            yield os.path.join(record[0], f)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/kovidgoyal/kitty\", \"direct_link_to_file_line\": \"https://github.com/kovidgoyal/kitty/blob/master/kitty/bypy/macos/__main__.py#L173\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@flush\"}, {\"line_number\": 2, \"line_content\": \"def strip_files(self):\"}, {\"line_number\": 3, \"line_content\": \"    print('\\\\nStripping files...')\"}, {\"line_number\": 4, \"line_content\": \"    strip_files(self.to_strip)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/deezer/spleeter\", \"direct_link_to_file_line\": \"https://github.com/deezer/spleeter/blob/master/spleeter/spleeter/dataset.py#L142\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def filter_frequencies(self, sample):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\" \\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    return dict(sample, **{self._spectrogram_key: sample[self.\"}, {\"line_number\": 4, \"line_content\": \"        _spectrogram_key][:, :self._parent._F, :]})\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/deezer/spleeter\", \"direct_link_to_file_line\": \"https://github.com/deezer/spleeter/blob/master/spleeter/spleeter/dataset.py#L148\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def convert_to_uint(self, sample):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\" Convert given sample from float to unit. \\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    return dict(sample, **spectrogram_to_db_uint(sample[self.\"}, {\"line_number\": 4, \"line_content\": \"        _spectrogram_key], tensor_key=self._spectrogram_key, min_key=self.\"}, {\"line_number\": 5, \"line_content\": \"        _min_spectrogram_key, max_key=self._max_spectrogram_key))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/deezer/spleeter\", \"direct_link_to_file_line\": \"https://github.com/deezer/spleeter/blob/master/spleeter/spleeter/dataset.py#L162\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def convert_to_float32(self, sample):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\" Convert given sample from unit to float. \\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    return dict(sample, **{self._spectrogram_key:\"}, {\"line_number\": 4, \"line_content\": \"        db_uint_spectrogram_to_gain(sample[self._spectrogram_key], sample[\"}, {\"line_number\": 5, \"line_content\": \"        self._min_spectrogram_key], sample[self._max_spectrogram_key])})\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/deezer/spleeter\", \"direct_link_to_file_line\": \"https://github.com/deezer/spleeter/blob/master/spleeter/spleeter/dataset.py#L183\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def filter_shape(self, sample):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\" Filter badly shaped sample. \\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    return check_tensor_shape(sample[self._spectrogram_key], (self._parent.\"}, {\"line_number\": 4, \"line_content\": \"        _T, self._parent._F, 2))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/deezer/spleeter\", \"direct_link_to_file_line\": \"https://github.com/deezer/spleeter/blob/master/spleeter/spleeter/dataset.py#L189\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def reshape_spectrogram(self, sample):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\" \\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    return dict(sample, **{self._spectrogram_key: set_tensor_shape(sample[\"}, {\"line_number\": 4, \"line_content\": \"        self._spectrogram_key], (self._parent._T, self._parent._F, 2))})\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/open-mmlab/mmdetection\", \"direct_link_to_file_line\": \"https://github.com/open-mmlab/mmdetection/blob/master/mmdetection/setup.py#L12\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def readme():\"}, {\"line_number\": 2, \"line_content\": \"    with open('README.md', encoding='utf-8') as f:\"}, {\"line_number\": 3, \"line_content\": \"        content = f.read()\"}, {\"line_number\": 4, \"line_content\": \"    return content\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/open-mmlab/mmdetection\", \"direct_link_to_file_line\": \"https://github.com/open-mmlab/mmdetection/blob/master/mmdetection/setup.py#L83\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_version():\"}, {\"line_number\": 2, \"line_content\": \"    with open(version_file, 'r') as f:\"}, {\"line_number\": 3, \"line_content\": \"        exec(compile(f.read(), version_file, 'exec'))\"}, {\"line_number\": 4, \"line_content\": \"    return locals()['__version__']\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/open-mmlab/mmdetection\", \"direct_link_to_file_line\": \"https://github.com/open-mmlab/mmdetection/blob/master/mmdetection/tools/fuse_conv_bn.py#L57\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def main():\"}, {\"line_number\": 2, \"line_content\": \"    args = parse_args()\"}, {\"line_number\": 3, \"line_content\": \"    model = init_detector(args.config, args.checkpoint)\"}, {\"line_number\": 4, \"line_content\": \"    fused_model = fuse_module(model)\"}, {\"line_number\": 5, \"line_content\": \"    save_checkpoint(fused_model, args.out)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/open-mmlab/mmdetection\", \"direct_link_to_file_line\": \"https://github.com/open-mmlab/mmdetection/blob/master/mmdetection/tools/regnet2mmdet.py#L15\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def convert_head(model_key, model_weight, state_dict, converted_names):\"}, {\"line_number\": 2, \"line_content\": \"    new_key = model_key.replace('head.fc', 'fc')\"}, {\"line_number\": 3, \"line_content\": \"    state_dict[new_key] = model_weight\"}, {\"line_number\": 4, \"line_content\": \"    converted_names.add(model_key)\"}, {\"line_number\": 5, \"line_content\": \"    print(f'Convert {model_key} to {new_key}')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/open-mmlab/mmdetection\", \"direct_link_to_file_line\": \"https://github.com/open-mmlab/mmdetection/blob/master/mmdetection/tools/robustness_eval.py#L190\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_distortions_from_results(eval_output):\"}, {\"line_number\": 2, \"line_content\": \"    distortions = []\"}, {\"line_number\": 3, \"line_content\": \"    for i, distortion in enumerate(eval_output):\"}, {\"line_number\": 4, \"line_content\": \"        distortions.append(distortion.replace('_', ' '))\"}, {\"line_number\": 5, \"line_content\": \"    return distortions\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/timgrossmann/InstaPy\", \"direct_link_to_file_line\": \"https://github.com/timgrossmann/InstaPy/blob/master/InstaPy/instapy/database_engine.py#L126\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def verify_database_directories(address):\"}, {\"line_number\": 2, \"line_content\": \"    db_dir = os.path.dirname(address)\"}, {\"line_number\": 3, \"line_content\": \"    if not os.path.exists(db_dir):\"}, {\"line_number\": 4, \"line_content\": \"        os.makedirs(db_dir)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/timgrossmann/InstaPy\", \"direct_link_to_file_line\": \"https://github.com/timgrossmann/InstaPy/blob/master/InstaPy/instapy/database_engine.py#L181\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def select_profile_by_username(cursor, name):\"}, {\"line_number\": 2, \"line_content\": \"    cursor.execute(SELECT_FROM_PROFILE_WHERE_NAME, {'name': name})\"}, {\"line_number\": 3, \"line_content\": \"    profile = cursor.fetchone()\"}, {\"line_number\": 4, \"line_content\": \"    return profile\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/timgrossmann/InstaPy\", \"direct_link_to_file_line\": \"https://github.com/timgrossmann/InstaPy/blob/master/InstaPy/instapy/util.py#L1049\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def username_url_to_username(username_url):\"}, {\"line_number\": 2, \"line_content\": \"    a = username_url.replace('https://www.instagram.com/', '')\"}, {\"line_number\": 3, \"line_content\": \"    username = a.split('/')\"}, {\"line_number\": 4, \"line_content\": \"    return username[0]\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/timgrossmann/InstaPy\", \"direct_link_to_file_line\": \"https://github.com/timgrossmann/InstaPy/blob/master/InstaPy/instapy/util.py#L2074\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def remove_extra_spaces(text):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\" Find and remove redundant spaces more than 1 in text \\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    new_text = re.sub(' {2,}', ' ', text)\"}, {\"line_number\": 4, \"line_content\": \"    return new_text\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/timgrossmann/InstaPy\", \"direct_link_to_file_line\": \"https://github.com/timgrossmann/InstaPy/blob/master/InstaPy/instapy/util.py#L2081\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def has_any_letters(text):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\" Check if the text has any letters in it \\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    result = any(c.isalpha() for c in text)\"}, {\"line_number\": 4, \"line_content\": \"    return result\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/Theano/Theano\", \"direct_link_to_file_line\": \"https://github.com/Theano/Theano/blob/master/Theano/versioneer.py#L728\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def plus_or_dot(pieces):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Return a + if we don't already have one, else return a .\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    if '+' in pieces.get('closest-tag', ''):\"}, {\"line_number\": 4, \"line_content\": \"        return '.'\"}, {\"line_number\": 5, \"line_content\": \"    return '+'\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/Theano/Theano\", \"direct_link_to_file_line\": \"https://github.com/Theano/Theano/blob/master/Theano/versioneer.py#L347\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get(parser, name):\"}, {\"line_number\": 2, \"line_content\": \"    if parser.has_option('versioneer', name):\"}, {\"line_number\": 3, \"line_content\": \"        return parser.get('versioneer', name)\"}, {\"line_number\": 4, \"line_content\": \"    return None\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/Theano/Theano\", \"direct_link_to_file_line\": \"https://github.com/Theano/Theano/blob/master/Theano/versioneer.py#L1516\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def run(self):\"}, {\"line_number\": 2, \"line_content\": \"    versions = get_versions()\"}, {\"line_number\": 3, \"line_content\": \"    self._versioneer_generated_versions = versions\"}, {\"line_number\": 4, \"line_content\": \"    self.distribution.metadata.version = versions['version']\"}, {\"line_number\": 5, \"line_content\": \"    return _sdist.run(self)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/Theano/Theano\", \"direct_link_to_file_line\": \"https://github.com/Theano/Theano/blob/master/Theano/doc/scripts/docgen.py#L38\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def mkdir(path):\"}, {\"line_number\": 2, \"line_content\": \"    try:\"}, {\"line_number\": 3, \"line_content\": \"        os.mkdir(path)\"}, {\"line_number\": 4, \"line_content\": \"    except OSError:\"}, {\"line_number\": 5, \"line_content\": \"        pass\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/Theano/Theano\", \"direct_link_to_file_line\": \"https://github.com/Theano/Theano/blob/master/Theano/doc/extending/extending_theano_solution_1.py#L32\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def perform(self, node, inputs, output_storage):\"}, {\"line_number\": 2, \"line_content\": \"    x, y = inputs\"}, {\"line_number\": 3, \"line_content\": \"    z = output_storage[0]\"}, {\"line_number\": 4, \"line_content\": \"    z[0] = x * y\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/psf/requests\", \"direct_link_to_file_line\": \"https://github.com/psf/requests/blob/master/requests/setup.py#L25\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def finalize_options(self):\"}, {\"line_number\": 2, \"line_content\": \"    TestCommand.finalize_options(self)\"}, {\"line_number\": 3, \"line_content\": \"    self.test_args = []\"}, {\"line_number\": 4, \"line_content\": \"    self.test_suite = True\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/psf/requests\", \"direct_link_to_file_line\": \"https://github.com/psf/requests/blob/master/requests/setup.py#L30\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def run_tests(self):\"}, {\"line_number\": 2, \"line_content\": \"    import pytest\"}, {\"line_number\": 3, \"line_content\": \"    errno = pytest.main(self.pytest_args)\"}, {\"line_number\": 4, \"line_content\": \"    sys.exit(errno)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/psf/requests\", \"direct_link_to_file_line\": \"https://github.com/psf/requests/blob/master/requests/requests/models.py#L342\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def prepare_method(self, method):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Prepares the given HTTP method.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    self.method = method\"}, {\"line_number\": 4, \"line_content\": \"    if self.method is not None:\"}, {\"line_number\": 5, \"line_content\": \"        self.method = to_native_string(self.method.upper())\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/psf/requests\", \"direct_link_to_file_line\": \"https://github.com/psf/requests/blob/master/requests/requests/models.py#L579\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def prepare_hooks(self, hooks):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Prepares the given hooks.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    hooks = hooks or []\"}, {\"line_number\": 4, \"line_content\": \"    for event in hooks:\"}, {\"line_number\": 5, \"line_content\": \"        self.register_hook(event, hooks[event])\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/psf/requests\", \"direct_link_to_file_line\": \"https://github.com/psf/requests/blob/master/requests/requests/models.py#L652\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __getstate__(self):\"}, {\"line_number\": 2, \"line_content\": \"    if not self._content_consumed:\"}, {\"line_number\": 3, \"line_content\": \"        self.content\"}, {\"line_number\": 4, \"line_content\": \"    return {attr: getattr(self, attr, None) for attr in self.__attrs__}\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ipython/ipython\", \"direct_link_to_file_line\": \"https://github.com/ipython/ipython/blob/master/ipython/setupbase.py#L39\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def execfile(fname, globs, locs=None):\"}, {\"line_number\": 2, \"line_content\": \"    locs = locs or globs\"}, {\"line_number\": 3, \"line_content\": \"    with open(fname) as f:\"}, {\"line_number\": 4, \"line_content\": \"        exec(compile(f.read(), fname, 'exec'), globs, locs)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ipython/ipython\", \"direct_link_to_file_line\": \"https://github.com/ipython/ipython/blob/master/ipython/setupbase.py#L148\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def run(self):\"}, {\"line_number\": 2, \"line_content\": \"    if sys.platform == 'win32':\"}, {\"line_number\": 3, \"line_content\": \"        raise Exception(\\\"This doesn't work on Windows.\\\")\"}, {\"line_number\": 4, \"line_content\": \"    for cmd_name in self.get_sub_commands():\"}, {\"line_number\": 5, \"line_content\": \"        self.run_command(cmd_name)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ipython/ipython\", \"direct_link_to_file_line\": \"https://github.com/ipython/ipython/blob/master/ipython/setupbase.py#L293\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def finalize_options(self):\"}, {\"line_number\": 2, \"line_content\": \"    self.set_undefined_options('build', ('build_scripts', 'build_dir'))\"}, {\"line_number\": 3, \"line_content\": \"    self.set_undefined_options('symlink', ('install_scripts', 'install_dir'\"}, {\"line_number\": 4, \"line_content\": \"        ), ('force', 'force'), ('skip_build', 'skip_build'))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ipython/ipython\", \"direct_link_to_file_line\": \"https://github.com/ipython/ipython/blob/master/ipython/tools/git-mpr.py#L37\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def git_new_branch(name):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Create a new branch with the given name and check it out.\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    check_call(['git', 'checkout', '-b', name])\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ipython/ipython\", \"direct_link_to_file_line\": \"https://github.com/ipython/ipython/blob/master/ipython/tools/backport_pr.py#L48\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def find_rejects(root='.'):\"}, {\"line_number\": 2, \"line_content\": \"    for dirname, dirs, files in os.walk(root):\"}, {\"line_number\": 3, \"line_content\": \"        for fname in files:\"}, {\"line_number\": 4, \"line_content\": \"            if fname.endswith('.rej'):\"}, {\"line_number\": 5, \"line_content\": \"                yield os.path.join(dirname, fname)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/jakubroztocil/httpie\", \"direct_link_to_file_line\": \"https://github.com/jakubroztocil/httpie/blob/master/httpie/setup.py#L18\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def finalize_options(self):\"}, {\"line_number\": 2, \"line_content\": \"    TestCommand.finalize_options(self)\"}, {\"line_number\": 3, \"line_content\": \"    self.test_args = ['--doctest-modules', '--verbose', './httpie', './tests']\"}, {\"line_number\": 4, \"line_content\": \"    self.test_suite = True\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/jakubroztocil/httpie\", \"direct_link_to_file_line\": \"https://github.com/jakubroztocil/httpie/blob/master/httpie/httpie/models.py#L19\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def headers(self) ->str:\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"Return a `str` with the message's headers.\\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    raise NotImplementedError()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/jakubroztocil/httpie\", \"direct_link_to_file_line\": \"https://github.com/jakubroztocil/httpie/blob/master/httpie/httpie/models.py#L19\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def encoding(self) ->Optional[str]:\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"Return a `str` with the message's encoding, if known.\\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    raise NotImplementedError()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/jakubroztocil/httpie\", \"direct_link_to_file_line\": \"https://github.com/jakubroztocil/httpie/blob/master/httpie/httpie/models.py#L19\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def body(self) ->bytes:\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"Return a `bytes` with the message's body.\\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    raise NotImplementedError()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/jakubroztocil/httpie\", \"direct_link_to_file_line\": \"https://github.com/jakubroztocil/httpie/blob/master/httpie/httpie/sessions.py#L58\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, path: Union[str, Path]):\"}, {\"line_number\": 2, \"line_content\": \"    super().__init__(path=Path(path))\"}, {\"line_number\": 3, \"line_content\": \"    self['headers'] = {}\"}, {\"line_number\": 4, \"line_content\": \"    self['cookies'] = {}\"}, {\"line_number\": 5, \"line_content\": \"    self['auth'] = {'type': None, 'username': None, 'password': None}\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/sivel/speedtest-cli\", \"direct_link_to_file_line\": \"https://github.com/sivel/speedtest-cli/blob/master/speedtest-cli/speedtest.py#L640\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_exception():\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Helper function to work with py2.4-py3 for getting the current\"}, {\"line_number\": 3, \"line_content\": \"    exception in a try/except block\"}, {\"line_number\": 4, \"line_content\": \"    \\\"\\\"\\\"\"}, {\"line_number\": 5, \"line_content\": \"    return sys.exc_info()[1]\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/sivel/speedtest-cli\", \"direct_link_to_file_line\": \"https://github.com/sivel/speedtest-cli/blob/master/speedtest-cli/speedtest.py#L1682\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def version():\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Print the version\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    printer('speedtest-cli %s' % __version__)\"}, {\"line_number\": 4, \"line_content\": \"    printer('Python %s' % sys.version.replace('\\\\n', ''))\"}, {\"line_number\": 5, \"line_content\": \"    sys.exit(0)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/sivel/speedtest-cli\", \"direct_link_to_file_line\": \"https://github.com/sivel/speedtest-cli/blob/master/speedtest-cli/speedtest.py#L1038\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def csv_header(delimiter=','):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Print the CSV Headers\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    printer(SpeedtestResults.csv_header(delimiter=delimiter))\"}, {\"line_number\": 4, \"line_content\": \"    sys.exit(0)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/sivel/speedtest-cli\", \"direct_link_to_file_line\": \"https://github.com/sivel/speedtest-cli/blob/master/speedtest-cli/speedtest.py#L47\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@staticmethod\"}, {\"line_number\": 2, \"line_content\": \"def isSet():\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"Dummy method to always return false\\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    return False\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/sivel/speedtest-cli\", \"direct_link_to_file_line\": \"https://github.com/sivel/speedtest-cli/blob/master/speedtest-cli/speedtest.py#L516\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def inner(host, **kwargs):\"}, {\"line_number\": 2, \"line_content\": \"    kwargs.update({'source_address': source_address, 'timeout': timeout})\"}, {\"line_number\": 3, \"line_content\": \"    if context:\"}, {\"line_number\": 4, \"line_content\": \"        kwargs['context'] = context\"}, {\"line_number\": 5, \"line_content\": \"    return connection(host, **kwargs)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tornadoweb/tornado\", \"direct_link_to_file_line\": \"https://github.com/tornadoweb/tornado/blob/master/tornado/tornado/concurrent.py#L234\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@typing.overload\"}, {\"line_number\": 2, \"line_content\": \"def future_add_done_callback(future: 'futures.Future[_T]', callback:\"}, {\"line_number\": 3, \"line_content\": \"    Callable[['futures.Future[_T]'], None]) ->None:\"}, {\"line_number\": 4, \"line_content\": \"    pass\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tornadoweb/tornado\", \"direct_link_to_file_line\": \"https://github.com/tornadoweb/tornado/blob/master/tornado/tornado/concurrent.py#L234\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@typing.overload\"}, {\"line_number\": 2, \"line_content\": \"def future_add_done_callback(future: 'Future[_T]', callback: Callable[[\"}, {\"line_number\": 3, \"line_content\": \"    'Future[_T]'], None]) ->None:\"}, {\"line_number\": 4, \"line_content\": \"    pass\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tornadoweb/tornado\", \"direct_link_to_file_line\": \"https://github.com/tornadoweb/tornado/blob/master/tornado/tornado/process.py#L308\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@classmethod\"}, {\"line_number\": 2, \"line_content\": \"def _cleanup(cls) ->None:\"}, {\"line_number\": 3, \"line_content\": \"    for pid in list(cls._waiting.keys()):\"}, {\"line_number\": 4, \"line_content\": \"        cls._try_cleanup_process(pid)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tornadoweb/tornado\", \"direct_link_to_file_line\": \"https://github.com/tornadoweb/tornado/blob/master/tornado/tornado/netutil.py#L440\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@run_on_executor\"}, {\"line_number\": 2, \"line_content\": \"def resolve(self, host: str, port: int, family: socket.AddressFamily=socket\"}, {\"line_number\": 3, \"line_content\": \"    .AF_UNSPEC) ->List[Tuple[int, Any]]:\"}, {\"line_number\": 4, \"line_content\": \"    return _resolve_addr(host, port, family)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tornadoweb/tornado\", \"direct_link_to_file_line\": \"https://github.com/tornadoweb/tornado/blob/master/tornado/tornado/util.py#L116\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def unconsumed_tail(self) ->bytes:\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"Returns the unconsumed portion left over\"}, {\"line_number\": 4, \"line_content\": \"        \\\"\\\"\\\"\"}, {\"line_number\": 5, \"line_content\": \"    return self.decompressobj.unconsumed_tail\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/geekcomputers/Python\", \"direct_link_to_file_line\": \"https://github.com/geekcomputers/Python/blob/master/Python/stackF_Harsh2255.py#L22\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def pop(stack):\"}, {\"line_number\": 2, \"line_content\": \"    if isEmpty(stack):\"}, {\"line_number\": 3, \"line_content\": \"        return str(-maxsize - 1)\"}, {\"line_number\": 4, \"line_content\": \"    return stack.pop()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/geekcomputers/Python\", \"direct_link_to_file_line\": \"https://github.com/geekcomputers/Python/blob/master/Python/stackF_Harsh2255.py#L29\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def peek(stack):\"}, {\"line_number\": 2, \"line_content\": \"    if isEmpty(stack):\"}, {\"line_number\": 3, \"line_content\": \"        return str(-maxsize - 1)\"}, {\"line_number\": 4, \"line_content\": \"    return stack[len(stack) - 1]\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/geekcomputers/Python\", \"direct_link_to_file_line\": \"https://github.com/geekcomputers/Python/blob/master/Python/ftp_send_receive.py#L23\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def receive_file(filename='example.txt'):\"}, {\"line_number\": 2, \"line_content\": \"    with open(filename, 'wb') as out_file:\"}, {\"line_number\": 3, \"line_content\": \"        ftp.retrbinary('RETR ' + filename, out_file.write, 1024)\"}, {\"line_number\": 4, \"line_content\": \"        ftp.quit()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/geekcomputers/Python\", \"direct_link_to_file_line\": \"https://github.com/geekcomputers/Python/blob/master/Python/ftp_send_receive.py#L35\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def send_file(filename='example.txt'):\"}, {\"line_number\": 2, \"line_content\": \"    with open(filename, 'rb') as in_file:\"}, {\"line_number\": 3, \"line_content\": \"        ftp.storbinary('STOR ' + filename, in_file)\"}, {\"line_number\": 4, \"line_content\": \"        ftp.quit()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/geekcomputers/Python\", \"direct_link_to_file_line\": \"https://github.com/geekcomputers/Python/blob/master/Python/Quick_Sort.py#L33\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def quickSort(arr, low, high):\"}, {\"line_number\": 2, \"line_content\": \"    if low < high:\"}, {\"line_number\": 3, \"line_content\": \"        pi = partition(arr, low, high)\"}, {\"line_number\": 4, \"line_content\": \"        quickSort(arr, low, pi - 1)\"}, {\"line_number\": 5, \"line_content\": \"        quickSort(arr, pi + 1, high)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/bitcoinbook/bitcoinbook\", \"direct_link_to_file_line\": \"https://github.com/bitcoinbook/bitcoinbook/blob/master/bitcoinbook/code/select-utxo.py#L12\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, tx_hash, tx_index, value):\"}, {\"line_number\": 2, \"line_content\": \"    self.tx_hash = tx_hash\"}, {\"line_number\": 3, \"line_content\": \"    self.tx_index = tx_index\"}, {\"line_number\": 4, \"line_content\": \"    self.value = value\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/sylnsfar/qrcode\", \"direct_link_to_file_line\": \"https://github.com/sylnsfar/qrcode/blob/master/qrcode/MyQR/mylibs/structure.py#L23\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def interleave_ecc(ecc):\"}, {\"line_number\": 2, \"line_content\": \"    ie = []\"}, {\"line_number\": 3, \"line_content\": \"    for t in zip(*ecc):\"}, {\"line_number\": 4, \"line_content\": \"        ie += list(t)\"}, {\"line_number\": 5, \"line_content\": \"    return ie\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/sylnsfar/qrcode\", \"direct_link_to_file_line\": \"https://github.com/sylnsfar/qrcode/blob/master/qrcode/MyQR/mylibs/draw.py#L22\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def draw_a_black_unit(p, x, y, ul):\"}, {\"line_number\": 2, \"line_content\": \"    for i in range(ul):\"}, {\"line_number\": 3, \"line_content\": \"        for j in range(ul):\"}, {\"line_number\": 4, \"line_content\": \"            p.putpixel((x + i, y + j), 0)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/microsoft/cascadia-code\", \"direct_link_to_file_line\": \"https://github.com/microsoft/cascadia-code/blob/master/cascadia-code/build.py#L20\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def step_set_font_name(n):\"}, {\"line_number\": 2, \"line_content\": \"    def _set(instance):\"}, {\"line_number\": 3, \"line_content\": \"        instance.info.familyName = n\"}, {\"line_number\": 4, \"line_content\": \"        instance.info.styleMapFamilyName = n\"}, {\"line_number\": 5, \"line_content\": \"    return _set\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/microsoft/cascadia-code\", \"direct_link_to_file_line\": \"https://github.com/microsoft/cascadia-code/blob/master/cascadia-code/build.py#L41\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def step_set_feature_file(n):\"}, {\"line_number\": 2, \"line_content\": \"    fea = n.read_text()\"}, {\"line_number\": 3, \"line_content\": \"    def _set(instance):\"}, {\"line_number\": 4, \"line_content\": \"        instance.features.text = fea\"}, {\"line_number\": 5, \"line_content\": \"    return _set\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/satwikkansal/wtfpython\", \"direct_link_to_file_line\": \"https://github.com/satwikkansal/wtfpython/blob/master/wtfpython/irrelevant/notebook_generator.py#L69\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def generate_markdown_block(lines):\"}, {\"line_number\": 2, \"line_content\": \"    global sequence_num\"}, {\"line_number\": 3, \"line_content\": \"    result = {'type': 'markdown', 'sequence_num': sequence_num, 'value': lines}\"}, {\"line_number\": 4, \"line_content\": \"    sequence_num += 1\"}, {\"line_number\": 5, \"line_content\": \"    return result\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/satwikkansal/wtfpython\", \"direct_link_to_file_line\": \"https://github.com/satwikkansal/wtfpython/blob/master/wtfpython/irrelevant/notebook_generator.py#L80\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def is_interactive_statement(line):\"}, {\"line_number\": 2, \"line_content\": \"    for prefix in STATEMENT_PREFIXES:\"}, {\"line_number\": 3, \"line_content\": \"        if line.lstrip().startswith(prefix):\"}, {\"line_number\": 4, \"line_content\": \"            return True\"}, {\"line_number\": 5, \"line_content\": \"    return False\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/satwikkansal/wtfpython\", \"direct_link_to_file_line\": \"https://github.com/satwikkansal/wtfpython/blob/master/wtfpython/irrelevant/notebook_generator.py#L186\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def remove_from_beginning(tokens, line):\"}, {\"line_number\": 2, \"line_content\": \"    for token in tokens:\"}, {\"line_number\": 3, \"line_content\": \"        if line.lstrip().startswith(token):\"}, {\"line_number\": 4, \"line_content\": \"            line = line.replace(token, '')\"}, {\"line_number\": 5, \"line_content\": \"    return line\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/satwikkansal/wtfpython\", \"direct_link_to_file_line\": \"https://github.com/satwikkansal/wtfpython/blob/master/wtfpython/wtfpython-pypi/wtf_python/main.py#L26\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def render_doc():\"}, {\"line_number\": 2, \"line_content\": \"    with open(file_path, 'r', encoding='utf-8') as f:\"}, {\"line_number\": 3, \"line_content\": \"        content = f.read()\"}, {\"line_number\": 4, \"line_content\": \"        pydoc.pager(content)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/rsms/inter\", \"direct_link_to_file_line\": \"https://github.com/rsms/inter/blob/master/inter/docs/lab/serve.py#L9\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def sighandler(signum, frame):\"}, {\"line_number\": 2, \"line_content\": \"    sys.stdout.write('\\\\n')\"}, {\"line_number\": 3, \"line_content\": \"    sys.stdout.flush()\"}, {\"line_number\": 4, \"line_content\": \"    sys.exit(1)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/rsms/inter\", \"direct_link_to_file_line\": \"https://github.com/rsms/inter/blob/master/inter/misc/glyphs-scripts/preflight.py#L37\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def masterLayersIterator(font):\"}, {\"line_number\": 2, \"line_content\": \"    for g in font.glyphs:\"}, {\"line_number\": 3, \"line_content\": \"        for master in font.masters:\"}, {\"line_number\": 4, \"line_content\": \"            yield g.layers[master.id], g\"}, {\"line_number\": 5, \"line_content\": \"        yieldAppMain()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/rsms/inter\", \"direct_link_to_file_line\": \"https://github.com/rsms/inter/blob/master/inter/misc/tools/enrich-glypnames.py#L41\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def getFirstNonDefaultGlyphName(uc, names):\"}, {\"line_number\": 2, \"line_content\": \"    for name in names:\"}, {\"line_number\": 3, \"line_content\": \"        if not isDefaultGlyphNameForUnicode(name, uc):\"}, {\"line_number\": 4, \"line_content\": \"            return name\"}, {\"line_number\": 5, \"line_content\": \"    return None\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/rsms/inter\", \"direct_link_to_file_line\": \"https://github.com/rsms/inter/blob/master/inter/misc/tools/enrich-glypnames.py#L339\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def renameUFODetails(font, ufoPath, newNames, dryRun=False, print=print):\"}, {\"line_number\": 2, \"line_content\": \"    renameUFOLib(ufoPath, newNames, dryRun, print)\"}, {\"line_number\": 3, \"line_content\": \"    renameUFOGroups(ufoPath, newNames, dryRun, print)\"}, {\"line_number\": 4, \"line_content\": \"    renameUFOKerning(ufoPath, newNames, dryRun, print)\"}, {\"line_number\": 5, \"line_content\": \"    renameUFOFeatures(font, ufoPath, newNames, dryRun, print)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/rsms/inter\", \"direct_link_to_file_line\": \"https://github.com/rsms/inter/blob/master/inter/misc/tools/gen-metrics-and-svgs.py#L34\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def glyphToSVGPath(g, yMul):\"}, {\"line_number\": 2, \"line_content\": \"    pen = SVGPathPen(g.getParent(), yMul)\"}, {\"line_number\": 3, \"line_content\": \"    g.draw(pen)\"}, {\"line_number\": 4, \"line_content\": \"    return pen.getCommands()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/home-assistant/core\", \"direct_link_to_file_line\": \"https://github.com/home-assistant/core/blob/master/core/script/lazytox.py#L40\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def validate_requirements_ok():\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Validate requirements, returns True of ok.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    from gen_requirements_all import main as req_main\"}, {\"line_number\": 4, \"line_content\": \"    return req_main(True) == 0\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/home-assistant/core\", \"direct_link_to_file_line\": \"https://github.com/home-assistant/core/blob/master/core/script/inspect_schemas.py#L28\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def add_msg(key, item):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Add a message.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    if key not in msg:\"}, {\"line_number\": 4, \"line_content\": \"        msg[key] = []\"}, {\"line_number\": 5, \"line_content\": \"    msg[key].append(item)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/home-assistant/core\", \"direct_link_to_file_line\": \"https://github.com/home-assistant/core/blob/master/core/script/gen_requirements_all.py#L122\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def core_requirements():\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Gather core requirements out of setup.py.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    reqs_raw = re.search('REQUIRES = \\\\\\\\[(.*?)\\\\\\\\]', Path('setup.py').\"}, {\"line_number\": 4, \"line_content\": \"        read_text(), re.S).group(1)\"}, {\"line_number\": 5, \"line_content\": \"    return [x[1] for x in re.findall('([\\\\'\\\\\\\\\\\"])(.*?)\\\\\\\\1', reqs_raw)]\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/home-assistant/core\", \"direct_link_to_file_line\": \"https://github.com/home-assistant/core/blob/master/core/script/gen_requirements_all.py#L295\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def gather_constraints():\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Construct output for constraint file.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    return '\\\\n'.join(sorted(core_requirements() + list(\"}, {\"line_number\": 4, \"line_content\": \"        gather_recursive_requirements('default_config'))) + ['']\"}, {\"line_number\": 5, \"line_content\": \"        ) + CONSTRAINT_BASE\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/home-assistant/core\", \"direct_link_to_file_line\": \"https://github.com/home-assistant/core/blob/master/core/script/gen_requirements_all.py#L309\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def diff_file(filename, content):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Diff a file.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    return list(difflib.context_diff([f'{line}\\\\n' for line in Path(filename\"}, {\"line_number\": 4, \"line_content\": \"        ).read_text().split('\\\\n')], [f'{line}\\\\n' for line in content.split(\"}, {\"line_number\": 5, \"line_content\": \"        '\\\\n')], filename, 'generated'))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/chubin/cheat.sh\", \"direct_link_to_file_line\": \"https://github.com/chubin/cheat.sh/blob/master/cheat.sh/lib/cheat_wrapper.py#L40\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _rewrite_aliases(word):\"}, {\"line_number\": 2, \"line_content\": \"    if word == ':bash.completion':\"}, {\"line_number\": 3, \"line_content\": \"        return ':bash_completion'\"}, {\"line_number\": 4, \"line_content\": \"    return word\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/chubin/cheat.sh\", \"direct_link_to_file_line\": \"https://github.com/chubin/cheat.sh/blob/master/cheat.sh/lib/config.py#L151\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _absolute_path(self, val):\"}, {\"line_number\": 2, \"line_content\": \"    if val.startswith('/'):\"}, {\"line_number\": 3, \"line_content\": \"        return val\"}, {\"line_number\": 4, \"line_content\": \"    return os.path.join(self['path.workdir'], val)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/chubin/cheat.sh\", \"direct_link_to_file_line\": \"https://github.com/chubin/cheat.sh/blob/master/cheat.sh/lib/config.py#L160\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __setitem__(self, key, val):\"}, {\"line_number\": 2, \"line_content\": \"    if key.startswith('path.') and not val.startswith('/'):\"}, {\"line_number\": 3, \"line_content\": \"        val = self._absolute_path(val)\"}, {\"line_number\": 4, \"line_content\": \"    dict.__setitem__(self, key, val)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/chubin/cheat.sh\", \"direct_link_to_file_line\": \"https://github.com/chubin/cheat.sh/blob/master/cheat.sh/lib/fetch.py#L170\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def update_by_name(name):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    Find adapter by its `name` and update only it.\"}, {\"line_number\": 4, \"line_content\": \"    \\\"\\\"\\\"\"}, {\"line_number\": 5, \"line_content\": \"    pass\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/chubin/cheat.sh\", \"direct_link_to_file_line\": \"https://github.com/chubin/cheat.sh/blob/master/cheat.sh/lib/limits.py#L55\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _log_visit(self, interval, ip_address):\"}, {\"line_number\": 2, \"line_content\": \"    if ip_address not in self.counter[interval]:\"}, {\"line_number\": 3, \"line_content\": \"        self.counter[interval][ip_address] = 0\"}, {\"line_number\": 4, \"line_content\": \"    self.counter[interval][ip_address] += 1\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/reddit-archive/reddit\", \"direct_link_to_file_line\": \"https://github.com/reddit-archive/reddit/blob/master/reddit/scripts/geoip_service.py#L60\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def json_response(result):\"}, {\"line_number\": 2, \"line_content\": \"    json_output = json.dumps(result, ensure_ascii=False, encoding='iso-8859-1')\"}, {\"line_number\": 3, \"line_content\": \"    response = make_response(json_output.encode('utf-8'), 200)\"}, {\"line_number\": 4, \"line_content\": \"    response.headers['Content-Type'] = 'application/json; charset=utf-8'\"}, {\"line_number\": 5, \"line_content\": \"    return response\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/reddit-archive/reddit\", \"direct_link_to_file_line\": \"https://github.com/reddit-archive/reddit/blob/master/reddit/scripts/tracker.py#L174\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _fix_query_encoding(parse_result):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Fix encoding in the query string.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    query_params = parse_qsl(parse_result.query, keep_blank_values=True)\"}, {\"line_number\": 4, \"line_content\": \"    return parse_result._replace(query=urllib.urlencode(query_params))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/reddit-archive/reddit\", \"direct_link_to_file_line\": \"https://github.com/reddit-archive/reddit/blob/master/reddit/scripts/tracker.py#L85\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def to_config(self):\"}, {\"line_number\": 2, \"line_content\": \"    io = cStringIO.StringIO()\"}, {\"line_number\": 3, \"line_content\": \"    self.output.write(io)\"}, {\"line_number\": 4, \"line_content\": \"    return io.getvalue()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/reddit-archive/reddit\", \"direct_link_to_file_line\": \"https://github.com/reddit-archive/reddit/blob/master/reddit/scripts/hashdist.py#L96\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def main():\"}, {\"line_number\": 2, \"line_content\": \"    try:\"}, {\"line_number\": 3, \"line_content\": \"        return _main()\"}, {\"line_number\": 4, \"line_content\": \"    except KeyboardInterrupt:\"}, {\"line_number\": 5, \"line_content\": \"        os._exit(1)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/reddit-archive/reddit\", \"direct_link_to_file_line\": \"https://github.com/reddit-archive/reddit/blob/master/reddit/scripts/hashdist.py#L36\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, job_name, popen, iq):\"}, {\"line_number\": 2, \"line_content\": \"    self.job_name = job_name\"}, {\"line_number\": 3, \"line_content\": \"    self.popen = popen\"}, {\"line_number\": 4, \"line_content\": \"    self.iq = iq\"}, {\"line_number\": 5, \"line_content\": \"    super(JobInputter, self).__init__()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/python-pillow/Pillow\", \"direct_link_to_file_line\": \"https://github.com/python-pillow/Pillow/blob/master/Pillow/setup.py#L23\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_version():\"}, {\"line_number\": 2, \"line_content\": \"    version_file = 'src/PIL/_version.py'\"}, {\"line_number\": 3, \"line_content\": \"    with open(version_file, 'r') as f:\"}, {\"line_number\": 4, \"line_content\": \"        exec(compile(f.read(), version_file, 'exec'))\"}, {\"line_number\": 5, \"line_content\": \"    return locals()['__version__']\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/python-pillow/Pillow\", \"direct_link_to_file_line\": \"https://github.com/python-pillow/Pillow/blob/master/Pillow/Tests/test_file_mpo.py#L51\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_context_manager():\"}, {\"line_number\": 2, \"line_content\": \"    def open():\"}, {\"line_number\": 3, \"line_content\": \"        with Image.open(test_files[0]) as im:\"}, {\"line_number\": 4, \"line_content\": \"            im.load()\"}, {\"line_number\": 5, \"line_content\": \"    pytest.warns(None, open)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/python-pillow/Pillow\", \"direct_link_to_file_line\": \"https://github.com/python-pillow/Pillow/blob/master/Pillow/Tests/test_file_mpo.py#L81\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_frame_size():\"}, {\"line_number\": 2, \"line_content\": \"    with Image.open('Tests/images/sugarshack_frame_size.mpo') as im:\"}, {\"line_number\": 3, \"line_content\": \"        assert im.size == (640, 480)\"}, {\"line_number\": 4, \"line_content\": \"        im.seek(1)\"}, {\"line_number\": 5, \"line_content\": \"        assert im.size == (680, 480)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/python-pillow/Pillow\", \"direct_link_to_file_line\": \"https://github.com/python-pillow/Pillow/blob/master/Pillow/Tests/test_file_mpo.py#L112\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_mp_offset():\"}, {\"line_number\": 2, \"line_content\": \"    with Image.open('Tests/images/sugarshack_ifd_offset.mpo') as im:\"}, {\"line_number\": 3, \"line_content\": \"        mpinfo = im._getmp()\"}, {\"line_number\": 4, \"line_content\": \"        assert mpinfo[45056] == b'0100'\"}, {\"line_number\": 5, \"line_content\": \"        assert mpinfo[45057] == 2\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/python-pillow/Pillow\", \"direct_link_to_file_line\": \"https://github.com/python-pillow/Pillow/blob/master/Pillow/Tests/test_file_mpo.py#L121\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_mp_no_data():\"}, {\"line_number\": 2, \"line_content\": \"    with Image.open('Tests/images/sugarshack_no_data.mpo') as im:\"}, {\"line_number\": 3, \"line_content\": \"        with pytest.raises(ValueError):\"}, {\"line_number\": 4, \"line_content\": \"            im.seek(1)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/apachecn/awesome-algorithm\", \"direct_link_to_file_line\": \"https://github.com/apachecn/awesome-algorithm/blob/master/awesome-algorithm/docs/\\u5251\\u6307offer/Python/29-\\u6700\\u5c0f\\u7684k\\u4e2a\\u6570.py#L3\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def GetLeastNumbers_Solution(self, tinput, k):\"}, {\"line_number\": 2, \"line_content\": \"    if not tinput or k > len(tinput):\"}, {\"line_number\": 3, \"line_content\": \"        return []\"}, {\"line_number\": 4, \"line_content\": \"    tinput = self.quick_sort(tinput)\"}, {\"line_number\": 5, \"line_content\": \"    return tinput[:k]\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/apachecn/awesome-algorithm\", \"direct_link_to_file_line\": \"https://github.com/apachecn/awesome-algorithm/blob/master/awesome-algorithm/docs/\\u5251\\u6307offer/Python/38-\\u4e8c\\u53c9\\u6811\\u7684\\u6df1\\u5ea6.py#L8\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def TreeDepth(self, pRoot):\"}, {\"line_number\": 2, \"line_content\": \"    if not pRoot:\"}, {\"line_number\": 3, \"line_content\": \"        return 0\"}, {\"line_number\": 4, \"line_content\": \"    return max(self.TreeDepth(pRoot.left), self.TreeDepth(pRoot.right)) + 1\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/apachecn/awesome-algorithm\", \"direct_link_to_file_line\": \"https://github.com/apachecn/awesome-algorithm/blob/master/awesome-algorithm/docs/\\u5251\\u6307offer/Python/66-\\u673a\\u5668\\u4eba\\u7684\\u8fd0\\u52a8\\u8303\\u56f4.py#L3\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def movingCount(self, threshold, rows, cols):\"}, {\"line_number\": 2, \"line_content\": \"    visited = [False] * (rows * cols)\"}, {\"line_number\": 3, \"line_content\": \"    count = self.movingCountCore(threshold, rows, cols, 0, 0, visited)\"}, {\"line_number\": 4, \"line_content\": \"    return count\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/apachecn/awesome-algorithm\", \"direct_link_to_file_line\": \"https://github.com/apachecn/awesome-algorithm/blob/master/awesome-algorithm/docs/\\u5251\\u6307offer/Python/20-\\u5305\\u542bmin\\u51fd\\u6570\\u7684\\u6808.py#L16\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def pop(self):\"}, {\"line_number\": 2, \"line_content\": \"    if self.stack == None or self.minStack == None:\"}, {\"line_number\": 3, \"line_content\": \"        return None\"}, {\"line_number\": 4, \"line_content\": \"    self.minStack.pop()\"}, {\"line_number\": 5, \"line_content\": \"    self.stack.pop()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/apachecn/awesome-algorithm\", \"direct_link_to_file_line\": \"https://github.com/apachecn/awesome-algorithm/blob/master/awesome-algorithm/docs/\\u5251\\u6307offer/Python/61-\\u5e8f\\u5217\\u5316\\u4e8c\\u53c9\\u6811.py#L11\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def Serialize(self, root):\"}, {\"line_number\": 2, \"line_content\": \"    if not root:\"}, {\"line_number\": 3, \"line_content\": \"        return '#,'\"}, {\"line_number\": 4, \"line_content\": \"    return str(root.val) + ',' + self.Serialize(root.left) + self.Serialize(\"}, {\"line_number\": 5, \"line_content\": \"        root.right)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pallets/click\", \"direct_link_to_file_line\": \"https://github.com/pallets/click/blob/master/click/tests/test_bashcomplete.py#L17\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@click.command()\"}, {\"line_number\": 2, \"line_content\": \"@click.option('--local-opt')\"}, {\"line_number\": 3, \"line_content\": \"def cli(local_opt):\"}, {\"line_number\": 4, \"line_content\": \"    pass\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pallets/click\", \"direct_link_to_file_line\": \"https://github.com/pallets/click/blob/master/click/tests/test_bashcomplete.py#L17\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@click.command()\"}, {\"line_number\": 2, \"line_content\": \"@click.option('--shout/--no-shout', default=False)\"}, {\"line_number\": 3, \"line_content\": \"def cli(local_opt):\"}, {\"line_number\": 4, \"line_content\": \"    pass\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pallets/click\", \"direct_link_to_file_line\": \"https://github.com/pallets/click/blob/master/click/tests/test_bashcomplete.py#L36\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@click.group()\"}, {\"line_number\": 2, \"line_content\": \"@click.option('--pos', nargs=2, type=float)\"}, {\"line_number\": 3, \"line_content\": \"def cli(local_opt):\"}, {\"line_number\": 4, \"line_content\": \"    pass\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pallets/click\", \"direct_link_to_file_line\": \"https://github.com/pallets/click/blob/master/click/tests/test_bashcomplete.py#L41\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@cli.command()\"}, {\"line_number\": 2, \"line_content\": \"@click.option('--local-opt')\"}, {\"line_number\": 3, \"line_content\": \"def sub(local_opt):\"}, {\"line_number\": 4, \"line_content\": \"    pass\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pallets/click\", \"direct_link_to_file_line\": \"https://github.com/pallets/click/blob/master/click/tests/test_bashcomplete.py#L17\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@click.command()\"}, {\"line_number\": 2, \"line_content\": \"@click.option('--message', '-m', multiple=True)\"}, {\"line_number\": 3, \"line_content\": \"def cli(local_opt):\"}, {\"line_number\": 4, \"line_content\": \"    pass\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pyecharts/pyecharts\", \"direct_link_to_file_line\": \"https://github.com/pyecharts/pyecharts/blob/master/pyecharts/test/test_display.py#L6\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_display_html():\"}, {\"line_number\": 2, \"line_content\": \"    html_content = '<p>hello world<p/>'\"}, {\"line_number\": 3, \"line_content\": \"    obj = HTML(html_content)\"}, {\"line_number\": 4, \"line_content\": \"    assert_equal(obj.data, html_content)\"}, {\"line_number\": 5, \"line_content\": \"    assert_equal(obj.__html__(), html_content)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pyecharts/pyecharts\", \"direct_link_to_file_line\": \"https://github.com/pyecharts/pyecharts/blob/master/pyecharts/test/test_display.py#L13\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_display_javascript():\"}, {\"line_number\": 2, \"line_content\": \"    js_content = \\\"console.log('hello world')\\\"\"}, {\"line_number\": 3, \"line_content\": \"    obj = Javascript(js_content)\"}, {\"line_number\": 4, \"line_content\": \"    assert_equal(obj.data, js_content)\"}, {\"line_number\": 5, \"line_content\": \"    assert_equal(obj._repr_javascript_(), js_content)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pyecharts/pyecharts\", \"direct_link_to_file_line\": \"https://github.com/pyecharts/pyecharts/blob/master/pyecharts/test/test_image.py#L25\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_table_render_notebook():\"}, {\"line_number\": 2, \"line_content\": \"    CurrentConfig.NOTEBOOK_TYPE = NotebookType.JUPYTER_NOTEBOOK\"}, {\"line_number\": 3, \"line_content\": \"    image = _gen_image()\"}, {\"line_number\": 4, \"line_content\": \"    content = image.render_notebook().__html__()\"}, {\"line_number\": 5, \"line_content\": \"    assert_in(TEST_SRC, content)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pyecharts/pyecharts\", \"direct_link_to_file_line\": \"https://github.com/pyecharts/pyecharts/blob/master/pyecharts/test/test_timeline.py#L12\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def setUp(self):\"}, {\"line_number\": 2, \"line_content\": \"    bar0 = Bar().add_xaxis(['a', 'b']).add_yaxis('shop a', [1, 2]).add_yaxis(\"}, {\"line_number\": 3, \"line_content\": \"        'shop b', [3, 4]).set_global_opts(title_opts=opts.TitleOpts('test'),\"}, {\"line_number\": 4, \"line_content\": \"        visualmap_opts=opts.VisualMapOpts())\"}, {\"line_number\": 5, \"line_content\": \"    self.tl = Timeline().add(bar0, 'year 2015')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pyecharts/pyecharts\", \"direct_link_to_file_line\": \"https://github.com/pyecharts/pyecharts/blob/master/pyecharts/test/test_timeline.py#L29\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_custom_label(self):\"}, {\"line_number\": 2, \"line_content\": \"    custom_label_opts = {'custom': 'label'}\"}, {\"line_number\": 3, \"line_content\": \"    self.tl.add_schema(label_opts=custom_label_opts)\"}, {\"line_number\": 4, \"line_content\": \"    assert_equal(custom_label_opts, self.tl.options.get('baseOption').get(\"}, {\"line_number\": 5, \"line_content\": \"        'timeline').get('label'))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/nvbn/thefuck\", \"direct_link_to_file_line\": \"https://github.com/nvbn/thefuck/blob/master/thefuck/thefuck/types.py#L26\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def stdout(self):\"}, {\"line_number\": 3, \"line_content\": \"    logs.warn('`stdout` is deprecated, please use `output` instead')\"}, {\"line_number\": 4, \"line_content\": \"    return self.output\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/nvbn/thefuck\", \"direct_link_to_file_line\": \"https://github.com/nvbn/thefuck/blob/master/thefuck/thefuck/types.py#L26\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def stderr(self):\"}, {\"line_number\": 3, \"line_content\": \"    logs.warn('`stderr` is deprecated, please use `output` instead')\"}, {\"line_number\": 4, \"line_content\": \"    return self.output\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/nvbn/thefuck\", \"direct_link_to_file_line\": \"https://github.com/nvbn/thefuck/blob/master/thefuck/thefuck/types.py#L48\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __eq__(self, other):\"}, {\"line_number\": 2, \"line_content\": \"    if isinstance(other, Command):\"}, {\"line_number\": 3, \"line_content\": \"        return (self.script, self.output) == (other.script, other.output)\"}, {\"line_number\": 4, \"line_content\": \"    else:\"}, {\"line_number\": 5, \"line_content\": \"        return False\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/nvbn/thefuck\", \"direct_link_to_file_line\": \"https://github.com/nvbn/thefuck/blob/master/thefuck/thefuck/logs.py#L20\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def warn(title):\"}, {\"line_number\": 2, \"line_content\": \"    sys.stderr.write('{warn}[WARN] {title}{reset}\\\\n'.format(warn=color(\"}, {\"line_number\": 3, \"line_content\": \"        colorama.Back.RED + colorama.Fore.WHITE + colorama.Style.BRIGHT),\"}, {\"line_number\": 4, \"line_content\": \"        reset=color(colorama.Style.RESET_ALL), title=title))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/nvbn/thefuck\", \"direct_link_to_file_line\": \"https://github.com/nvbn/thefuck/blob/master/thefuck/thefuck/logs.py#L75\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def debug(msg):\"}, {\"line_number\": 2, \"line_content\": \"    if settings.debug:\"}, {\"line_number\": 3, \"line_content\": \"        sys.stderr.write('{blue}{bold}DEBUG:{reset} {msg}\\\\n'.format(msg=msg,\"}, {\"line_number\": 4, \"line_content\": \"            reset=color(colorama.Style.RESET_ALL), blue=color(colorama.Fore\"}, {\"line_number\": 5, \"line_content\": \"            .BLUE), bold=color(colorama.Style.BRIGHT)))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/joke2k/faker\", \"direct_link_to_file_line\": \"https://github.com/joke2k/faker/blob/master/faker/faker/generator.py#L13\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, **config):\"}, {\"line_number\": 2, \"line_content\": \"    self.providers = []\"}, {\"line_number\": 3, \"line_content\": \"    self.__config = dict(list(self.__config.items()) + list(config.items()))\"}, {\"line_number\": 4, \"line_content\": \"    self.__random = random\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/joke2k/faker\", \"direct_link_to_file_line\": \"https://github.com/joke2k/faker/blob/master/faker/faker/generator.py#L70\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def format(self, formatter, *args, **kwargs):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"        This is a secure way to make a fake from another Provider.\"}, {\"line_number\": 4, \"line_content\": \"        \\\"\\\"\\\"\"}, {\"line_number\": 5, \"line_content\": \"    return self.get_formatter(formatter)(*args, **kwargs)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/joke2k/faker\", \"direct_link_to_file_line\": \"https://github.com/joke2k/faker/blob/master/faker/faker/generator.py#L105\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __format_token(self, matches):\"}, {\"line_number\": 2, \"line_content\": \"    formatter = list(matches.groups())\"}, {\"line_number\": 3, \"line_content\": \"    formatter[1] = str(self.format(formatter[1]))\"}, {\"line_number\": 4, \"line_content\": \"    return ''.join(formatter)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/joke2k/faker\", \"direct_link_to_file_line\": \"https://github.com/joke2k/faker/blob/master/faker/faker/utils/distribution.py#L6\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def random_sample(random=None):\"}, {\"line_number\": 2, \"line_content\": \"    if random is None:\"}, {\"line_number\": 3, \"line_content\": \"        random = mod_random\"}, {\"line_number\": 4, \"line_content\": \"    return random.uniform(0.0, 1.0)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/joke2k/faker\", \"direct_link_to_file_line\": \"https://github.com/joke2k/faker/blob/master/faker/faker/utils/distribution.py#L12\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def cumsum(it):\"}, {\"line_number\": 2, \"line_content\": \"    total = 0\"}, {\"line_number\": 3, \"line_content\": \"    for x in it:\"}, {\"line_number\": 4, \"line_content\": \"        total += x\"}, {\"line_number\": 5, \"line_content\": \"        yield total\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/eliangcs/http-prompt\", \"direct_link_to_file_line\": \"https://github.com/eliangcs/http-prompt/blob/master/http-prompt/http_prompt/completer.py#L78\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def root_commands(self, context, match):\"}, {\"line_number\": 2, \"line_content\": \"    return chain(self._generic_generate(ROOT_COMMANDS.keys(), {},\"}, {\"line_number\": 3, \"line_content\": \"        ROOT_COMMANDS), self.actions(context, match), self.concat_mutations\"}, {\"line_number\": 4, \"line_content\": \"        (context, match))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/eliangcs/http-prompt\", \"direct_link_to_file_line\": \"https://github.com/eliangcs/http-prompt/blob/master/http-prompt/http_prompt/completer.py#L114\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def existing_body_params(self, context, match):\"}, {\"line_number\": 2, \"line_content\": \"    params = context.body_params.copy()\"}, {\"line_number\": 3, \"line_content\": \"    params.update(context.body_json_params)\"}, {\"line_number\": 4, \"line_content\": \"    return self._generic_generate(params.keys(), params, 'Body parameter')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/eliangcs/http-prompt\", \"direct_link_to_file_line\": \"https://github.com/eliangcs/http-prompt/blob/master/http-prompt/http_prompt/config.py#L66\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def load():\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Read default and user config files and return them as a dict.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    config = load_default()\"}, {\"line_number\": 4, \"line_content\": \"    config.update(load_user())\"}, {\"line_number\": 5, \"line_content\": \"    return config\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/eliangcs/http-prompt\", \"direct_link_to_file_line\": \"https://github.com/eliangcs/http-prompt/blob/master/http-prompt/http_prompt/execution.py#L158\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def generate_cmds_with_explanations(summary, cmds):\"}, {\"line_number\": 2, \"line_content\": \"    text = '{0}:\\\\n'.format(summary)\"}, {\"line_number\": 3, \"line_content\": \"    for cmd, explanation in cmds:\"}, {\"line_number\": 4, \"line_content\": \"        text += '\\\\t{0:<10}\\\\t{1:<20}\\\\n'.format(cmd, explanation)\"}, {\"line_number\": 5, \"line_content\": \"    return text + '\\\\n'\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/eliangcs/http-prompt\", \"direct_link_to_file_line\": \"https://github.com/eliangcs/http-prompt/blob/master/http-prompt/http_prompt/execution.py#L222\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"@output.setter\"}, {\"line_number\": 2, \"line_content\": \"def output(self, new_output):\"}, {\"line_number\": 3, \"line_content\": \"    if self._output:\"}, {\"line_number\": 4, \"line_content\": \"        self._output.close()\"}, {\"line_number\": 5, \"line_content\": \"    self._output = new_output\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/soimort/you-get\", \"direct_link_to_file_line\": \"https://github.com/soimort/you-get/blob/master/you-get/tests/test.py#L42\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_bilibil(self):\"}, {\"line_number\": 2, \"line_content\": \"    bilibili.download('https://www.bilibili.com/watchlater/#/BV1PE411q7mZ/p6',\"}, {\"line_number\": 3, \"line_content\": \"        info_only=True)\"}, {\"line_number\": 4, \"line_content\": \"    bilibili.download('https://www.bilibili.com/watchlater/#/av74906671/p6',\"}, {\"line_number\": 5, \"line_content\": \"        info_only=True)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/soimort/you-get\", \"direct_link_to_file_line\": \"https://github.com/soimort/you-get/blob/master/you-get/tests/test.py#L50\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_soundcloud(self):\"}, {\"line_number\": 2, \"line_content\": \"    soundcloud.download('https://soundcloud.com/keiny-pham/impure-bird',\"}, {\"line_number\": 3, \"line_content\": \"        info_only=True)\"}, {\"line_number\": 4, \"line_content\": \"    soundcloud.download('https://soundcloud.com/anthony-flieger/sets/cytus',\"}, {\"line_number\": 5, \"line_content\": \"        info_only=True)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/soimort/you-get\", \"direct_link_to_file_line\": \"https://github.com/soimort/you-get/blob/master/you-get/tests/test_util.py#L8\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_legitimize(self):\"}, {\"line_number\": 2, \"line_content\": \"    self.assertEqual(legitimize('1*2', os='linux'), '1*2')\"}, {\"line_number\": 3, \"line_content\": \"    self.assertEqual(legitimize('1*2', os='mac'), '1*2')\"}, {\"line_number\": 4, \"line_content\": \"    self.assertEqual(legitimize('1*2', os='windows'), '1-2')\"}, {\"line_number\": 5, \"line_content\": \"    self.assertEqual(legitimize('1*2', os='wsl'), '1-2')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/soimort/you-get\", \"direct_link_to_file_line\": \"https://github.com/soimort/you-get/blob/master/you-get/tests/test_common.py#L9\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_match1(self):\"}, {\"line_number\": 2, \"line_content\": \"    self.assertEqual(match1('http://youtu.be/1234567890A',\"}, {\"line_number\": 3, \"line_content\": \"        'youtu.be/([^/]+)'), '1234567890A')\"}, {\"line_number\": 4, \"line_content\": \"    self.assertEqual(match1('http://youtu.be/1234567890A',\"}, {\"line_number\": 5, \"line_content\": \"        'youtu.be/([^/]+)', 'youtu.(\\\\\\\\w+)'), ['1234567890A', 'be'])\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/soimort/you-get\", \"direct_link_to_file_line\": \"https://github.com/soimort/you-get/blob/master/you-get/src/you_get/extractor.py#L174\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def p_playlist(self, stream_id=None):\"}, {\"line_number\": 2, \"line_content\": \"    maybe_print('site:                %s' % self.__class__.name)\"}, {\"line_number\": 3, \"line_content\": \"    print('playlist:            %s' % self.title)\"}, {\"line_number\": 4, \"line_content\": \"    print('videos:')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/localstack/localstack\", \"direct_link_to_file_line\": \"https://github.com/localstack/localstack/blob/master/localstack/localstack/config.py#L21\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def is_env_not_false(env_var_name):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\" Whether the given environment variable is empty or has a truthy value. \\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    return os.environ.get(env_var_name, '').lower().strip(\"}, {\"line_number\": 4, \"line_content\": \"        ) not in FALSE_STRINGS\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/localstack/localstack\", \"direct_link_to_file_line\": \"https://github.com/localstack/localstack/blob/master/localstack/localstack/utils/testutil.py#L28\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def copy_dir(source, target):\"}, {\"line_number\": 2, \"line_content\": \"    if is_alpine():\"}, {\"line_number\": 3, \"line_content\": \"        return run('cp -r %s %s' % (source, target))\"}, {\"line_number\": 4, \"line_content\": \"    shutil.copytree(source, target)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/localstack/localstack\", \"direct_link_to_file_line\": \"https://github.com/localstack/localstack/blob/master/localstack/localstack/utils/testutil.py#L35\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def rm_dir(dir):\"}, {\"line_number\": 2, \"line_content\": \"    if is_alpine():\"}, {\"line_number\": 3, \"line_content\": \"        return run('rm -r %s' % dir)\"}, {\"line_number\": 4, \"line_content\": \"    shutil.rmtree(dir)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/localstack/localstack\", \"direct_link_to_file_line\": \"https://github.com/localstack/localstack/blob/master/localstack/localstack/utils/testutil.py#L91\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def create_zip_file_cli(source_path, base_dir, zip_file):\"}, {\"line_number\": 2, \"line_content\": \"    source = '*' if source_path == base_dir else os.path.basename(source_path)\"}, {\"line_number\": 3, \"line_content\": \"    command = 'cd %s; zip -r %s %s' % (base_dir, zip_file, source)\"}, {\"line_number\": 4, \"line_content\": \"    run(command)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/localstack/localstack\", \"direct_link_to_file_line\": \"https://github.com/localstack/localstack/blob/master/localstack/localstack/utils/testutil.py#L193\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def assert_objects(asserts, all_objects):\"}, {\"line_number\": 2, \"line_content\": \"    if type(asserts) is not list:\"}, {\"line_number\": 3, \"line_content\": \"        asserts = [asserts]\"}, {\"line_number\": 4, \"line_content\": \"    for obj in asserts:\"}, {\"line_number\": 5, \"line_content\": \"        assert_object(obj, all_objects)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/cool-RR/PySnooper\", \"direct_link_to_file_line\": \"https://github.com/cool-RR/PySnooper/blob/master/PySnooper/pysnooper/pycompat.py#L87\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def timedelta_parse(s):\"}, {\"line_number\": 2, \"line_content\": \"    hours, minutes, seconds, microseconds = map(int, s.replace('.', ':').\"}, {\"line_number\": 3, \"line_content\": \"        split(':'))\"}, {\"line_number\": 4, \"line_content\": \"    return datetime_module.timedelta(hours=hours, minutes=minutes, seconds=\"}, {\"line_number\": 5, \"line_content\": \"        seconds, microseconds=microseconds)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/cool-RR/PySnooper\", \"direct_link_to_file_line\": \"https://github.com/cool-RR/PySnooper/blob/master/PySnooper/pysnooper/pycompat.py#L31\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@abc.abstractmethod\"}, {\"line_number\": 2, \"line_content\": \"def __fspath__(self):\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"Return the file system path representation of the object.\\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    raise NotImplementedError\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/cool-RR/PySnooper\", \"direct_link_to_file_line\": \"https://github.com/cool-RR/PySnooper/blob/master/PySnooper/pysnooper/pycompat.py#L36\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@classmethod\"}, {\"line_number\": 2, \"line_content\": \"def __subclasshook__(cls, subclass):\"}, {\"line_number\": 3, \"line_content\": \"    return hasattr(subclass, '__fspath__') or hasattr(subclass, 'open'\"}, {\"line_number\": 4, \"line_content\": \"        ) and 'path' in subclass.__name__.lower()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/cool-RR/PySnooper\", \"direct_link_to_file_line\": \"https://github.com/cool-RR/PySnooper/blob/master/PySnooper/pysnooper/variables.py#L13\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def needs_parentheses(source):\"}, {\"line_number\": 2, \"line_content\": \"    def code(s):\"}, {\"line_number\": 3, \"line_content\": \"        return compile(s, '<variable>', 'eval').co_code\"}, {\"line_number\": 4, \"line_content\": \"    return code('{}.x'.format(source)) != code('({}).x'.format(source))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/cool-RR/PySnooper\", \"direct_link_to_file_line\": \"https://github.com/cool-RR/PySnooper/blob/master/PySnooper/pysnooper/variables.py#L117\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __getitem__(self, item):\"}, {\"line_number\": 2, \"line_content\": \"    assert isinstance(item, slice)\"}, {\"line_number\": 3, \"line_content\": \"    result = deepcopy(self)\"}, {\"line_number\": 4, \"line_content\": \"    result._slice = item\"}, {\"line_number\": 5, \"line_content\": \"    return result\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/nbedos/termtosvg\", \"direct_link_to_file_line\": \"https://github.com/nbedos/termtosvg/blob/master/termtosvg/termtosvg/term.py#L42\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, fileno):\"}, {\"line_number\": 2, \"line_content\": \"    self.fileno = fileno\"}, {\"line_number\": 3, \"line_content\": \"    self.mode = None\"}, {\"line_number\": 4, \"line_content\": \"    self.ttysize = None\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/nbedos/termtosvg\", \"direct_link_to_file_line\": \"https://github.com/nbedos/termtosvg/blob/master/termtosvg/termtosvg/term.py#L62\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __exit__(self, exc_type, exc_val, exc_tb):\"}, {\"line_number\": 2, \"line_content\": \"    if self.ttysize is not None:\"}, {\"line_number\": 3, \"line_content\": \"        fcntl.ioctl(self.fileno, termios.TIOCSWINSZ, self.ttysize)\"}, {\"line_number\": 4, \"line_content\": \"    if self.mode is not None:\"}, {\"line_number\": 5, \"line_content\": \"        tty.tcsetattr(self.fileno, tty.TCSAFLUSH, self.mode)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/nbedos/termtosvg\", \"direct_link_to_file_line\": \"https://github.com/nbedos/termtosvg/blob/master/termtosvg/termtosvg/anim.py#L121\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, attributes):\"}, {\"line_number\": 2, \"line_content\": \"    self.group_index = None\"}, {\"line_number\": 3, \"line_content\": \"    self.last_index = None\"}, {\"line_number\": 4, \"line_content\": \"    self.attributes = attributes\"}, {\"line_number\": 5, \"line_content\": \"    self.last_key_attributes = None\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/nbedos/termtosvg\", \"direct_link_to_file_line\": \"https://github.com/nbedos/termtosvg/blob/master/termtosvg/termtosvg/tests/test_anim.py#L262\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def extract_text_content(frame):\"}, {\"line_number\": 2, \"line_content\": \"    svg_screen_elem = frame.find('.//{{{namespace}}}svg[@id=\\\"screen\\\"]'.\"}, {\"line_number\": 3, \"line_content\": \"        format(namespace=anim.SVG_NS))\"}, {\"line_number\": 4, \"line_content\": \"    return {elem.text for elem in svg_screen_elem.findall('.//text')}\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/keras-team/keras\", \"direct_link_to_file_line\": \"https://github.com/keras-team/keras/blob/master/keras/docs/autogen.py#L110\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def code_snippet(snippet):\"}, {\"line_number\": 2, \"line_content\": \"    result = '```python\\\\n'\"}, {\"line_number\": 3, \"line_content\": \"    result += snippet.encode('unicode_escape').decode('utf8') + '\\\\n'\"}, {\"line_number\": 4, \"line_content\": \"    result += '```\\\\n'\"}, {\"line_number\": 5, \"line_content\": \"    return result\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/keras-team/keras\", \"direct_link_to_file_line\": \"https://github.com/keras-team/keras/blob/master/keras/tests/test_loss_masking.py#L29\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_masking_is_all_zeros():\"}, {\"line_number\": 2, \"line_content\": \"    x = y = np.array([[[0], [0]]])\"}, {\"line_number\": 3, \"line_content\": \"    model = create_masking_model()\"}, {\"line_number\": 4, \"line_content\": \"    loss = model.train_on_batch(x, y)\"}, {\"line_number\": 5, \"line_content\": \"    assert loss == 0\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/keras-team/keras\", \"direct_link_to_file_line\": \"https://github.com/keras-team/keras/blob/master/keras/tests/test_multiprocessing.py#L103\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@threadsafe_generator\"}, {\"line_number\": 2, \"line_content\": \"def invalid_generator():\"}, {\"line_number\": 3, \"line_content\": \"    while True:\"}, {\"line_number\": 4, \"line_content\": \"        yield arr_data[:10], arr_data[:10], arr_labels[:10], arr_labels[:10]\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/keras-team/keras\", \"direct_link_to_file_line\": \"https://github.com/keras-team/keras/blob/master/keras/tests/test_model_saving.py#L633\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _convert_model_weights(source_model, target_model):\"}, {\"line_number\": 2, \"line_content\": \"    _, fname = tempfile.mkstemp('.h5')\"}, {\"line_number\": 3, \"line_content\": \"    source_model.save_weights(fname)\"}, {\"line_number\": 4, \"line_content\": \"    target_model.load_weights(fname)\"}, {\"line_number\": 5, \"line_content\": \"    os.remove(fname)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/keras-team/keras\", \"direct_link_to_file_line\": \"https://github.com/keras-team/keras/blob/master/keras/tests/keras/metrics_functional_test.py#L38\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"@pytest.mark.parametrize('metric', all_sparse_metrics)\"}, {\"line_number\": 2, \"line_content\": \"def test_sparse_metrics(metric):\"}, {\"line_number\": 3, \"line_content\": \"    y_a = K.variable(np.random.randint(0, 7, (6,)), dtype=K.floatx())\"}, {\"line_number\": 4, \"line_content\": \"    y_b = K.variable(np.random.random((6, 7)), dtype=K.floatx())\"}, {\"line_number\": 5, \"line_content\": \"    assert K.eval(metric(y_a, y_b)).shape == (6,)\"}]}}"]}