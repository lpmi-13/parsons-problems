{"functions": ["{\"type\": \"functions\", \"project_source\": \"https://github.com/huggingface/transformers\", \"direct_link_to_file_line\": \"https://github.com/huggingface/transformers/blob/master/utils/link_tester.py#L37\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def find_all_links(file_paths):\"}, {\"line_number\": 2, \"line_content\": \"    links = []\"}, {\"line_number\": 3, \"line_content\": \"    for path in file_paths:\"}, {\"line_number\": 4, \"line_content\": \"        links += scan_code_for_links(path)\"}, {\"line_number\": 5, \"line_content\": \"    return [link for link in links if link != S3_BUCKET_PREFIX]\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/huggingface/transformers\", \"direct_link_to_file_line\": \"https://github.com/huggingface/transformers/blob/master/utils/check_repo.py#L217\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def find_documented_classes(doc_file):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\" Parse the content of doc_file to detect which classes it documents\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    with open(os.path.join(PATH_TO_DOC, doc_file)) as f:\"}, {\"line_number\": 4, \"line_content\": \"        content = f.read()\"}, {\"line_number\": 5, \"line_content\": \"    return re.findall('autoclass:: transformers.(\\\\\\\\S+)\\\\\\\\s+', content)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/huggingface/transformers\", \"direct_link_to_file_line\": \"https://github.com/huggingface/transformers/blob/master/templates/adding_a_new_model/modeling_xxx.py#L156\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, config):\"}, {\"line_number\": 2, \"line_content\": \"    super().__init__()\"}, {\"line_number\": 3, \"line_content\": \"    self.attention = XxxAttention(config)\"}, {\"line_number\": 4, \"line_content\": \"    self.intermediate = XxxIntermediate(config)\"}, {\"line_number\": 5, \"line_content\": \"    self.output = XxxOutput(config)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/huggingface/transformers\", \"direct_link_to_file_line\": \"https://github.com/huggingface/transformers/blob/master/templates/adding_a_new_model/modeling_xxx.py#L156\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, config):\"}, {\"line_number\": 2, \"line_content\": \"    super().__init__(config)\"}, {\"line_number\": 3, \"line_content\": \"    self.transformer = XxxModel(config)\"}, {\"line_number\": 4, \"line_content\": \"    self.lm_head = nn.Linear(config.n_embd, config.vocab_size)\"}, {\"line_number\": 5, \"line_content\": \"    self.init_weights()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/huggingface/transformers\", \"direct_link_to_file_line\": \"https://github.com/huggingface/transformers/blob/master/templates/adding_a_new_model/tokenization_xxx.py#L186\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def convert_tokens_to_string(self, tokens):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\" Converts a sequence of tokens (string) in a single string. \\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    out_string = ' '.join(tokens).replace(' ##', '').strip()\"}, {\"line_number\": 4, \"line_content\": \"    return out_string\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/keras-team/keras\", \"direct_link_to_file_line\": \"https://github.com/keras-team/keras/blob/master/docs/autogen.py#L110\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def code_snippet(snippet):\"}, {\"line_number\": 2, \"line_content\": \"    result = '```python\\\\n'\"}, {\"line_number\": 3, \"line_content\": \"    result += snippet.encode('unicode_escape').decode('utf8') + '\\\\n'\"}, {\"line_number\": 4, \"line_content\": \"    result += '```\\\\n'\"}, {\"line_number\": 5, \"line_content\": \"    return result\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/keras-team/keras\", \"direct_link_to_file_line\": \"https://github.com/keras-team/keras/blob/master/tests/test_loss_masking.py#L29\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_masking_is_all_zeros():\"}, {\"line_number\": 2, \"line_content\": \"    x = y = np.array([[[0], [0]]])\"}, {\"line_number\": 3, \"line_content\": \"    model = create_masking_model()\"}, {\"line_number\": 4, \"line_content\": \"    loss = model.train_on_batch(x, y)\"}, {\"line_number\": 5, \"line_content\": \"    assert loss == 0\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/keras-team/keras\", \"direct_link_to_file_line\": \"https://github.com/keras-team/keras/blob/master/tests/test_multiprocessing.py#L103\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@threadsafe_generator\"}, {\"line_number\": 2, \"line_content\": \"def invalid_generator():\"}, {\"line_number\": 3, \"line_content\": \"    while True:\"}, {\"line_number\": 4, \"line_content\": \"        yield arr_data[:10], arr_data[:10], arr_labels[:10], arr_labels[:10]\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/keras-team/keras\", \"direct_link_to_file_line\": \"https://github.com/keras-team/keras/blob/master/tests/test_model_saving.py#L633\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _convert_model_weights(source_model, target_model):\"}, {\"line_number\": 2, \"line_content\": \"    _, fname = tempfile.mkstemp('.h5')\"}, {\"line_number\": 3, \"line_content\": \"    source_model.save_weights(fname)\"}, {\"line_number\": 4, \"line_content\": \"    target_model.load_weights(fname)\"}, {\"line_number\": 5, \"line_content\": \"    os.remove(fname)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/keras-team/keras\", \"direct_link_to_file_line\": \"https://github.com/keras-team/keras/blob/master/tests/keras/metrics_functional_test.py#L38\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"@pytest.mark.parametrize('metric', all_sparse_metrics)\"}, {\"line_number\": 2, \"line_content\": \"def test_sparse_metrics(metric):\"}, {\"line_number\": 3, \"line_content\": \"    y_a = K.variable(np.random.randint(0, 7, (6,)), dtype=K.floatx())\"}, {\"line_number\": 4, \"line_content\": \"    y_b = K.variable(np.random.random((6, 7)), dtype=K.floatx())\"}, {\"line_number\": 5, \"line_content\": \"    assert K.eval(metric(y_a, y_b)).shape == (6,)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/521xueweihan/HelloGitHub\", \"direct_link_to_file_line\": \"https://github.com/521xueweihan/HelloGitHub/blob/master/script/make_content/make_content.py#L71\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def make_all_content():\"}, {\"line_number\": 2, \"line_content\": \"    dir_list = os.listdir(os.path.abspath(os.curdir))\"}, {\"line_number\": 3, \"line_content\": \"    for fi_dir in dir_list:\"}, {\"line_number\": 4, \"line_content\": \"        if os.path.isdir(fi_dir) and 'script' not in fi_dir:\"}, {\"line_number\": 5, \"line_content\": \"            make_content(fi_dir)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/django/django\", \"direct_link_to_file_line\": \"https://github.com/django/django/blob/master/django/forms/models.py#L575\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def initial_form_count(self):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Return the number of forms that are required in this FormSet.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    if not self.is_bound:\"}, {\"line_number\": 4, \"line_content\": \"        return len(self.get_queryset())\"}, {\"line_number\": 5, \"line_content\": \"    return super().initial_form_count()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/django/django\", \"direct_link_to_file_line\": \"https://github.com/django/django/blob/master/django/forms/models.py#L581\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _existing_object(self, pk):\"}, {\"line_number\": 2, \"line_content\": \"    if not hasattr(self, '_object_dict'):\"}, {\"line_number\": 3, \"line_content\": \"        self._object_dict = {o.pk: o for o in self.get_queryset()}\"}, {\"line_number\": 4, \"line_content\": \"    return self._object_dict.get(pk)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/django/django\", \"direct_link_to_file_line\": \"https://github.com/django/django/blob/master/django/forms/models.py#L656\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def delete_existing(self, obj, commit=True):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Deletes an existing model instance.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    if commit:\"}, {\"line_number\": 4, \"line_content\": \"        obj.delete()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/django/django\", \"direct_link_to_file_line\": \"https://github.com/django/django/blob/master/django/forms/models.py#L763\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_date_error_message(self, date_check):\"}, {\"line_number\": 2, \"line_content\": \"    return gettext(\"}, {\"line_number\": 3, \"line_content\": \"        'Please correct the duplicate data for %(field_name)s which must be unique for the %(lookup)s in %(date_field)s.'\"}, {\"line_number\": 4, \"line_content\": \"        ) % {'field_name': date_check[2], 'date_field': date_check[3],\"}, {\"line_number\": 5, \"line_content\": \"        'lookup': str(date_check[1])}\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/django/django\", \"direct_link_to_file_line\": \"https://github.com/django/django/blob/master/django/forms/models.py#L575\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def initial_form_count(self):\"}, {\"line_number\": 2, \"line_content\": \"    if self.save_as_new:\"}, {\"line_number\": 3, \"line_content\": \"        return 0\"}, {\"line_number\": 4, \"line_content\": \"    return super().initial_form_count()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/deepfakes/faceswap\", \"direct_link_to_file_line\": \"https://github.com/deepfakes/faceswap/blob/master/setup.py#L60\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def encoding(self):\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\" Get system encoding \\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    return locale.getpreferredencoding()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/deepfakes/faceswap\", \"direct_link_to_file_line\": \"https://github.com/deepfakes/faceswap/blob/master/setup.py#L60\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def os_version(self):\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\" Get OS Version \\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    return platform.system(), platform.release()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/deepfakes/faceswap\", \"direct_link_to_file_line\": \"https://github.com/deepfakes/faceswap/blob/master/setup.py#L60\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def py_version(self):\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\" Get Python Version \\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    return platform.python_version(), platform.architecture()[0]\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/deepfakes/faceswap\", \"direct_link_to_file_line\": \"https://github.com/deepfakes/faceswap/blob/master/setup.py#L60\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def is_conda(self):\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\" Check whether using Conda \\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    return 'conda' in sys.version.lower() or os.path.exists(os.path.join(\"}, {\"line_number\": 5, \"line_content\": \"        sys.prefix, 'conda-meta'))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/deepfakes/faceswap\", \"direct_link_to_file_line\": \"https://github.com/deepfakes/faceswap/blob/master/setup.py#L60\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def ld_library_path(self):\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\" Get the ld library path \\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    return os.environ.get('LD_LIBRARY_PATH', None)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pallets/flask\", \"direct_link_to_file_line\": \"https://github.com/pallets/flask/blob/master/tests/test_json_tag.py#L65\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_tag_interface():\"}, {\"line_number\": 2, \"line_content\": \"    t = JSONTag(None)\"}, {\"line_number\": 3, \"line_content\": \"    pytest.raises(NotImplementedError, t.check, None)\"}, {\"line_number\": 4, \"line_content\": \"    pytest.raises(NotImplementedError, t.to_json, None)\"}, {\"line_number\": 5, \"line_content\": \"    pytest.raises(NotImplementedError, t.to_python, None)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pallets/flask\", \"direct_link_to_file_line\": \"https://github.com/pallets/flask/blob/master/tests/test_templating.py#L103\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_escaping_without_template_filename(app, client, req_ctx):\"}, {\"line_number\": 2, \"line_content\": \"    assert flask.render_template_string('{{ foo }}', foo='<test>'\"}, {\"line_number\": 3, \"line_content\": \"        ) == '&lt;test&gt;'\"}, {\"line_number\": 4, \"line_content\": \"    assert flask.render_template('mail.txt', foo='<test>') == '<test> Mail'\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pallets/flask\", \"direct_link_to_file_line\": \"https://github.com/pallets/flask/blob/master/tests/test_templating.py#L15\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@app.route('/')\"}, {\"line_number\": 2, \"line_content\": \"def index():\"}, {\"line_number\": 3, \"line_content\": \"    return flask.render_template('escaping_template.html', text=text, html=\"}, {\"line_number\": 4, \"line_content\": \"        flask.Markup(text))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pallets/flask\", \"direct_link_to_file_line\": \"https://github.com/pallets/flask/blob/master/tests/test_templating.py#L15\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@app.route('/')\"}, {\"line_number\": 2, \"line_content\": \"def index():\"}, {\"line_number\": 3, \"line_content\": \"    return flask.render_template('non_escaping_template.txt', text=text,\"}, {\"line_number\": 4, \"line_content\": \"        html=flask.Markup(text))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pallets/flask\", \"direct_link_to_file_line\": \"https://github.com/pallets/flask/blob/master/tests/test_templating.py#L15\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@app.route('/')\"}, {\"line_number\": 2, \"line_content\": \"def index():\"}, {\"line_number\": 3, \"line_content\": \"    return flask.render_template(['no_template.xml', 'simple_template.html',\"}, {\"line_number\": 4, \"line_content\": \"        'context_template.html'], value=23)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/python/cpython\", \"direct_link_to_file_line\": \"https://github.com/python/cpython/blob/master/setup.py#L106\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def set_compiler_flags(compiler_flags, compiler_py_flags_nodist):\"}, {\"line_number\": 2, \"line_content\": \"    flags = sysconfig.get_config_var(compiler_flags)\"}, {\"line_number\": 3, \"line_content\": \"    py_flags_nodist = sysconfig.get_config_var(compiler_py_flags_nodist)\"}, {\"line_number\": 4, \"line_content\": \"    sysconfig.get_config_vars()[compiler_flags] = flags + ' ' + py_flags_nodist\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/python/cpython\", \"direct_link_to_file_line\": \"https://github.com/python/cpython/blob/master/setup.py#L375\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def set_srcdir(self):\"}, {\"line_number\": 2, \"line_content\": \"    self.srcdir = sysconfig.get_config_var('srcdir')\"}, {\"line_number\": 3, \"line_content\": \"    if not self.srcdir:\"}, {\"line_number\": 4, \"line_content\": \"        raise ValueError('No source directory; cannot proceed.')\"}, {\"line_number\": 5, \"line_content\": \"    self.srcdir = os.path.abspath(self.srcdir)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/python/cpython\", \"direct_link_to_file_line\": \"https://github.com/python/cpython/blob/master/setup.py#L1744\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def detect_multibytecodecs(self):\"}, {\"line_number\": 2, \"line_content\": \"    self.add(Extension('_multibytecodec', ['cjkcodecs/multibytecodec.c']))\"}, {\"line_number\": 3, \"line_content\": \"    for loc in ('kr', 'jp', 'cn', 'tw', 'hk', 'iso2022'):\"}, {\"line_number\": 4, \"line_content\": \"        self.add(Extension('_codecs_%s' % loc, ['cjkcodecs/_codecs_%s.c' %\"}, {\"line_number\": 5, \"line_content\": \"            loc]))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/python/cpython\", \"direct_link_to_file_line\": \"https://github.com/python/cpython/blob/master/setup.py#L2529\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def install(self):\"}, {\"line_number\": 2, \"line_content\": \"    outfiles = install_lib.install(self)\"}, {\"line_number\": 3, \"line_content\": \"    self.set_file_modes(outfiles, 420, 493)\"}, {\"line_number\": 4, \"line_content\": \"    self.set_dir_modes(self.install_dir, 493)\"}, {\"line_number\": 5, \"line_content\": \"    return outfiles\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/python/cpython\", \"direct_link_to_file_line\": \"https://github.com/python/cpython/blob/master/Lib/pdb.py#L1609\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def set_trace(*, header=None):\"}, {\"line_number\": 2, \"line_content\": \"    pdb = Pdb()\"}, {\"line_number\": 3, \"line_content\": \"    if header is not None:\"}, {\"line_number\": 4, \"line_content\": \"        pdb.message(header)\"}, {\"line_number\": 5, \"line_content\": \"    pdb.set_trace(sys._getframe().f_back)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/public-apis/public-apis\", \"direct_link_to_file_line\": \"https://github.com/public-apis/public-apis/blob/master/build/validate_format.py#L29\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def add_error(line_num, message):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"adds an error to the dynamic error list\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    err = '(L{:03d}) {}'.format(line_num + 1, message)\"}, {\"line_number\": 4, \"line_content\": \"    errors.append(err)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/jakubroztocil/httpie\", \"direct_link_to_file_line\": \"https://github.com/jakubroztocil/httpie/blob/master/setup.py#L18\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def finalize_options(self):\"}, {\"line_number\": 2, \"line_content\": \"    TestCommand.finalize_options(self)\"}, {\"line_number\": 3, \"line_content\": \"    self.test_args = ['--doctest-modules', '--verbose', './httpie', './tests']\"}, {\"line_number\": 4, \"line_content\": \"    self.test_suite = True\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/jakubroztocil/httpie\", \"direct_link_to_file_line\": \"https://github.com/jakubroztocil/httpie/blob/master/httpie/models.py#L19\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def headers(self) ->str:\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"Return a `str` with the message's headers.\\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    raise NotImplementedError()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/jakubroztocil/httpie\", \"direct_link_to_file_line\": \"https://github.com/jakubroztocil/httpie/blob/master/httpie/models.py#L19\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def encoding(self) ->Optional[str]:\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"Return a `str` with the message's encoding, if known.\\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    raise NotImplementedError()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/jakubroztocil/httpie\", \"direct_link_to_file_line\": \"https://github.com/jakubroztocil/httpie/blob/master/httpie/models.py#L19\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def body(self) ->bytes:\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"Return a `bytes` with the message's body.\\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    raise NotImplementedError()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/jakubroztocil/httpie\", \"direct_link_to_file_line\": \"https://github.com/jakubroztocil/httpie/blob/master/httpie/uploads.py#L80\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def new_read(*args):\"}, {\"line_number\": 2, \"line_content\": \"    chunk = orig_read(*args)\"}, {\"line_number\": 3, \"line_content\": \"    body_read_callback(chunk)\"}, {\"line_number\": 4, \"line_content\": \"    return chunk\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/psf/requests\", \"direct_link_to_file_line\": \"https://github.com/psf/requests/blob/master/setup.py#L25\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def finalize_options(self):\"}, {\"line_number\": 2, \"line_content\": \"    TestCommand.finalize_options(self)\"}, {\"line_number\": 3, \"line_content\": \"    self.test_args = []\"}, {\"line_number\": 4, \"line_content\": \"    self.test_suite = True\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/psf/requests\", \"direct_link_to_file_line\": \"https://github.com/psf/requests/blob/master/setup.py#L30\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def run_tests(self):\"}, {\"line_number\": 2, \"line_content\": \"    import pytest\"}, {\"line_number\": 3, \"line_content\": \"    errno = pytest.main(self.pytest_args)\"}, {\"line_number\": 4, \"line_content\": \"    sys.exit(errno)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/psf/requests\", \"direct_link_to_file_line\": \"https://github.com/psf/requests/blob/master/requests/models.py#L342\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def prepare_method(self, method):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Prepares the given HTTP method.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    self.method = method\"}, {\"line_number\": 4, \"line_content\": \"    if self.method is not None:\"}, {\"line_number\": 5, \"line_content\": \"        self.method = to_native_string(self.method.upper())\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/psf/requests\", \"direct_link_to_file_line\": \"https://github.com/psf/requests/blob/master/requests/models.py#L579\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def prepare_hooks(self, hooks):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Prepares the given hooks.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    hooks = hooks or []\"}, {\"line_number\": 4, \"line_content\": \"    for event in hooks:\"}, {\"line_number\": 5, \"line_content\": \"        self.register_hook(event, hooks[event])\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/psf/requests\", \"direct_link_to_file_line\": \"https://github.com/psf/requests/blob/master/requests/models.py#L652\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __getstate__(self):\"}, {\"line_number\": 2, \"line_content\": \"    if not self._content_consumed:\"}, {\"line_number\": 3, \"line_content\": \"        self.content\"}, {\"line_number\": 4, \"line_content\": \"    return {attr: getattr(self, attr, None) for attr in self.__attrs__}\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ageitgey/face_recognition\", \"direct_link_to_file_line\": \"https://github.com/ageitgey/face_recognition/blob/master/face_recognition/face_recognition_cli.py#L35\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def print_result(filename, name, distance, show_distance=False):\"}, {\"line_number\": 2, \"line_content\": \"    if show_distance:\"}, {\"line_number\": 3, \"line_content\": \"        print('{},{},{}'.format(filename, name, distance))\"}, {\"line_number\": 4, \"line_content\": \"    else:\"}, {\"line_number\": 5, \"line_content\": \"        print('{},{}'.format(filename, name))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ageitgey/face_recognition\", \"direct_link_to_file_line\": \"https://github.com/ageitgey/face_recognition/blob/master/tests/test_face_recognition.py#L24\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_load_image_file(self):\"}, {\"line_number\": 2, \"line_content\": \"    img = api.load_image_file(os.path.join(os.path.dirname(__file__),\"}, {\"line_number\": 3, \"line_content\": \"        'test_images', 'obama.jpg'))\"}, {\"line_number\": 4, \"line_content\": \"    self.assertEqual(img.shape, (1137, 910, 3))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ageitgey/face_recognition\", \"direct_link_to_file_line\": \"https://github.com/ageitgey/face_recognition/blob/master/tests/test_face_recognition.py#L28\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_load_image_file_32bit(self):\"}, {\"line_number\": 2, \"line_content\": \"    img = api.load_image_file(os.path.join(os.path.dirname(__file__),\"}, {\"line_number\": 3, \"line_content\": \"        'test_images', '32bit.png'))\"}, {\"line_number\": 4, \"line_content\": \"    self.assertEqual(img.shape, (1200, 626, 3))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ageitgey/face_recognition\", \"direct_link_to_file_line\": \"https://github.com/ageitgey/face_recognition/blob/master/examples/facerec_from_webcam_multiprocessing.py#L19\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def next_id(current_id, worker_num):\"}, {\"line_number\": 2, \"line_content\": \"    if current_id == worker_num:\"}, {\"line_number\": 3, \"line_content\": \"        return 1\"}, {\"line_number\": 4, \"line_content\": \"    else:\"}, {\"line_number\": 5, \"line_content\": \"        return current_id + 1\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ageitgey/face_recognition\", \"direct_link_to_file_line\": \"https://github.com/ageitgey/face_recognition/blob/master/examples/facerec_from_webcam_multiprocessing.py#L27\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def prev_id(current_id, worker_num):\"}, {\"line_number\": 2, \"line_content\": \"    if current_id == 1:\"}, {\"line_number\": 3, \"line_content\": \"        return worker_num\"}, {\"line_number\": 4, \"line_content\": \"    else:\"}, {\"line_number\": 5, \"line_content\": \"        return current_id - 1\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/scrapy/scrapy\", \"direct_link_to_file_line\": \"https://github.com/scrapy/scrapy/blob/master/conftest.py#L27\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@pytest.fixture()\"}, {\"line_number\": 2, \"line_content\": \"def chdir(tmpdir):\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"Change to pytest-provided temporary directory\\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    tmpdir.chdir()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/scrapy/scrapy\", \"direct_link_to_file_line\": \"https://github.com/scrapy/scrapy/blob/master/conftest.py#L52\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"@pytest.fixture(autouse=True)\"}, {\"line_number\": 2, \"line_content\": \"def only_asyncio(request, reactor_pytest):\"}, {\"line_number\": 3, \"line_content\": \"    if request.node.get_closest_marker('only_asyncio'\"}, {\"line_number\": 4, \"line_content\": \"        ) and reactor_pytest != 'asyncio':\"}, {\"line_number\": 5, \"line_content\": \"        pytest.skip('This test is only run with --reactor=asyncio')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/scrapy/scrapy\", \"direct_link_to_file_line\": \"https://github.com/scrapy/scrapy/blob/master/extras/qps-bench-server.py#L11\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self):\"}, {\"line_number\": 2, \"line_content\": \"    Resource.__init__(self)\"}, {\"line_number\": 3, \"line_content\": \"    self.concurrent = 0\"}, {\"line_number\": 4, \"line_content\": \"    self.tail = deque(maxlen=100)\"}, {\"line_number\": 5, \"line_content\": \"    self._reset_stats()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/scrapy/scrapy\", \"direct_link_to_file_line\": \"https://github.com/scrapy/scrapy/blob/master/extras/qps-bench-server.py#L50\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _finish(self, request):\"}, {\"line_number\": 2, \"line_content\": \"    self.concurrent -= 1\"}, {\"line_number\": 3, \"line_content\": \"    if not request.finished and not request._disconnected:\"}, {\"line_number\": 4, \"line_content\": \"        request.finish()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/scrapy/scrapy\", \"direct_link_to_file_line\": \"https://github.com/scrapy/scrapy/blob/master/docs/conf.py#L315\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def maybe_skip_member(app, what, name, obj, skip, options):\"}, {\"line_number\": 2, \"line_content\": \"    if not skip:\"}, {\"line_number\": 3, \"line_content\": \"        return name in {'default_item_class', 'default_selector_class'}\"}, {\"line_number\": 4, \"line_content\": \"    return skip\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/donnemartin/system-design-primer\", \"direct_link_to_file_line\": \"https://github.com/donnemartin/system-design-primer/blob/master/solutions/system_design/sales_rank/sales_rank_mapreduce.py#L66\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def steps(self):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Run the map and reduce steps.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    return [self.mr(mapper=self.mapper, reducer=self.reducer), self.mr(\"}, {\"line_number\": 4, \"line_content\": \"        mapper=self.mapper_sort, reducer=self.reducer_identity)]\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/donnemartin/system-design-primer\", \"direct_link_to_file_line\": \"https://github.com/donnemartin/system-design-primer/blob/master/solutions/system_design/query_cache/query_cache_snippets.py#L10\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def parse_query(self, query):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Remove markup, break text into terms, deal with typos,\"}, {\"line_number\": 3, \"line_content\": \"        normalize capitalization, convert to use boolean operations.\"}, {\"line_number\": 4, \"line_content\": \"        \\\"\\\"\\\"\"}, {\"line_number\": 5, \"line_content\": \"    ...\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/donnemartin/system-design-primer\", \"direct_link_to_file_line\": \"https://github.com/donnemartin/system-design-primer/blob/master/solutions/system_design/query_cache/query_cache_snippets.py#L50\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, MAX_SIZE):\"}, {\"line_number\": 2, \"line_content\": \"    self.MAX_SIZE = MAX_SIZE\"}, {\"line_number\": 3, \"line_content\": \"    self.size = 0\"}, {\"line_number\": 4, \"line_content\": \"    self.lookup = {}\"}, {\"line_number\": 5, \"line_content\": \"    self.linked_list = LinkedList()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/donnemartin/system-design-primer\", \"direct_link_to_file_line\": \"https://github.com/donnemartin/system-design-primer/blob/master/solutions/system_design/web_crawler/web_crawler_mapreduce.py#L11\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def reducer(self, key, values):\"}, {\"line_number\": 2, \"line_content\": \"    total = sum(values)\"}, {\"line_number\": 3, \"line_content\": \"    if total == 1:\"}, {\"line_number\": 4, \"line_content\": \"        yield key, total\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/donnemartin/system-design-primer\", \"direct_link_to_file_line\": \"https://github.com/donnemartin/system-design-primer/blob/master/solutions/system_design/web_crawler/web_crawler_snippets.py#L37\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, url, contents, child_urls):\"}, {\"line_number\": 2, \"line_content\": \"    self.url = url\"}, {\"line_number\": 3, \"line_content\": \"    self.contents = contents\"}, {\"line_number\": 4, \"line_content\": \"    self.child_urls = child_urls\"}, {\"line_number\": 5, \"line_content\": \"    self.signature = self.create_signature()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/scikit-learn/scikit-learn\", \"direct_link_to_file_line\": \"https://github.com/scikit-learn/scikit-learn/blob/master/conftest.py#L93\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def pytest_configure(config):\"}, {\"line_number\": 2, \"line_content\": \"    import sys\"}, {\"line_number\": 3, \"line_content\": \"    sys._is_pytest_session = True\"}, {\"line_number\": 4, \"line_content\": \"    config.addinivalue_line('markers',\"}, {\"line_number\": 5, \"line_content\": \"        'network: mark a test for execution if network available.')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/scikit-learn/scikit-learn\", \"direct_link_to_file_line\": \"https://github.com/scikit-learn/scikit-learn/blob/master/doc/conf.py#L464\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def setup(app):\"}, {\"line_number\": 2, \"line_content\": \"    app.connect('builder-inited', generate_min_dependency_table)\"}, {\"line_number\": 3, \"line_content\": \"    app.connect('builder-inited', generate_min_dependency_substitutions)\"}, {\"line_number\": 4, \"line_content\": \"    app.connect('build-finished', make_carousel_thumbs)\"}, {\"line_number\": 5, \"line_content\": \"    app.connect('build-finished', filter_search_index)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/scikit-learn/scikit-learn\", \"direct_link_to_file_line\": \"https://github.com/scikit-learn/scikit-learn/blob/master/doc/conftest.py#L16\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def setup_labeled_faces():\"}, {\"line_number\": 2, \"line_content\": \"    data_home = get_data_home()\"}, {\"line_number\": 3, \"line_content\": \"    if not exists(join(data_home, 'lfw_home')):\"}, {\"line_number\": 4, \"line_content\": \"        raise SkipTest('Skipping dataset loading doctests')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/scikit-learn/scikit-learn\", \"direct_link_to_file_line\": \"https://github.com/scikit-learn/scikit-learn/blob/master/doc/conftest.py#L22\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def setup_rcv1():\"}, {\"line_number\": 2, \"line_content\": \"    check_skip_network()\"}, {\"line_number\": 3, \"line_content\": \"    rcv1_dir = join(get_data_home(), 'RCV1')\"}, {\"line_number\": 4, \"line_content\": \"    if not exists(rcv1_dir):\"}, {\"line_number\": 5, \"line_content\": \"        raise SkipTest('Download RCV1 dataset to run this test.')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/scikit-learn/scikit-learn\", \"direct_link_to_file_line\": \"https://github.com/scikit-learn/scikit-learn/blob/master/doc/conftest.py#L30\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def setup_twenty_newsgroups():\"}, {\"line_number\": 2, \"line_content\": \"    data_home = get_data_home()\"}, {\"line_number\": 3, \"line_content\": \"    cache_path = _pkl_filepath(get_data_home(), CACHE_NAME)\"}, {\"line_number\": 4, \"line_content\": \"    if not exists(cache_path):\"}, {\"line_number\": 5, \"line_content\": \"        raise SkipTest('Skipping dataset loading doctests')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ansible/ansible\", \"direct_link_to_file_line\": \"https://github.com/ansible/ansible/blob/master/setup.py#L275\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def read_file(file_name):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Read file and return its contents.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    with open(file_name, 'r') as f:\"}, {\"line_number\": 4, \"line_content\": \"        return f.read()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ansible/ansible\", \"direct_link_to_file_line\": \"https://github.com/ansible/ansible/blob/master/setup.py#L327\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_dynamic_setup_params():\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Add dynamically calculated setup params to static ones.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    return {'long_description': read_file('README.rst'), 'install_requires':\"}, {\"line_number\": 4, \"line_content\": \"        substitute_crypto_to_req(read_requirements('requirements.txt'))}\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ansible/ansible\", \"direct_link_to_file_line\": \"https://github.com/ansible/ansible/blob/master/hacking/report.py#L31\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def main():\"}, {\"line_number\": 2, \"line_content\": \"    os.chdir(BASE_PATH)\"}, {\"line_number\": 3, \"line_content\": \"    args = parse_args()\"}, {\"line_number\": 4, \"line_content\": \"    args.func()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ansible/ansible\", \"direct_link_to_file_line\": \"https://github.com/ansible/ansible/blob/master/hacking/report.py#L74\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def populate_database():\"}, {\"line_number\": 2, \"line_content\": \"    populate_modules()\"}, {\"line_number\": 3, \"line_content\": \"    populate_coverage()\"}, {\"line_number\": 4, \"line_content\": \"    populate_integration_targets()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ansible/ansible\", \"direct_link_to_file_line\": \"https://github.com/ansible/ansible/blob/master/hacking/report.py#L197\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def create_table(cursor, name, columns):\"}, {\"line_number\": 2, \"line_content\": \"    schema = ', '.join('%s %s' % column for column in columns)\"}, {\"line_number\": 3, \"line_content\": \"    cursor.execute('DROP TABLE IF EXISTS %s' % name)\"}, {\"line_number\": 4, \"line_content\": \"    cursor.execute('CREATE TABLE %s (%s)' % (name, schema))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ytdl-org/youtube-dl\", \"direct_link_to_file_line\": \"https://github.com/ytdl-org/youtube-dl/blob/master/test/test_youtube_signature.py#L100\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def setUp(self):\"}, {\"line_number\": 2, \"line_content\": \"    TEST_DIR = os.path.dirname(os.path.abspath(__file__))\"}, {\"line_number\": 3, \"line_content\": \"    self.TESTDATA_DIR = os.path.join(TEST_DIR, 'testdata')\"}, {\"line_number\": 4, \"line_content\": \"    if not os.path.exists(self.TESTDATA_DIR):\"}, {\"line_number\": 5, \"line_content\": \"        os.mkdir(self.TESTDATA_DIR)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ytdl-org/youtube-dl\", \"direct_link_to_file_line\": \"https://github.com/ytdl-org/youtube-dl/blob/master/test/test_download.py#L45\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, *args, **kwargs):\"}, {\"line_number\": 2, \"line_content\": \"    self.to_stderr = self.to_screen\"}, {\"line_number\": 3, \"line_content\": \"    self.processed_info_dicts = []\"}, {\"line_number\": 4, \"line_content\": \"    super(YoutubeDL, self).__init__(*args, **kwargs)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ytdl-org/youtube-dl\", \"direct_link_to_file_line\": \"https://github.com/ytdl-org/youtube-dl/blob/master/test/test_age_restriction.py#L43\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_youporn(self):\"}, {\"line_number\": 2, \"line_content\": \"    self._assert_restricted(\"}, {\"line_number\": 3, \"line_content\": \"        'http://www.youporn.com/watch/505835/sex-ed-is-it-safe-to-masturbate-daily/'\"}, {\"line_number\": 4, \"line_content\": \"        , '505835.mp4', 2, old_age=25)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ytdl-org/youtube-dl\", \"direct_link_to_file_line\": \"https://github.com/ytdl-org/youtube-dl/blob/master/test/helper.py#L92\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def gettestcases(include_onlymatching=False):\"}, {\"line_number\": 2, \"line_content\": \"    for ie in youtube_dl.extractor.gen_extractors():\"}, {\"line_number\": 3, \"line_content\": \"        for tc in ie.get_testcases(include_onlymatching):\"}, {\"line_number\": 4, \"line_content\": \"            yield tc\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ytdl-org/youtube-dl\", \"direct_link_to_file_line\": \"https://github.com/ytdl-org/youtube-dl/blob/master/test/helper.py#L183\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def expect_dict(self, got_dict, expected_dict):\"}, {\"line_number\": 2, \"line_content\": \"    for info_field, expected in expected_dict.items():\"}, {\"line_number\": 3, \"line_content\": \"        got = got_dict.get(info_field)\"}, {\"line_number\": 4, \"line_content\": \"        expect_value(self, got, expected, info_field)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/nvbn/thefuck\", \"direct_link_to_file_line\": \"https://github.com/nvbn/thefuck/blob/master/thefuck/types.py#L26\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def stdout(self):\"}, {\"line_number\": 3, \"line_content\": \"    logs.warn('`stdout` is deprecated, please use `output` instead')\"}, {\"line_number\": 4, \"line_content\": \"    return self.output\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/nvbn/thefuck\", \"direct_link_to_file_line\": \"https://github.com/nvbn/thefuck/blob/master/thefuck/types.py#L26\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def stderr(self):\"}, {\"line_number\": 3, \"line_content\": \"    logs.warn('`stderr` is deprecated, please use `output` instead')\"}, {\"line_number\": 4, \"line_content\": \"    return self.output\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/nvbn/thefuck\", \"direct_link_to_file_line\": \"https://github.com/nvbn/thefuck/blob/master/thefuck/types.py#L48\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __eq__(self, other):\"}, {\"line_number\": 2, \"line_content\": \"    if isinstance(other, Command):\"}, {\"line_number\": 3, \"line_content\": \"        return (self.script, self.output) == (other.script, other.output)\"}, {\"line_number\": 4, \"line_content\": \"    else:\"}, {\"line_number\": 5, \"line_content\": \"        return False\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/nvbn/thefuck\", \"direct_link_to_file_line\": \"https://github.com/nvbn/thefuck/blob/master/thefuck/logs.py#L20\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def warn(title):\"}, {\"line_number\": 2, \"line_content\": \"    sys.stderr.write('{warn}[WARN] {title}{reset}\\\\n'.format(warn=color(\"}, {\"line_number\": 3, \"line_content\": \"        colorama.Back.RED + colorama.Fore.WHITE + colorama.Style.BRIGHT),\"}, {\"line_number\": 4, \"line_content\": \"        reset=color(colorama.Style.RESET_ALL), title=title))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/nvbn/thefuck\", \"direct_link_to_file_line\": \"https://github.com/nvbn/thefuck/blob/master/thefuck/logs.py#L75\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def debug(msg):\"}, {\"line_number\": 2, \"line_content\": \"    if settings.debug:\"}, {\"line_number\": 3, \"line_content\": \"        sys.stderr.write('{blue}{bold}DEBUG:{reset} {msg}\\\\n'.format(msg=msg,\"}, {\"line_number\": 4, \"line_content\": \"            reset=color(colorama.Style.RESET_ALL), blue=color(colorama.Fore\"}, {\"line_number\": 5, \"line_content\": \"            .BLUE), bold=color(colorama.Style.BRIGHT)))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/home-assistant/core\", \"direct_link_to_file_line\": \"https://github.com/home-assistant/core/blob/master/script/lazytox.py#L40\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def validate_requirements_ok():\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Validate requirements, returns True of ok.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    from gen_requirements_all import main as req_main\"}, {\"line_number\": 4, \"line_content\": \"    return req_main(True) == 0\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/home-assistant/core\", \"direct_link_to_file_line\": \"https://github.com/home-assistant/core/blob/master/script/inspect_schemas.py#L28\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def add_msg(key, item):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Add a message.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    if key not in msg:\"}, {\"line_number\": 4, \"line_content\": \"        msg[key] = []\"}, {\"line_number\": 5, \"line_content\": \"    msg[key].append(item)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/home-assistant/core\", \"direct_link_to_file_line\": \"https://github.com/home-assistant/core/blob/master/script/gen_requirements_all.py#L137\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def core_requirements():\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Gather core requirements out of setup.py.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    reqs_raw = re.search('REQUIRES = \\\\\\\\[(.*?)\\\\\\\\]', Path('setup.py').\"}, {\"line_number\": 4, \"line_content\": \"        read_text(), re.S).group(1)\"}, {\"line_number\": 5, \"line_content\": \"    return [x[1] for x in re.findall('([\\\\'\\\\\\\\\\\"])(.*?)\\\\\\\\1', reqs_raw)]\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/home-assistant/core\", \"direct_link_to_file_line\": \"https://github.com/home-assistant/core/blob/master/script/gen_requirements_all.py#L311\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def gather_constraints():\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Construct output for constraint file.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    return '\\\\n'.join(sorted({*core_requirements(), *\"}, {\"line_number\": 4, \"line_content\": \"        gather_recursive_requirements('default_config'), *\"}, {\"line_number\": 5, \"line_content\": \"        gather_recursive_requirements('mqtt')}) + ['']) + CONSTRAINT_BASE\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/home-assistant/core\", \"direct_link_to_file_line\": \"https://github.com/home-assistant/core/blob/master/script/gen_requirements_all.py#L328\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def diff_file(filename, content):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Diff a file.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    return list(difflib.context_diff([f'{line}\\\\n' for line in Path(filename\"}, {\"line_number\": 4, \"line_content\": \"        ).read_text().split('\\\\n')], [f'{line}\\\\n' for line in content.split(\"}, {\"line_number\": 5, \"line_content\": \"        '\\\\n')], filename, 'generated'))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/TheAlgorithms/Python\", \"direct_link_to_file_line\": \"https://github.com/TheAlgorithms/Python/blob/master/other/lfu_cache.py#L22\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self):\"}, {\"line_number\": 2, \"line_content\": \"    self.head = DoubleLinkedListNode(None, None)\"}, {\"line_number\": 3, \"line_content\": \"    self.rear = DoubleLinkedListNode(None, None)\"}, {\"line_number\": 4, \"line_content\": \"    self.head.next, self.rear.prev = self.rear, self.head\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/TheAlgorithms/Python\", \"direct_link_to_file_line\": \"https://github.com/TheAlgorithms/Python/blob/master/other/sdes.py#L36\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def apply_sbox(s, data):\"}, {\"line_number\": 2, \"line_content\": \"    row = int('0b' + data[0] + data[-1], 2)\"}, {\"line_number\": 3, \"line_content\": \"    col = int('0b' + data[1:3], 2)\"}, {\"line_number\": 4, \"line_content\": \"    return bin(s[row][col])[2:]\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/TheAlgorithms/Python\", \"direct_link_to_file_line\": \"https://github.com/TheAlgorithms/Python/blob/master/other/game_of_life.py#L48\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def seed(canvas):\"}, {\"line_number\": 2, \"line_content\": \"    for i, row in enumerate(canvas):\"}, {\"line_number\": 3, \"line_content\": \"        for j, _ in enumerate(row):\"}, {\"line_number\": 4, \"line_content\": \"            canvas[i][j] = bool(random.getrandbits(1))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/TheAlgorithms/Python\", \"direct_link_to_file_line\": \"https://github.com/TheAlgorithms/Python/blob/master/other/lru_cache.py#L9\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, key: int, val: int):\"}, {\"line_number\": 2, \"line_content\": \"    self.key = key\"}, {\"line_number\": 3, \"line_content\": \"    self.val = val\"}, {\"line_number\": 4, \"line_content\": \"    self.next = None\"}, {\"line_number\": 5, \"line_content\": \"    self.prev = None\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/TheAlgorithms/Python\", \"direct_link_to_file_line\": \"https://github.com/TheAlgorithms/Python/blob/master/other/lru_cache.py#L21\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self):\"}, {\"line_number\": 2, \"line_content\": \"    self.head = DoubleLinkedListNode(None, None)\"}, {\"line_number\": 3, \"line_content\": \"    self.rear = DoubleLinkedListNode(None, None)\"}, {\"line_number\": 4, \"line_content\": \"    self.head.next, self.rear.prev = self.rear, self.head\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tensorflow/models\", \"direct_link_to_file_line\": \"https://github.com/tensorflow/models/blob/master/official/core/base_trainer.py#L132\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def train_loss(self):\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"Accesses the training loss metric object.\\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    return self._train_loss\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tensorflow/models\", \"direct_link_to_file_line\": \"https://github.com/tensorflow/models/blob/master/official/core/base_trainer.py#L132\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def validation_loss(self):\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"Accesses the validation loss metric object.\\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    return self._validation_loss\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tensorflow/models\", \"direct_link_to_file_line\": \"https://github.com/tensorflow/models/blob/master/official/core/base_trainer.py#L132\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def train_metrics(self):\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"Accesses all training metric objects.\\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    return self._train_metrics\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tensorflow/models\", \"direct_link_to_file_line\": \"https://github.com/tensorflow/models/blob/master/official/core/base_trainer.py#L132\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def validation_metrics(self):\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"Accesses all validation metric metric objects.\\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    return self._validation_metrics\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tensorflow/models\", \"direct_link_to_file_line\": \"https://github.com/tensorflow/models/blob/master/official/core/base_trainer.py#L132\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def checkpoint(self):\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"Accesses the training checkpoint.\\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    return self._checkpoint\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/soimort/you-get\", \"direct_link_to_file_line\": \"https://github.com/soimort/you-get/blob/master/tests/test.py#L43\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_bilibil(self):\"}, {\"line_number\": 2, \"line_content\": \"    bilibili.download('https://www.bilibili.com/watchlater/#/BV1PE411q7mZ/p6',\"}, {\"line_number\": 3, \"line_content\": \"        info_only=True)\"}, {\"line_number\": 4, \"line_content\": \"    bilibili.download('https://www.bilibili.com/watchlater/#/av74906671/p6',\"}, {\"line_number\": 5, \"line_content\": \"        info_only=True)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/soimort/you-get\", \"direct_link_to_file_line\": \"https://github.com/soimort/you-get/blob/master/tests/test_util.py#L8\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_legitimize(self):\"}, {\"line_number\": 2, \"line_content\": \"    self.assertEqual(legitimize('1*2', os='linux'), '1*2')\"}, {\"line_number\": 3, \"line_content\": \"    self.assertEqual(legitimize('1*2', os='mac'), '1*2')\"}, {\"line_number\": 4, \"line_content\": \"    self.assertEqual(legitimize('1*2', os='windows'), '1-2')\"}, {\"line_number\": 5, \"line_content\": \"    self.assertEqual(legitimize('1*2', os='wsl'), '1-2')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/soimort/you-get\", \"direct_link_to_file_line\": \"https://github.com/soimort/you-get/blob/master/tests/test_common.py#L9\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_match1(self):\"}, {\"line_number\": 2, \"line_content\": \"    self.assertEqual(match1('http://youtu.be/1234567890A',\"}, {\"line_number\": 3, \"line_content\": \"        'youtu.be/([^/]+)'), '1234567890A')\"}, {\"line_number\": 4, \"line_content\": \"    self.assertEqual(match1('http://youtu.be/1234567890A',\"}, {\"line_number\": 5, \"line_content\": \"        'youtu.be/([^/]+)', 'youtu.(\\\\\\\\w+)'), ['1234567890A', 'be'])\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/soimort/you-get\", \"direct_link_to_file_line\": \"https://github.com/soimort/you-get/blob/master/src/you_get/extractor.py#L174\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def p_playlist(self, stream_id=None):\"}, {\"line_number\": 2, \"line_content\": \"    maybe_print('site:                %s' % self.__class__.name)\"}, {\"line_number\": 3, \"line_content\": \"    print('playlist:            %s' % self.title)\"}, {\"line_number\": 4, \"line_content\": \"    print('videos:')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/soimort/you-get\", \"direct_link_to_file_line\": \"https://github.com/soimort/you-get/blob/master/src/you_get/common.py#L194\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def maybe_print(*s):\"}, {\"line_number\": 2, \"line_content\": \"    try:\"}, {\"line_number\": 3, \"line_content\": \"        print(*s)\"}, {\"line_number\": 4, \"line_content\": \"    except:\"}, {\"line_number\": 5, \"line_content\": \"        pass\"}]}}"]}