{"functions": {"small": ["{\"type\": \"functions\", \"project_source\": \"https://github.com/huggingface/transformers\", \"direct_link_to_file_line\": \"https://github.com/huggingface/transformers/blob/master/utils/link_tester.py#L37\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def find_all_links(file_paths):\"}, {\"line_number\": 2, \"line_content\": \"    links = []\"}, {\"line_number\": 3, \"line_content\": \"    for path in file_paths:\"}, {\"line_number\": 4, \"line_content\": \"        links += scan_code_for_links(path)\"}, {\"line_number\": 5, \"line_content\": \"    return [link for link in links if link != S3_BUCKET_PREFIX]\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/keras-team/keras\", \"direct_link_to_file_line\": \"https://github.com/keras-team/keras/blob/master/docs/autogen.py#L110\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def code_snippet(snippet):\"}, {\"line_number\": 2, \"line_content\": \"    result = '```python\\\\n'\"}, {\"line_number\": 3, \"line_content\": \"    result += snippet.encode('unicode_escape').decode('utf8') + '\\\\n'\"}, {\"line_number\": 4, \"line_content\": \"    result += '```\\\\n'\"}, {\"line_number\": 5, \"line_content\": \"    return result\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/521xueweihan/HelloGitHub\", \"direct_link_to_file_line\": \"https://github.com/521xueweihan/HelloGitHub/blob/master/script/make_content/make_content.py#L71\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def make_all_content():\"}, {\"line_number\": 2, \"line_content\": \"    dir_list = os.listdir(os.path.abspath(os.curdir))\"}, {\"line_number\": 3, \"line_content\": \"    for fi_dir in dir_list:\"}, {\"line_number\": 4, \"line_content\": \"        if os.path.isdir(fi_dir) and 'script' not in fi_dir:\"}, {\"line_number\": 5, \"line_content\": \"            make_content(fi_dir)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/django/django\", \"direct_link_to_file_line\": \"https://github.com/django/django/blob/master/django/forms/models.py#L575\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def initial_form_count(self):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Return the number of forms that are required in this FormSet.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    if not self.is_bound:\"}, {\"line_number\": 4, \"line_content\": \"        return len(self.get_queryset())\"}, {\"line_number\": 5, \"line_content\": \"    return super().initial_form_count()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/deepfakes/faceswap\", \"direct_link_to_file_line\": \"https://github.com/deepfakes/faceswap/blob/master/setup.py#L60\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def encoding(self):\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\" Get system encoding \\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    return locale.getpreferredencoding()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pallets/flask\", \"direct_link_to_file_line\": \"https://github.com/pallets/flask/blob/master/tests/test_json_tag.py#L65\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_tag_interface():\"}, {\"line_number\": 2, \"line_content\": \"    t = JSONTag(None)\"}, {\"line_number\": 3, \"line_content\": \"    pytest.raises(NotImplementedError, t.check, None)\"}, {\"line_number\": 4, \"line_content\": \"    pytest.raises(NotImplementedError, t.to_json, None)\"}, {\"line_number\": 5, \"line_content\": \"    pytest.raises(NotImplementedError, t.to_python, None)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/python/cpython\", \"direct_link_to_file_line\": \"https://github.com/python/cpython/blob/master/setup.py#L106\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def set_compiler_flags(compiler_flags, compiler_py_flags_nodist):\"}, {\"line_number\": 2, \"line_content\": \"    flags = sysconfig.get_config_var(compiler_flags)\"}, {\"line_number\": 3, \"line_content\": \"    py_flags_nodist = sysconfig.get_config_var(compiler_py_flags_nodist)\"}, {\"line_number\": 4, \"line_content\": \"    sysconfig.get_config_vars()[compiler_flags] = flags + ' ' + py_flags_nodist\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/public-apis/public-apis\", \"direct_link_to_file_line\": \"https://github.com/public-apis/public-apis/blob/master/build/validate_format.py#L29\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def add_error(line_num, message):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"adds an error to the dynamic error list\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    err = '(L{:03d}) {}'.format(line_num + 1, message)\"}, {\"line_number\": 4, \"line_content\": \"    errors.append(err)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/jakubroztocil/httpie\", \"direct_link_to_file_line\": \"https://github.com/jakubroztocil/httpie/blob/master/setup.py#L18\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def finalize_options(self):\"}, {\"line_number\": 2, \"line_content\": \"    TestCommand.finalize_options(self)\"}, {\"line_number\": 3, \"line_content\": \"    self.test_args = ['--doctest-modules', '--verbose', './httpie', './tests']\"}, {\"line_number\": 4, \"line_content\": \"    self.test_suite = True\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/psf/requests\", \"direct_link_to_file_line\": \"https://github.com/psf/requests/blob/master/setup.py#L25\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def finalize_options(self):\"}, {\"line_number\": 2, \"line_content\": \"    TestCommand.finalize_options(self)\"}, {\"line_number\": 3, \"line_content\": \"    self.test_args = []\"}, {\"line_number\": 4, \"line_content\": \"    self.test_suite = True\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ageitgey/face_recognition\", \"direct_link_to_file_line\": \"https://github.com/ageitgey/face_recognition/blob/master/face_recognition/face_recognition_cli.py#L35\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def print_result(filename, name, distance, show_distance=False):\"}, {\"line_number\": 2, \"line_content\": \"    if show_distance:\"}, {\"line_number\": 3, \"line_content\": \"        print('{},{},{}'.format(filename, name, distance))\"}, {\"line_number\": 4, \"line_content\": \"    else:\"}, {\"line_number\": 5, \"line_content\": \"        print('{},{}'.format(filename, name))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/scrapy/scrapy\", \"direct_link_to_file_line\": \"https://github.com/scrapy/scrapy/blob/master/conftest.py#L27\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@pytest.fixture()\"}, {\"line_number\": 2, \"line_content\": \"def chdir(tmpdir):\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"Change to pytest-provided temporary directory\\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    tmpdir.chdir()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/donnemartin/system-design-primer\", \"direct_link_to_file_line\": \"https://github.com/donnemartin/system-design-primer/blob/master/solutions/system_design/sales_rank/sales_rank_mapreduce.py#L66\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def steps(self):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Run the map and reduce steps.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    return [self.mr(mapper=self.mapper, reducer=self.reducer), self.mr(\"}, {\"line_number\": 4, \"line_content\": \"        mapper=self.mapper_sort, reducer=self.reducer_identity)]\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/scikit-learn/scikit-learn\", \"direct_link_to_file_line\": \"https://github.com/scikit-learn/scikit-learn/blob/master/conftest.py#L93\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def pytest_configure(config):\"}, {\"line_number\": 2, \"line_content\": \"    import sys\"}, {\"line_number\": 3, \"line_content\": \"    sys._is_pytest_session = True\"}, {\"line_number\": 4, \"line_content\": \"    config.addinivalue_line('markers',\"}, {\"line_number\": 5, \"line_content\": \"        'network: mark a test for execution if network available.')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ansible/ansible\", \"direct_link_to_file_line\": \"https://github.com/ansible/ansible/blob/master/setup.py#L275\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def read_file(file_name):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Read file and return its contents.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    with open(file_name, 'r') as f:\"}, {\"line_number\": 4, \"line_content\": \"        return f.read()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ytdl-org/youtube-dl\", \"direct_link_to_file_line\": \"https://github.com/ytdl-org/youtube-dl/blob/master/test/test_youtube_signature.py#L100\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def setUp(self):\"}, {\"line_number\": 2, \"line_content\": \"    TEST_DIR = os.path.dirname(os.path.abspath(__file__))\"}, {\"line_number\": 3, \"line_content\": \"    self.TESTDATA_DIR = os.path.join(TEST_DIR, 'testdata')\"}, {\"line_number\": 4, \"line_content\": \"    if not os.path.exists(self.TESTDATA_DIR):\"}, {\"line_number\": 5, \"line_content\": \"        os.mkdir(self.TESTDATA_DIR)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/nvbn/thefuck\", \"direct_link_to_file_line\": \"https://github.com/nvbn/thefuck/blob/master/thefuck/types.py#L26\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def stdout(self):\"}, {\"line_number\": 3, \"line_content\": \"    logs.warn('`stdout` is deprecated, please use `output` instead')\"}, {\"line_number\": 4, \"line_content\": \"    return self.output\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/home-assistant/core\", \"direct_link_to_file_line\": \"https://github.com/home-assistant/core/blob/master/script/lazytox.py#L40\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def validate_requirements_ok():\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Validate requirements, returns True of ok.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    from gen_requirements_all import main as req_main\"}, {\"line_number\": 4, \"line_content\": \"    return req_main(True) == 0\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/TheAlgorithms/Python\", \"direct_link_to_file_line\": \"https://github.com/TheAlgorithms/Python/blob/master/other/lfu_cache.py#L22\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self):\"}, {\"line_number\": 2, \"line_content\": \"    self.head = DoubleLinkedListNode(None, None)\"}, {\"line_number\": 3, \"line_content\": \"    self.rear = DoubleLinkedListNode(None, None)\"}, {\"line_number\": 4, \"line_content\": \"    self.head.next, self.rear.prev = self.rear, self.head\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tensorflow/models\", \"direct_link_to_file_line\": \"https://github.com/tensorflow/models/blob/master/official/core/base_trainer.py#L132\", \"contents\": {\"total_lines\": 4, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def train_loss(self):\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"Accesses the training loss metric object.\\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    return self._train_loss\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/soimort/you-get\", \"direct_link_to_file_line\": \"https://github.com/soimort/you-get/blob/master/tests/test.py#L43\", \"contents\": {\"total_lines\": 5, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_bilibil(self):\"}, {\"line_number\": 2, \"line_content\": \"    bilibili.download('https://www.bilibili.com/watchlater/#/BV1PE411q7mZ/p6',\"}, {\"line_number\": 3, \"line_content\": \"        info_only=True)\"}, {\"line_number\": 4, \"line_content\": \"    bilibili.download('https://www.bilibili.com/watchlater/#/av74906671/p6',\"}, {\"line_number\": 5, \"line_content\": \"        info_only=True)\"}]}}"], "medium": ["{\"type\": \"functions\", \"project_source\": \"https://github.com/huggingface/transformers\", \"direct_link_to_file_line\": \"https://github.com/huggingface/transformers/blob/master/utils/download_glue_data.py#L47\", \"contents\": {\"total_lines\": 8, \"lines\": [{\"line_number\": 1, \"line_content\": \"def download_and_extract(task, data_dir):\"}, {\"line_number\": 2, \"line_content\": \"    print('Downloading and extracting %s...' % task)\"}, {\"line_number\": 3, \"line_content\": \"    data_file = '%s.zip' % task\"}, {\"line_number\": 4, \"line_content\": \"    urllib.request.urlretrieve(TASK2PATH[task], data_file)\"}, {\"line_number\": 5, \"line_content\": \"    with zipfile.ZipFile(data_file) as zip_ref:\"}, {\"line_number\": 6, \"line_content\": \"        zip_ref.extractall(data_dir)\"}, {\"line_number\": 7, \"line_content\": \"    os.remove(data_file)\"}, {\"line_number\": 8, \"line_content\": \"    print('\\\\tCompleted!')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/keras-team/keras\", \"direct_link_to_file_line\": \"https://github.com/keras-team/keras/blob/master/keras/utils/generic_utils.py#L58\", \"contents\": {\"total_lines\": 6, \"lines\": [{\"line_number\": 1, \"line_content\": \"def is_all_none(iterable_or_element):\"}, {\"line_number\": 2, \"line_content\": \"    iterable = to_list(iterable_or_element, allow_tuple=True)\"}, {\"line_number\": 3, \"line_content\": \"    for element in iterable:\"}, {\"line_number\": 4, \"line_content\": \"        if element is not None:\"}, {\"line_number\": 5, \"line_content\": \"            return False\"}, {\"line_number\": 6, \"line_content\": \"    return True\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/django/django\", \"direct_link_to_file_line\": \"https://github.com/django/django/blob/master/scripts/manage_translations.py#L62\", \"contents\": {\"total_lines\": 6, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _tx_resource_for_name(name):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\" Return the Transifex resource name \\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    if name == 'core':\"}, {\"line_number\": 4, \"line_content\": \"        return 'django.core'\"}, {\"line_number\": 5, \"line_content\": \"    else:\"}, {\"line_number\": 6, \"line_content\": \"        return 'django.contrib-%s' % name\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/deepfakes/faceswap\", \"direct_link_to_file_line\": \"https://github.com/deepfakes/faceswap/blob/master/setup.py#L60\", \"contents\": {\"total_lines\": 8, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def is_admin(self):\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\" Check whether user is admin \\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    try:\"}, {\"line_number\": 5, \"line_content\": \"        retval = os.getuid() == 0\"}, {\"line_number\": 6, \"line_content\": \"    except AttributeError:\"}, {\"line_number\": 7, \"line_content\": \"        retval = ctypes.windll.shell32.IsUserAnAdmin() != 0\"}, {\"line_number\": 8, \"line_content\": \"    return retval\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pallets/flask\", \"direct_link_to_file_line\": \"https://github.com/pallets/flask/blob/master/tests/test_json_tag.py#L31\", \"contents\": {\"total_lines\": 8, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_duplicate_tag():\"}, {\"line_number\": 2, \"line_content\": \"    class TagDict(JSONTag):\"}, {\"line_number\": 3, \"line_content\": \"        key = ' d'\"}, {\"line_number\": 4, \"line_content\": \"    s = TaggedJSONSerializer()\"}, {\"line_number\": 5, \"line_content\": \"    pytest.raises(KeyError, s.register, TagDict)\"}, {\"line_number\": 6, \"line_content\": \"    s.register(TagDict, force=True, index=0)\"}, {\"line_number\": 7, \"line_content\": \"    assert isinstance(s.tags[' d'], TagDict)\"}, {\"line_number\": 8, \"line_content\": \"    assert isinstance(s.order[0], TagDict)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/python/cpython\", \"direct_link_to_file_line\": \"https://github.com/python/cpython/blob/master/setup.py#L49\", \"contents\": {\"total_lines\": 6, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_platform():\"}, {\"line_number\": 2, \"line_content\": \"    if '_PYTHON_HOST_PLATFORM' in os.environ:\"}, {\"line_number\": 3, \"line_content\": \"        return os.environ['_PYTHON_HOST_PLATFORM']\"}, {\"line_number\": 4, \"line_content\": \"    if sys.platform.startswith('osf1'):\"}, {\"line_number\": 5, \"line_content\": \"        return 'osf1'\"}, {\"line_number\": 6, \"line_content\": \"    return sys.platform\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/jakubroztocil/httpie\", \"direct_link_to_file_line\": \"https://github.com/jakubroztocil/httpie/blob/master/httpie/models.py#L19\", \"contents\": {\"total_lines\": 7, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def content_type(self) ->str:\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"Return the message content type.\\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    ct = self._orig.headers.get('Content-Type', '')\"}, {\"line_number\": 5, \"line_content\": \"    if not isinstance(ct, str):\"}, {\"line_number\": 6, \"line_content\": \"        ct = ct.decode('utf8')\"}, {\"line_number\": 7, \"line_content\": \"    return ct\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/psf/requests\", \"direct_link_to_file_line\": \"https://github.com/psf/requests/blob/master/setup.py#L17\", \"contents\": {\"total_lines\": 7, \"lines\": [{\"line_number\": 1, \"line_content\": \"def initialize_options(self):\"}, {\"line_number\": 2, \"line_content\": \"    TestCommand.initialize_options(self)\"}, {\"line_number\": 3, \"line_content\": \"    try:\"}, {\"line_number\": 4, \"line_content\": \"        from multiprocessing import cpu_count\"}, {\"line_number\": 5, \"line_content\": \"        self.pytest_args = ['-n', str(cpu_count()), '--boxed']\"}, {\"line_number\": 6, \"line_content\": \"    except (ImportError, NotImplementedError):\"}, {\"line_number\": 7, \"line_content\": \"        self.pytest_args = ['-n', '1', '--boxed']\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ageitgey/face_recognition\", \"direct_link_to_file_line\": \"https://github.com/ageitgey/face_recognition/blob/master/face_recognition/api.py#L32\", \"contents\": {\"total_lines\": 7, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _rect_to_css(rect):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    Convert a dlib 'rect' object to a plain tuple in (top, right, bottom, left) order\"}, {\"line_number\": 4, \"line_content\": \"    :param rect: a dlib 'rect' object\"}, {\"line_number\": 5, \"line_content\": \"    :return: a plain tuple representation of the rect in (top, right, bottom, left) order\"}, {\"line_number\": 6, \"line_content\": \"    \\\"\\\"\\\"\"}, {\"line_number\": 7, \"line_content\": \"    return rect.top(), rect.right(), rect.bottom(), rect.left()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/scrapy/scrapy\", \"direct_link_to_file_line\": \"https://github.com/scrapy/scrapy/blob/master/setup.py#L10\", \"contents\": {\"total_lines\": 8, \"lines\": [{\"line_number\": 1, \"line_content\": \"def has_environment_marker_platform_impl_support():\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Code extracted from 'pytest/setup.py'\"}, {\"line_number\": 3, \"line_content\": \"    https://github.com/pytest-dev/pytest/blob/7538680c/setup.py#L31\"}, {\"line_number\": 4, \"line_content\": \"    The first known release to support environment marker with range operators\"}, {\"line_number\": 5, \"line_content\": \"    it is 18.5, see:\"}, {\"line_number\": 6, \"line_content\": \"    https://setuptools.readthedocs.io/en/latest/history.html#id235\"}, {\"line_number\": 7, \"line_content\": \"    \\\"\\\"\\\"\"}, {\"line_number\": 8, \"line_content\": \"    return parse_version(setuptools_version) >= parse_version('18.5')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/donnemartin/system-design-primer\", \"direct_link_to_file_line\": \"https://github.com/donnemartin/system-design-primer/blob/master/solutions/system_design/pastebin/pastebin.py#L29\", \"contents\": {\"total_lines\": 6, \"lines\": [{\"line_number\": 1, \"line_content\": \"def reducer(self, key, values):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Sum values for each key.\"}, {\"line_number\": 3, \"line_content\": \"        (2016-01, url0), 2\"}, {\"line_number\": 4, \"line_content\": \"        (2016-01, url1), 1\"}, {\"line_number\": 5, \"line_content\": \"        \\\"\\\"\\\"\"}, {\"line_number\": 6, \"line_content\": \"    yield key, sum(values)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/scikit-learn/scikit-learn\", \"direct_link_to_file_line\": \"https://github.com/scikit-learn/scikit-learn/blob/master/setup.py#L118\", \"contents\": {\"total_lines\": 8, \"lines\": [{\"line_number\": 1, \"line_content\": \"def build_extensions(self):\"}, {\"line_number\": 2, \"line_content\": \"    from sklearn._build_utils.openmp_helpers import get_openmp_flag\"}, {\"line_number\": 3, \"line_content\": \"    if sklearn._OPENMP_SUPPORTED:\"}, {\"line_number\": 4, \"line_content\": \"        openmp_flag = get_openmp_flag(self.compiler)\"}, {\"line_number\": 5, \"line_content\": \"        for e in self.extensions:\"}, {\"line_number\": 6, \"line_content\": \"            e.extra_compile_args += openmp_flag\"}, {\"line_number\": 7, \"line_content\": \"            e.extra_link_args += openmp_flag\"}, {\"line_number\": 8, \"line_content\": \"    build_ext.build_extensions(self)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ansible/ansible\", \"direct_link_to_file_line\": \"https://github.com/ansible/ansible/blob/master/setup.py#L281\", \"contents\": {\"total_lines\": 8, \"lines\": [{\"line_number\": 1, \"line_content\": \"def read_requirements(file_name):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Read requirements file as a list.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    reqs = read_file(file_name).splitlines()\"}, {\"line_number\": 4, \"line_content\": \"    if not reqs:\"}, {\"line_number\": 5, \"line_content\": \"        raise RuntimeError(\"}, {\"line_number\": 6, \"line_content\": \"            'Unable to read requirements from the %s fileThat indicates this copy of the source code is incomplete.'\"}, {\"line_number\": 7, \"line_content\": \"             % file_name)\"}, {\"line_number\": 8, \"line_content\": \"    return reqs\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ytdl-org/youtube-dl\", \"direct_link_to_file_line\": \"https://github.com/ytdl-org/youtube-dl/blob/master/test/test_cache.py#L29\", \"contents\": {\"total_lines\": 6, \"lines\": [{\"line_number\": 1, \"line_content\": \"def setUp(self):\"}, {\"line_number\": 2, \"line_content\": \"    TEST_DIR = os.path.dirname(os.path.abspath(__file__))\"}, {\"line_number\": 3, \"line_content\": \"    TESTDATA_DIR = os.path.join(TEST_DIR, 'testdata')\"}, {\"line_number\": 4, \"line_content\": \"    _mkdir(TESTDATA_DIR)\"}, {\"line_number\": 5, \"line_content\": \"    self.test_dir = os.path.join(TESTDATA_DIR, 'cache_test')\"}, {\"line_number\": 6, \"line_content\": \"    self.tearDown()\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/nvbn/thefuck\", \"direct_link_to_file_line\": \"https://github.com/nvbn/thefuck/blob/master/thefuck/types.py#L16\", \"contents\": {\"total_lines\": 7, \"lines\": [{\"line_number\": 1, \"line_content\": \"def __init__(self, script, output):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Initializes command with given values.\"}, {\"line_number\": 3, \"line_content\": \"        :type script: basestring\"}, {\"line_number\": 4, \"line_content\": \"        :type output: basestring\"}, {\"line_number\": 5, \"line_content\": \"        \\\"\\\"\\\"\"}, {\"line_number\": 6, \"line_content\": \"    self.script = script\"}, {\"line_number\": 7, \"line_content\": \"    self.output = output\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/home-assistant/core\", \"direct_link_to_file_line\": \"https://github.com/home-assistant/core/blob/master/script/inspect_schemas.py#L11\", \"contents\": {\"total_lines\": 7, \"lines\": [{\"line_number\": 1, \"line_content\": \"def explore_module(package):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Explore the modules.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    module = importlib.import_module(package)\"}, {\"line_number\": 4, \"line_content\": \"    if not hasattr(module, '__path__'):\"}, {\"line_number\": 5, \"line_content\": \"        return []\"}, {\"line_number\": 6, \"line_content\": \"    for _, name, _ in pkgutil.iter_modules(module.__path__, f'{package}.'):\"}, {\"line_number\": 7, \"line_content\": \"        yield name\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/TheAlgorithms/Python\", \"direct_link_to_file_line\": \"https://github.com/TheAlgorithms/Python/blob/master/other/binary_exponentiation_2.py#L14\", \"contents\": {\"total_lines\": 8, \"lines\": [{\"line_number\": 1, \"line_content\": \"def b_expo(a, b):\"}, {\"line_number\": 2, \"line_content\": \"    res = 0\"}, {\"line_number\": 3, \"line_content\": \"    while b > 0:\"}, {\"line_number\": 4, \"line_content\": \"        if b & 1:\"}, {\"line_number\": 5, \"line_content\": \"            res += a\"}, {\"line_number\": 6, \"line_content\": \"        a += a\"}, {\"line_number\": 7, \"line_content\": \"        b >>= 1\"}, {\"line_number\": 8, \"line_content\": \"    return res\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tensorflow/models\", \"direct_link_to_file_line\": \"https://github.com/tensorflow/models/blob/master/official/core/train_lib_test.py#L42\", \"contents\": {\"total_lines\": 7, \"lines\": [{\"line_number\": 1, \"line_content\": \"def setUp(self):\"}, {\"line_number\": 2, \"line_content\": \"    super(TrainTest, self).setUp()\"}, {\"line_number\": 3, \"line_content\": \"    self._test_config = {'trainer': {'checkpoint_interval': 10,\"}, {\"line_number\": 4, \"line_content\": \"        'steps_per_loop': 10, 'summary_interval': 10, 'train_steps': 10,\"}, {\"line_number\": 5, \"line_content\": \"        'validation_steps': 5, 'validation_interval': 10,\"}, {\"line_number\": 6, \"line_content\": \"        'continuous_eval_timeout': 1, 'optimizer_config': {'optimizer': {\"}, {\"line_number\": 7, \"line_content\": \"        'type': 'sgd'}, 'learning_rate': {'type': 'constant'}}}}\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/soimort/you-get\", \"direct_link_to_file_line\": \"https://github.com/soimort/you-get/blob/master/tests/test.py#L61\", \"contents\": {\"total_lines\": 8, \"lines\": [{\"line_number\": 1, \"line_content\": \"def tests_tiktok(self):\"}, {\"line_number\": 2, \"line_content\": \"    tiktok.download(\"}, {\"line_number\": 3, \"line_content\": \"        'https://www.tiktok.com/@nmb48_official/video/6850796940293164290',\"}, {\"line_number\": 4, \"line_content\": \"        info_only=True)\"}, {\"line_number\": 5, \"line_content\": \"    tiktok.download(\"}, {\"line_number\": 6, \"line_content\": \"        'https://t.tiktok.com/i18n/share/video/6850796940293164290/',\"}, {\"line_number\": 7, \"line_content\": \"        info_only=True)\"}, {\"line_number\": 8, \"line_content\": \"    tiktok.download('https://vt.tiktok.com/UGJR4R/', info_only=True)\"}]}}"], "large": ["{\"type\": \"functions\", \"project_source\": \"https://github.com/huggingface/transformers\", \"direct_link_to_file_line\": \"https://github.com/huggingface/transformers/blob/master/hubconf.py#L42\", \"contents\": {\"total_lines\": 9, \"lines\": [{\"line_number\": 1, \"line_content\": \"@add_start_docstrings(AutoTokenizer.__doc__)\"}, {\"line_number\": 2, \"line_content\": \"def tokenizer(*args, **kwargs):\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"        # Using torch.hub !\"}, {\"line_number\": 5, \"line_content\": \"        import torch\"}, {\"line_number\": 6, \"line_content\": \"        tokenizer = torch.hub.load('huggingface/transformers', 'tokenizer', 'bert-base-uncased')    # Download vocabulary from S3 and cache.\"}, {\"line_number\": 7, \"line_content\": \"        tokenizer = torch.hub.load('huggingface/transformers', 'tokenizer', './test/bert_saved_model/')  # E.g. tokenizer was saved using `save_pretrained('./test/saved_model/')`\"}, {\"line_number\": 8, \"line_content\": \"    \\\"\\\"\\\"\"}, {\"line_number\": 9, \"line_content\": \"    return AutoTokenizer.from_pretrained(*args, **kwargs)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/keras-team/keras\", \"direct_link_to_file_line\": \"https://github.com/keras-team/keras/blob/master/keras/utils/generic_utils.py#L37\", \"contents\": {\"total_lines\": 11, \"lines\": [{\"line_number\": 1, \"line_content\": \"def unpack_singleton(x):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Gets the first element if the iterable has only one value.\"}, {\"line_number\": 3, \"line_content\": \"    Otherwise return the iterable.\"}, {\"line_number\": 4, \"line_content\": \"    # Argument\"}, {\"line_number\": 5, \"line_content\": \"        x: A list or tuple.\"}, {\"line_number\": 6, \"line_content\": \"    # Returns\"}, {\"line_number\": 7, \"line_content\": \"        The same iterable or the first element.\"}, {\"line_number\": 8, \"line_content\": \"    \\\"\\\"\\\"\"}, {\"line_number\": 9, \"line_content\": \"    if len(x) == 1:\"}, {\"line_number\": 10, \"line_content\": \"        return x[0]\"}, {\"line_number\": 11, \"line_content\": \"    return x\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/521xueweihan/HelloGitHub\", \"direct_link_to_file_line\": \"https://github.com/521xueweihan/HelloGitHub/blob/master/script/make_content/make_content.py#L33\", \"contents\": {\"total_lines\": 9, \"lines\": [{\"line_number\": 1, \"line_content\": \"def check_path(path):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    \\u68c0\\u67e5\\u8def\\u5f84\\u662f\\u5426\\u5b58\\u5728\"}, {\"line_number\": 4, \"line_content\": \"    \\\"\\\"\\\"\"}, {\"line_number\": 5, \"line_content\": \"    if not os.path.exists(path):\"}, {\"line_number\": 6, \"line_content\": \"        print('not exist: {path}'.format(path=path))\"}, {\"line_number\": 7, \"line_content\": \"        return False\"}, {\"line_number\": 8, \"line_content\": \"    else:\"}, {\"line_number\": 9, \"line_content\": \"        return True\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/django/django\", \"direct_link_to_file_line\": \"https://github.com/django/django/blob/master/scripts/manage_translations.py#L70\", \"contents\": {\"total_lines\": 11, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _check_diff(cat_name, base_path):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    Output the approximate number of changed/added strings in the en catalog.\"}, {\"line_number\": 4, \"line_content\": \"    \\\"\\\"\\\"\"}, {\"line_number\": 5, \"line_content\": \"    po_path = '%(path)s/en/LC_MESSAGES/django%(ext)s.po' % {'path':\"}, {\"line_number\": 6, \"line_content\": \"        base_path, 'ext': 'js' if cat_name.endswith('-js') else ''}\"}, {\"line_number\": 7, \"line_content\": \"    p = run(\\\"git diff -U0 %s | egrep '^[-+]msgid' | wc -l\\\" % po_path,\"}, {\"line_number\": 8, \"line_content\": \"        stdout=PIPE, stderr=PIPE, shell=True)\"}, {\"line_number\": 9, \"line_content\": \"    num_changes = int(p.stdout.strip())\"}, {\"line_number\": 10, \"line_content\": \"    print(\\\"%d changed/added messages in '%s' catalog.\\\" % (num_changes,\"}, {\"line_number\": 11, \"line_content\": \"        cat_name))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/deepfakes/faceswap\", \"direct_link_to_file_line\": \"https://github.com/deepfakes/faceswap/blob/master/setup.py#L60\", \"contents\": {\"total_lines\": 8, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def is_admin(self):\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\" Check whether user is admin \\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    try:\"}, {\"line_number\": 5, \"line_content\": \"        retval = os.getuid() == 0\"}, {\"line_number\": 6, \"line_content\": \"    except AttributeError:\"}, {\"line_number\": 7, \"line_content\": \"        retval = ctypes.windll.shell32.IsUserAnAdmin() != 0\"}, {\"line_number\": 8, \"line_content\": \"    return retval\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/pallets/flask\", \"direct_link_to_file_line\": \"https://github.com/pallets/flask/blob/master/tests/test_json_tag.py#L31\", \"contents\": {\"total_lines\": 8, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_duplicate_tag():\"}, {\"line_number\": 2, \"line_content\": \"    class TagDict(JSONTag):\"}, {\"line_number\": 3, \"line_content\": \"        key = ' d'\"}, {\"line_number\": 4, \"line_content\": \"    s = TaggedJSONSerializer()\"}, {\"line_number\": 5, \"line_content\": \"    pytest.raises(KeyError, s.register, TagDict)\"}, {\"line_number\": 6, \"line_content\": \"    s.register(TagDict, force=True, index=0)\"}, {\"line_number\": 7, \"line_content\": \"    assert isinstance(s.tags[' d'], TagDict)\"}, {\"line_number\": 8, \"line_content\": \"    assert isinstance(s.order[0], TagDict)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/python/cpython\", \"direct_link_to_file_line\": \"https://github.com/python/cpython/blob/master/setup.py#L346\", \"contents\": {\"total_lines\": 9, \"lines\": [{\"line_number\": 1, \"line_content\": \"def find_module_file(module, dirlist):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Find a module in a set of possible folders. If it is not found\"}, {\"line_number\": 3, \"line_content\": \"    return the unadorned filename\\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    list = find_file(module, [], dirlist)\"}, {\"line_number\": 5, \"line_content\": \"    if not list:\"}, {\"line_number\": 6, \"line_content\": \"        return module\"}, {\"line_number\": 7, \"line_content\": \"    if len(list) > 1:\"}, {\"line_number\": 8, \"line_content\": \"        log.info('WARNING: multiple copies of %s found', module)\"}, {\"line_number\": 9, \"line_content\": \"    return os.path.join(list[0], module)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/public-apis/public-apis\", \"direct_link_to_file_line\": \"https://github.com/public-apis/public-apis/blob/master/build/validate_format.py#L163\", \"contents\": {\"total_lines\": 9, \"lines\": [{\"line_number\": 1, \"line_content\": \"def main():\"}, {\"line_number\": 2, \"line_content\": \"    if len(sys.argv) < 2:\"}, {\"line_number\": 3, \"line_content\": \"        print('No file passed (file should contain Markdown table syntax)')\"}, {\"line_number\": 4, \"line_content\": \"        sys.exit(1)\"}, {\"line_number\": 5, \"line_content\": \"    check_format(sys.argv[1])\"}, {\"line_number\": 6, \"line_content\": \"    if len(errors) > 0:\"}, {\"line_number\": 7, \"line_content\": \"        for err in errors:\"}, {\"line_number\": 8, \"line_content\": \"            print(err)\"}, {\"line_number\": 9, \"line_content\": \"        sys.exit(1)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/jakubroztocil/httpie\", \"direct_link_to_file_line\": \"https://github.com/jakubroztocil/httpie/blob/master/httpie/client.py#L135\", \"contents\": {\"total_lines\": 8, \"lines\": [{\"line_number\": 1, \"line_content\": \"@contextmanager\"}, {\"line_number\": 2, \"line_content\": \"def max_headers(limit):\"}, {\"line_number\": 3, \"line_content\": \"    orig = http.client._MAXHEADERS\"}, {\"line_number\": 4, \"line_content\": \"    http.client._MAXHEADERS = limit or float('Inf')\"}, {\"line_number\": 5, \"line_content\": \"    try:\"}, {\"line_number\": 6, \"line_content\": \"        yield\"}, {\"line_number\": 7, \"line_content\": \"    finally:\"}, {\"line_number\": 8, \"line_content\": \"        http.client._MAXHEADERS = orig\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/psf/requests\", \"direct_link_to_file_line\": \"https://github.com/psf/requests/blob/master/requests/models.py#L175\", \"contents\": {\"total_lines\": 9, \"lines\": [{\"line_number\": 1, \"line_content\": \"def register_hook(self, event, hook):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Properly register a hook.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    if event not in self.hooks:\"}, {\"line_number\": 4, \"line_content\": \"        raise ValueError(\"}, {\"line_number\": 5, \"line_content\": \"            'Unsupported event specified, with event name \\\"%s\\\"' % event)\"}, {\"line_number\": 6, \"line_content\": \"    if isinstance(hook, Callable):\"}, {\"line_number\": 7, \"line_content\": \"        self.hooks[event].append(hook)\"}, {\"line_number\": 8, \"line_content\": \"    elif hasattr(hook, '__iter__'):\"}, {\"line_number\": 9, \"line_content\": \"        self.hooks[event].extend(h for h in hook if isinstance(h, Callable))\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ageitgey/face_recognition\", \"direct_link_to_file_line\": \"https://github.com/ageitgey/face_recognition/blob/master/face_recognition/api.py#L52\", \"contents\": {\"total_lines\": 9, \"lines\": [{\"line_number\": 1, \"line_content\": \"def _trim_css_to_bounds(css, image_shape):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    Make sure a tuple in (top, right, bottom, left) order is within the bounds of the image.\"}, {\"line_number\": 4, \"line_content\": \"    :param css:  plain tuple representation of the rect in (top, right, bottom, left) order\"}, {\"line_number\": 5, \"line_content\": \"    :param image_shape: numpy shape of the image array\"}, {\"line_number\": 6, \"line_content\": \"    :return: a trimmed plain tuple representation of the rect in (top, right, bottom, left) order\"}, {\"line_number\": 7, \"line_content\": \"    \\\"\\\"\\\"\"}, {\"line_number\": 8, \"line_content\": \"    return max(css[0], 0), min(css[1], image_shape[1]), min(css[2],\"}, {\"line_number\": 9, \"line_content\": \"        image_shape[0]), max(css[3], 0)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/scrapy/scrapy\", \"direct_link_to_file_line\": \"https://github.com/scrapy/scrapy/blob/master/setup.py#L10\", \"contents\": {\"total_lines\": 8, \"lines\": [{\"line_number\": 1, \"line_content\": \"def has_environment_marker_platform_impl_support():\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Code extracted from 'pytest/setup.py'\"}, {\"line_number\": 3, \"line_content\": \"    https://github.com/pytest-dev/pytest/blob/7538680c/setup.py#L31\"}, {\"line_number\": 4, \"line_content\": \"    The first known release to support environment marker with range operators\"}, {\"line_number\": 5, \"line_content\": \"    it is 18.5, see:\"}, {\"line_number\": 6, \"line_content\": \"    https://setuptools.readthedocs.io/en/latest/history.html#id235\"}, {\"line_number\": 7, \"line_content\": \"    \\\"\\\"\\\"\"}, {\"line_number\": 8, \"line_content\": \"    return parse_version(setuptools_version) >= parse_version('18.5')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/donnemartin/system-design-primer\", \"direct_link_to_file_line\": \"https://github.com/donnemartin/system-design-primer/blob/master/solutions/system_design/sales_rank/sales_rank_mapreduce.py#L28\", \"contents\": {\"total_lines\": 9, \"lines\": [{\"line_number\": 1, \"line_content\": \"def reducer(self, key, values):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Sum values for each key.\"}, {\"line_number\": 3, \"line_content\": \"        (foo, p1), 2\"}, {\"line_number\": 4, \"line_content\": \"        (bar, p1), 3\"}, {\"line_number\": 5, \"line_content\": \"        (foo, p2), 3\"}, {\"line_number\": 6, \"line_content\": \"        (bar, p3), 10\"}, {\"line_number\": 7, \"line_content\": \"        (foo, p4), 1\"}, {\"line_number\": 8, \"line_content\": \"        \\\"\\\"\\\"\"}, {\"line_number\": 9, \"line_content\": \"    yield key, sum(values)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/scikit-learn/scikit-learn\", \"direct_link_to_file_line\": \"https://github.com/scikit-learn/scikit-learn/blob/master/setup.py#L118\", \"contents\": {\"total_lines\": 8, \"lines\": [{\"line_number\": 1, \"line_content\": \"def build_extensions(self):\"}, {\"line_number\": 2, \"line_content\": \"    from sklearn._build_utils.openmp_helpers import get_openmp_flag\"}, {\"line_number\": 3, \"line_content\": \"    if sklearn._OPENMP_SUPPORTED:\"}, {\"line_number\": 4, \"line_content\": \"        openmp_flag = get_openmp_flag(self.compiler)\"}, {\"line_number\": 5, \"line_content\": \"        for e in self.extensions:\"}, {\"line_number\": 6, \"line_content\": \"            e.extra_compile_args += openmp_flag\"}, {\"line_number\": 7, \"line_content\": \"            e.extra_link_args += openmp_flag\"}, {\"line_number\": 8, \"line_content\": \"    build_ext.build_extensions(self)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ansible/ansible\", \"direct_link_to_file_line\": \"https://github.com/ansible/ansible/blob/master/setup.py#L281\", \"contents\": {\"total_lines\": 8, \"lines\": [{\"line_number\": 1, \"line_content\": \"def read_requirements(file_name):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Read requirements file as a list.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    reqs = read_file(file_name).splitlines()\"}, {\"line_number\": 4, \"line_content\": \"    if not reqs:\"}, {\"line_number\": 5, \"line_content\": \"        raise RuntimeError(\"}, {\"line_number\": 6, \"line_content\": \"            'Unable to read requirements from the %s fileThat indicates this copy of the source code is incomplete.'\"}, {\"line_number\": 7, \"line_content\": \"             % file_name)\"}, {\"line_number\": 8, \"line_content\": \"    return reqs\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/ytdl-org/youtube-dl\", \"direct_link_to_file_line\": \"https://github.com/ytdl-org/youtube-dl/blob/master/test/test_verbose_output.py#L17\", \"contents\": {\"total_lines\": 9, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_private_info_arg(self):\"}, {\"line_number\": 2, \"line_content\": \"    outp = subprocess.Popen([sys.executable, 'youtube_dl/__main__.py', '-v',\"}, {\"line_number\": 3, \"line_content\": \"        '--username', 'johnsmith@gmail.com', '--password', 'secret'], cwd=\"}, {\"line_number\": 4, \"line_content\": \"        rootDir, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\"}, {\"line_number\": 5, \"line_content\": \"    sout, serr = outp.communicate()\"}, {\"line_number\": 6, \"line_content\": \"    self.assertTrue(b'--username' in serr)\"}, {\"line_number\": 7, \"line_content\": \"    self.assertTrue(b'johnsmith' not in serr)\"}, {\"line_number\": 8, \"line_content\": \"    self.assertTrue(b'--password' in serr)\"}, {\"line_number\": 9, \"line_content\": \"    self.assertTrue(b'secret' not in serr)\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/nvbn/thefuck\", \"direct_link_to_file_line\": \"https://github.com/nvbn/thefuck/blob/master/release.py#L10\", \"contents\": {\"total_lines\": 11, \"lines\": [{\"line_number\": 1, \"line_content\": \"def get_new_setup_py_lines():\"}, {\"line_number\": 2, \"line_content\": \"    global version\"}, {\"line_number\": 3, \"line_content\": \"    with open('setup.py', 'r') as sf:\"}, {\"line_number\": 4, \"line_content\": \"        current_setup = sf.readlines()\"}, {\"line_number\": 5, \"line_content\": \"    for line in current_setup:\"}, {\"line_number\": 6, \"line_content\": \"        if line.startswith('VERSION = '):\"}, {\"line_number\": 7, \"line_content\": \"            major, minor = re.findall(\\\"VERSION = '(\\\\\\\\d+)\\\\\\\\.(\\\\\\\\d+)'\\\", line)[0]\"}, {\"line_number\": 8, \"line_content\": \"            version = '{}.{}'.format(major, int(minor) + 1)\"}, {\"line_number\": 9, \"line_content\": \"            yield \\\"VERSION = '{}'\\\\n\\\".format(version)\"}, {\"line_number\": 10, \"line_content\": \"        else:\"}, {\"line_number\": 11, \"line_content\": \"            yield line\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/home-assistant/core\", \"direct_link_to_file_line\": \"https://github.com/home-assistant/core/blob/master/script/lazytox.py#L27\", \"contents\": {\"total_lines\": 11, \"lines\": [{\"line_number\": 1, \"line_content\": \"def printc(the_color, *args):\"}, {\"line_number\": 2, \"line_content\": \"    \\\"\\\"\\\"Color print helper.\\\"\\\"\\\"\"}, {\"line_number\": 3, \"line_content\": \"    msg = ' '.join(args)\"}, {\"line_number\": 4, \"line_content\": \"    if not escape_codes:\"}, {\"line_number\": 5, \"line_content\": \"        print(msg)\"}, {\"line_number\": 6, \"line_content\": \"        return\"}, {\"line_number\": 7, \"line_content\": \"    try:\"}, {\"line_number\": 8, \"line_content\": \"        print(escape_codes[the_color] + msg + escape_codes['reset'])\"}, {\"line_number\": 9, \"line_content\": \"    except KeyError:\"}, {\"line_number\": 10, \"line_content\": \"        print(msg)\"}, {\"line_number\": 11, \"line_content\": \"        raise ValueError(f'Invalid color {the_color}')\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/TheAlgorithms/Python\", \"direct_link_to_file_line\": \"https://github.com/TheAlgorithms/Python/blob/master/other/binary_exponentiation_2.py#L14\", \"contents\": {\"total_lines\": 8, \"lines\": [{\"line_number\": 1, \"line_content\": \"def b_expo(a, b):\"}, {\"line_number\": 2, \"line_content\": \"    res = 0\"}, {\"line_number\": 3, \"line_content\": \"    while b > 0:\"}, {\"line_number\": 4, \"line_content\": \"        if b & 1:\"}, {\"line_number\": 5, \"line_content\": \"            res += a\"}, {\"line_number\": 6, \"line_content\": \"        a += a\"}, {\"line_number\": 7, \"line_content\": \"        b >>= 1\"}, {\"line_number\": 8, \"line_content\": \"    return res\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/tensorflow/models\", \"direct_link_to_file_line\": \"https://github.com/tensorflow/models/blob/master/official/core/input_reader.py#L219\", \"contents\": {\"total_lines\": 9, \"lines\": [{\"line_number\": 1, \"line_content\": \"@property\"}, {\"line_number\": 2, \"line_content\": \"def tfds_info(self) ->tfds.core.DatasetInfo:\"}, {\"line_number\": 3, \"line_content\": \"    \\\"\\\"\\\"Returns TFDS dataset info, if available.\\\"\\\"\\\"\"}, {\"line_number\": 4, \"line_content\": \"    if self._tfds_builder:\"}, {\"line_number\": 5, \"line_content\": \"        return self._tfds_builder.info\"}, {\"line_number\": 6, \"line_content\": \"    else:\"}, {\"line_number\": 7, \"line_content\": \"        raise ValueError(\"}, {\"line_number\": 8, \"line_content\": \"            'tfds_info is not available, because the dataset is not loaded from tfds.'\"}, {\"line_number\": 9, \"line_content\": \"            )\"}]}}", "{\"type\": \"functions\", \"project_source\": \"https://github.com/soimort/you-get\", \"direct_link_to_file_line\": \"https://github.com/soimort/you-get/blob/master/tests/test.py#L27\", \"contents\": {\"total_lines\": 9, \"lines\": [{\"line_number\": 1, \"line_content\": \"def test_youtube(self):\"}, {\"line_number\": 2, \"line_content\": \"    youtube.download('http://www.youtube.com/watch?v=pzKerr0JIPA',\"}, {\"line_number\": 3, \"line_content\": \"        info_only=True)\"}, {\"line_number\": 4, \"line_content\": \"    youtube.download('http://youtu.be/pzKerr0JIPA', info_only=True)\"}, {\"line_number\": 5, \"line_content\": \"    youtube.download(\"}, {\"line_number\": 6, \"line_content\": \"        'http://www.youtube.com/attribution_link?u=/watch?v%3DldAKIzq7bvs%26feature%3Dshare'\"}, {\"line_number\": 7, \"line_content\": \"        , info_only=True)\"}, {\"line_number\": 8, \"line_content\": \"    youtube.download('https://www.youtube.com/watch?v=Fpr4fQSh1cc',\"}, {\"line_number\": 9, \"line_content\": \"        info_only=True)\"}]}}"]}}